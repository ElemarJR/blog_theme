# Development project infrastructure generated over the Docker. For see how up
# the infrastructure read the README file.

version: "2"

services:
  # PHP 7.1 with project required extensions.
  php:
    build:
      context: ./app/docker/php
    volumes:
      - .:/app
      - ./.ssh:/root/.ssh
    depends_on:
      - db

  # Image for install and update project PHP packages.
  composer:
    image: composer
    volumes:
      - .:/app
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/composer

  # Database image to run the mysql
  db:
    image: mariadb:10.3
    ports:
        - "3306:3306"
    volumes:
       - ./database:/var/lib/mysql
       - ./app/initdb:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: project
      MYSQL_USER: project
      MYSQL_PASSWORD: project

  # Test SMTP server
  smtp:
    image: schickling/mailcatcher
    restart: always
    ports:
      - "1025:1025"
      - "1080:1080"
    environment:
      MAILCATCHER_PORT: 1025

  # Run the applicatiion over HTTP on localhost:8080
  # Nginx
  server:
    build:
      context: ./app/docker/nginx
    links:
      - wordpress
    ports:
      - "8080:8080"
    volumes:
      - .:/var/www/html

  # PHP-FPM with WP dependencies
  wordpress:
    build:
      context: ./app/docker/wp-fpm
      dockerfile: wp-fpm-72.Dockerfile
    volumes:
      - .:/var/www/html
    environment:
      PHP_XDEBUG_REMOTE_ENABLE: "On"
      PHP_XDEBUG_REMOTE_HOST: "10.254.254.254"
      PHP_XDEBUG_IDEKEY: "xdebug_idekey"
    depends_on:
      - db
      - smtp

  # Node 8.2 with Grunt and Bower
  node:
    build:
      context: ./app/docker/node
    volumes:
      - .:/app

  # Watch changes in the project and update the files local server
  watch:
    command: grunt watch
    build:
      context: ./app/docker/node
    ports:
      - "35729:35729"
    volumes:
      - .:/app
