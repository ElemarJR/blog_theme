<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.9.1" created="2017-12-04 23:55" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>WordPress</title>
	<link>http://localhost:8080</link>
	<description>Just another WordPress site</description>
	<pubDate>Mon, 04 Dec 2017 23:55:28 +0000</pubDate>
	<language>pt-BR</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://localhost:8080</wp:base_site_url>
	<wp:base_blog_url>http://localhost:8080</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[admin]]></wp:author_login><wp:author_email><![CDATA[admin@admin.com]]></wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login><![CDATA[elemarjr]]></wp:author_login><wp:author_email><![CDATA[elemarjr@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[elemarjr]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category>
		<wp:term_id>2</wp:term_id>
		<wp:category_nicename><![CDATA[architecture]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Architecture]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>3</wp:term_id>
		<wp:category_nicename><![CDATA[arquitetura]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Arquitetura]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>4</wp:term_id>
		<wp:category_nicename><![CDATA[carreira]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Carreira]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>5</wp:term_id>
		<wp:category_nicename><![CDATA[code]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Code]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>6</wp:term_id>
		<wp:category_nicename><![CDATA[codigo]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Código]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>7</wp:term_id>
		<wp:category_nicename><![CDATA[comunicado]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Comunicado]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>8</wp:term_id>
		<wp:category_nicename><![CDATA[estrategia]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Estratégia]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[news]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[News]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>10</wp:term_id>
		<wp:category_nicename><![CDATA[sem-categoria-en]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Sem categoria]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
	</wp:category>
	<wp:tag>
		<wp:term_id>11</wp:term_id>
		<wp:tag_slug><![CDATA[adapters]]></wp:tag_slug>
		<wp:tag_name><![CDATA[adapters]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>12</wp:term_id>
		<wp:tag_slug><![CDATA[aspnet]]></wp:tag_slug>
		<wp:tag_name><![CDATA[aspnet]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>13</wp:term_id>
		<wp:tag_slug><![CDATA[aspnet-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[aspnet]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>14</wp:term_id>
		<wp:tag_slug><![CDATA[aspnetcore]]></wp:tag_slug>
		<wp:tag_name><![CDATA[aspnetcore]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>15</wp:term_id>
		<wp:tag_slug><![CDATA[aspnetcore-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[aspnetcore]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>16</wp:term_id>
		<wp:tag_slug><![CDATA[async]]></wp:tag_slug>
		<wp:tag_name><![CDATA[async]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>17</wp:term_id>
		<wp:tag_slug><![CDATA[async-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[async]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>18</wp:term_id>
		<wp:tag_slug><![CDATA[build]]></wp:tag_slug>
		<wp:tag_name><![CDATA[build]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>19</wp:term_id>
		<wp:tag_slug><![CDATA[c]]></wp:tag_slug>
		<wp:tag_name><![CDATA[c++]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>20</wp:term_id>
		<wp:tag_slug><![CDATA[c-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[c++]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>21</wp:term_id>
		<wp:tag_slug><![CDATA[cake]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cake]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>22</wp:term_id>
		<wp:tag_slug><![CDATA[carreira]]></wp:tag_slug>
		<wp:tag_name><![CDATA[carreira]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>23</wp:term_id>
		<wp:tag_slug><![CDATA[challenge]]></wp:tag_slug>
		<wp:tag_name><![CDATA[challenge]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>24</wp:term_id>
		<wp:tag_slug><![CDATA[codigo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Código]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>25</wp:term_id>
		<wp:tag_slug><![CDATA[command]]></wp:tag_slug>
		<wp:tag_name><![CDATA[command]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>26</wp:term_id>
		<wp:tag_slug><![CDATA[composition]]></wp:tag_slug>
		<wp:tag_name><![CDATA[composition]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>27</wp:term_id>
		<wp:tag_slug><![CDATA[computer-vision]]></wp:tag_slug>
		<wp:tag_name><![CDATA[computer vision]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>28</wp:term_id>
		<wp:tag_slug><![CDATA[cpp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cpp]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>29</wp:term_id>
		<wp:tag_slug><![CDATA[cpp-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cpp]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>30</wp:term_id>
		<wp:tag_slug><![CDATA[cpp17]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cpp17]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>31</wp:term_id>
		<wp:tag_slug><![CDATA[cpp17-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cpp17]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>32</wp:term_id>
		<wp:tag_slug><![CDATA[crm-jorney]]></wp:tag_slug>
		<wp:tag_name><![CDATA[crm jorney]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>33</wp:term_id>
		<wp:tag_slug><![CDATA[crm-journey]]></wp:tag_slug>
		<wp:tag_name><![CDATA[crm journey]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>34</wp:term_id>
		<wp:tag_slug><![CDATA[csharp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[csharp]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>35</wp:term_id>
		<wp:tag_slug><![CDATA[csharp-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[csharp]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>36</wp:term_id>
		<wp:tag_slug><![CDATA[data-science]]></wp:tag_slug>
		<wp:tag_name><![CDATA[data science]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>37</wp:term_id>
		<wp:tag_slug><![CDATA[data-science-en]]></wp:tag_slug>
		<wp:tag_name><![CDATA[data science]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>38</wp:term_id>
		<wp:tag_slug><![CDATA[ddd]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DDD]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>39</wp:term_id>
		<wp:tag_slug><![CDATA[desafio]]></wp:tag_slug>
		<wp:tag_name><![CDATA[desafio]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>40</wp:term_id>
		<wp:tag_slug><![CDATA[dispose]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dispose]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>41</wp:term_id>
		<wp:tag_slug><![CDATA[dotnet]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dotnet]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>42</wp:term_id>
		<wp:tag_slug><![CDATA[dotnet-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dotnet]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>43</wp:term_id>
		<wp:tag_slug><![CDATA[either]]></wp:tag_slug>
		<wp:tag_name><![CDATA[either]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>44</wp:term_id>
		<wp:tag_slug><![CDATA[either-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[either]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>45</wp:term_id>
		<wp:tag_slug><![CDATA[empreendedorismo]]></wp:tag_slug>
		<wp:tag_name><![CDATA[empreendedorismo]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>46</wp:term_id>
		<wp:tag_slug><![CDATA[estrategia]]></wp:tag_slug>
		<wp:tag_name><![CDATA[estratégia]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>47</wp:term_id>
		<wp:tag_slug><![CDATA[exceptions]]></wp:tag_slug>
		<wp:tag_name><![CDATA[exceptions]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>48</wp:term_id>
		<wp:tag_slug><![CDATA[exceptions-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[exceptions]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>49</wp:term_id>
		<wp:tag_slug><![CDATA[funcional]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Funcional]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>50</wp:term_id>
		<wp:tag_slug><![CDATA[functional]]></wp:tag_slug>
		<wp:tag_name><![CDATA[functional]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>51</wp:term_id>
		<wp:tag_slug><![CDATA[gof]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gof]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>52</wp:term_id>
		<wp:tag_slug><![CDATA[gof-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gof]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>53</wp:term_id>
		<wp:tag_slug><![CDATA[hexagonal]]></wp:tag_slug>
		<wp:tag_name><![CDATA[hexagonal]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>54</wp:term_id>
		<wp:tag_slug><![CDATA[hexagonal-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[hexagonal]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>55</wp:term_id>
		<wp:tag_slug><![CDATA[identity]]></wp:tag_slug>
		<wp:tag_name><![CDATA[identity]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>56</wp:term_id>
		<wp:tag_slug><![CDATA[identity-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[identity]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>57</wp:term_id>
		<wp:tag_slug><![CDATA[index]]></wp:tag_slug>
		<wp:tag_name><![CDATA[index]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>58</wp:term_id>
		<wp:tag_slug><![CDATA[indexes]]></wp:tag_slug>
		<wp:tag_name><![CDATA[indexes]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>59</wp:term_id>
		<wp:tag_slug><![CDATA[inovacao]]></wp:tag_slug>
		<wp:tag_name><![CDATA[inovação]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>60</wp:term_id>
		<wp:tag_slug><![CDATA[isolamento]]></wp:tag_slug>
		<wp:tag_name><![CDATA[isolamento]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>61</wp:term_id>
		<wp:tag_slug><![CDATA[java]]></wp:tag_slug>
		<wp:tag_name><![CDATA[java]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>62</wp:term_id>
		<wp:tag_slug><![CDATA[java-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[java]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>63</wp:term_id>
		<wp:tag_slug><![CDATA[javascript]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Javascript]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>64</wp:term_id>
		<wp:tag_slug><![CDATA[javascript-en]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Javascript]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>65</wp:term_id>
		<wp:tag_slug><![CDATA[lessons-learned]]></wp:tag_slug>
		<wp:tag_name><![CDATA[lessons learned]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>66</wp:term_id>
		<wp:tag_slug><![CDATA[lucene]]></wp:tag_slug>
		<wp:tag_name><![CDATA[lucene]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>67</wp:term_id>
		<wp:tag_slug><![CDATA[membership]]></wp:tag_slug>
		<wp:tag_name><![CDATA[membership]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>68</wp:term_id>
		<wp:tag_slug><![CDATA[membership-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[membership]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>69</wp:term_id>
		<wp:tag_slug><![CDATA[mentoria]]></wp:tag_slug>
		<wp:tag_name><![CDATA[mentoria]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>70</wp:term_id>
		<wp:tag_slug><![CDATA[microservices]]></wp:tag_slug>
		<wp:tag_name><![CDATA[microservices]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>71</wp:term_id>
		<wp:tag_slug><![CDATA[microservico]]></wp:tag_slug>
		<wp:tag_name><![CDATA[microserviço]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>72</wp:term_id>
		<wp:tag_slug><![CDATA[opencv]]></wp:tag_slug>
		<wp:tag_name><![CDATA[opencv]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>73</wp:term_id>
		<wp:tag_slug><![CDATA[opencv-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[opencv]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>74</wp:term_id>
		<wp:tag_slug><![CDATA[option]]></wp:tag_slug>
		<wp:tag_name><![CDATA[option]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>75</wp:term_id>
		<wp:tag_slug><![CDATA[option-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[option]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>76</wp:term_id>
		<wp:tag_slug><![CDATA[padrao]]></wp:tag_slug>
		<wp:tag_name><![CDATA[padrão]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>77</wp:term_id>
		<wp:tag_slug><![CDATA[padroes]]></wp:tag_slug>
		<wp:tag_name><![CDATA[padrões]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>78</wp:term_id>
		<wp:tag_slug><![CDATA[palestras]]></wp:tag_slug>
		<wp:tag_name><![CDATA[palestras]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>79</wp:term_id>
		<wp:tag_slug><![CDATA[patterns]]></wp:tag_slug>
		<wp:tag_name><![CDATA[patterns]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>80</wp:term_id>
		<wp:tag_slug><![CDATA[performance]]></wp:tag_slug>
		<wp:tag_name><![CDATA[performance]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>81</wp:term_id>
		<wp:tag_slug><![CDATA[queries]]></wp:tag_slug>
		<wp:tag_name><![CDATA[queries]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>82</wp:term_id>
		<wp:tag_slug><![CDATA[queries-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[queries]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>83</wp:term_id>
		<wp:tag_slug><![CDATA[r]]></wp:tag_slug>
		<wp:tag_name><![CDATA[R]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>84</wp:term_id>
		<wp:tag_slug><![CDATA[r-en]]></wp:tag_slug>
		<wp:tag_name><![CDATA[R]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>85</wp:term_id>
		<wp:tag_slug><![CDATA[ravendb]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ravendb]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>86</wp:term_id>
		<wp:tag_slug><![CDATA[ravendb-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ravendb]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>87</wp:term_id>
		<wp:tag_slug><![CDATA[roslyn]]></wp:tag_slug>
		<wp:tag_name><![CDATA[roslyn]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>88</wp:term_id>
		<wp:tag_slug><![CDATA[roslyn-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[roslyn]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>89</wp:term_id>
		<wp:tag_slug><![CDATA[slides]]></wp:tag_slug>
		<wp:tag_name><![CDATA[slides]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>90</wp:term_id>
		<wp:tag_slug><![CDATA[std]]></wp:tag_slug>
		<wp:tag_name><![CDATA[std]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>91</wp:term_id>
		<wp:tag_slug><![CDATA[std-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[std]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>92</wp:term_id>
		<wp:tag_slug><![CDATA[strategy]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Strategy]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>93</wp:term_id>
		<wp:tag_slug><![CDATA[try]]></wp:tag_slug>
		<wp:tag_name><![CDATA[try]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>94</wp:term_id>
		<wp:tag_slug><![CDATA[tuplas]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tuplas]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>95</wp:term_id>
		<wp:tag_slug><![CDATA[tuples]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tuples]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>96</wp:term_id>
		<wp:tag_slug><![CDATA[vcpkg]]></wp:tag_slug>
		<wp:tag_name><![CDATA[vcpkg]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>97</wp:term_id>
		<wp:tag_slug><![CDATA[vcpkg-pt]]></wp:tag_slug>
		<wp:tag_name><![CDATA[vcpkg]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>98</wp:term_id>
		<wp:tag_slug><![CDATA[visao-computacional]]></wp:tag_slug>
		<wp:tag_name><![CDATA[visão computacional]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>99</wp:term_id>
		<wp:tag_slug><![CDATA[vs2017]]></wp:tag_slug>
		<wp:tag_name><![CDATA[vs2017]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>100</wp:term_id>
		<wp:tag_slug><![CDATA[xunit]]></wp:tag_slug>
		<wp:tag_name><![CDATA[xunit]]></wp:tag_name>
	</wp:tag>
	<wp:term>
		<wp:term_id><![CDATA[101]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[language]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[en]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[English]]></wp:term_name>
		<wp:term_description><![CDATA[a:3:{s:6:"locale";s:5:"en_US";s:3:"rtl";i:0;s:9:"flag_code";s:2:"us";}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[102]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_language]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_en]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[English]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[103]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58e0668e841dd]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58e0668e841dd]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:1;s:2:"en";i:7;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[104]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58e2aa7c4dbbc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58e2aa7c4dbbc]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:37;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[105]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58e2b5d597483]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58e2b5d597483]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:39;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[106]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58e2e2428828e]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58e2e2428828e]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:41;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[107]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58e2e248090de]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58e2e248090de]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"en";i:6339;s:2:"pt";i:6297;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[108]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58e2f5de8d3a4]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58e2f5de8d3a4]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:46;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[109]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58e2f5e508cbd]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58e2f5e508cbd]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"en";i:6350;s:2:"pt";i:6309;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[110]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f105165ede4]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f105165ede4]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:50;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[111]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f10f0e587f7]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f10f0e587f7]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:52;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[112]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f10f0e6017f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f10f0e6017f]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:54;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[113]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f10f0e688e8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f10f0e688e8]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:56;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[114]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f11b70a5cb5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f11b70a5cb5]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:58;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[115]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f11d0cec519]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f11d0cec519]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:60;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[116]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f11d0cf34ce]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f11d0cf34ce]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:62;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[117]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f11d0d33e62]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f11d0d33e62]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:64;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[118]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f11d0d3b5a6]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f11d0d3b5a6]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:66;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[119]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f11d0d44ea6]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f11d0d44ea6]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6400;s:2:"en";i:6385;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[120]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f121efc286b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f121efc286b]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:69;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[121]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f121efcc392]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f121efcc392]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:71;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[122]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f121efd649b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f121efd649b]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:73;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[123]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f12b607309b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f12b607309b]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:75;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[124]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f12b607c8ef]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f12b607c8ef]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:77;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[125]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f12b6088142]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f12b6088142]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6408;s:2:"en";i:6402;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[126]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4b60ea29f0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4b60ea29f0]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:80;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[127]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4b60eac355]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4b60eac355]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:82;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[128]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4b60eb59aa]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4b60eb59aa]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:84;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[129]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4c00ce0eb5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4c00ce0eb5]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:86;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[130]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4c00ceb227]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4c00ceb227]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:88;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[131]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4c00d28318]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4c00d28318]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:90;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[132]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4c00d2fa3c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4c00d2fa3c]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"en";i:6412;s:2:"pt";i:6429;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[133]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4cb358a889]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4cb358a889]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:93;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[134]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f4d40bec71b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f4d40bec71b]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:95;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[135]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f50dd61fcc5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f50dd61fcc5]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:97;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[136]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f50dd6294a1]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f50dd6294a1]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:99;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[137]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f50dd62f645]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f50dd62f645]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:101;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[138]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f8a1f300aa3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f8a1f300aa3]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:103;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[139]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f8a1f30a1c7]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f8a1f30a1c7]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:105;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[140]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f8a1f3460aa]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f8a1f3460aa]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:107;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[141]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f8a1f34e8f1]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f8a1f34e8f1]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:109;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[142]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58f8a1f35ab43]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58f8a1f35ab43]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6458;s:2:"en";i:6437;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[143]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58fa1126af16b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58fa1126af16b]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:112;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[144]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_58fa1126e9ad9]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_58fa1126e9ad9]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6476;s:2:"en";i:6462;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[145]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_591f07002e2e4]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_591f07002e2e4]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:115;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[146]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_591f070037c46]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_591f070037c46]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:117;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[147]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_591f0700414c7]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_591f0700414c7]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:119;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[148]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_591f07004c537]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_591f07004c537]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:121;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[149]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_591f070057de7]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_591f070057de7]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:123;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[150]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_591f0700619bf]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_591f0700619bf]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:125;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[151]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592036628c0bc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592036628c0bc]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:127;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[152]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5920366294ca9]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5920366294ca9]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:129;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[153]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592036629e9f9]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592036629e9f9]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:131;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[154]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59203662a76c0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59203662a76c0]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:133;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[155]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59203662b117d]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59203662b117d]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:135;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[156]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59203662baeed]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59203662baeed]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:137;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[157]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59203662cb6af]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59203662cb6af]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6562;s:2:"en";i:6542;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[158]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592869b67f7d5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592869b67f7d5]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:142;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[159]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592869b687262]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592869b687262]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:144;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[160]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592869b68ec69]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592869b68ec69]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:146;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[161]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592869b696177]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592869b696177]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:148;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[162]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592869b69cdab]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592869b69cdab]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:150;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[163]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592869b6a47ed]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592869b6a47ed]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:152;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[164]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5928757ba7ef8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5928757ba7ef8]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:154;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[165]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5928757bd5185]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5928757bd5185]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:156;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[166]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5928757bdc0ed]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5928757bdc0ed]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:158;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[167]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5928757be2ebd]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5928757be2ebd]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:160;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[168]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5928757bea695]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5928757bea695]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:162;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[169]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5928757c01bb3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5928757c01bb3]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6615;s:2:"en";i:6601;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[170]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592c8f37ed16d]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592c8f37ed16d]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:165;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[171]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592c8f3800bf3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592c8f3800bf3]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:167;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[172]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592c92602f549]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592c92602f549]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:169;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[173]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592c9260361f8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592c9260361f8]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:171;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[174]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_592c926040936]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_592c926040936]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6625;s:2:"en";i:6621;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[175]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5935f01d4e338]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5935f01d4e338]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:174;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[176]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_593603a0a2e4d]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_593603a0a2e4d]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:176;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[177]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_593603a0c45bc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_593603a0c45bc]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6667;s:2:"en";i:6646;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[178]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59412eb4be06a]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59412eb4be06a]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:179;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[179]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5941316b22829]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5941316b22829]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:181;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[180]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5941316b50a8a]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5941316b50a8a]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6702;s:2:"en";i:6696;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[181]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59414088b12a2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59414088b12a2]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:184;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[182]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59414088b89da]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59414088b89da]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:186;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[183]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594141f7346c6]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594141f7346c6]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:188;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[184]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594141f760f5d]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594141f760f5d]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:190;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[185]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594141f76ad26]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594141f76ad26]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6711;s:2:"en";i:6706;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[186]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594297e3e67f7]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594297e3e67f7]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6720;s:2:"en";i:6717;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[187]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594300edecfe2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594300edecfe2]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:194;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[188]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594300ee0104c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594300ee0104c]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:196;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[189]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594300ee089ff]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594300ee089ff]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:198;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[190]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5943020e2b6d2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5943020e2b6d2]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:200;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[191]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5943020e34bef]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5943020e34bef]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:202;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[192]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5943020e3d959]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5943020e3d959]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:204;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[193]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594302c71ae85]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594302c71ae85]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"en";i:6723;s:2:"pt";i:6731;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[194]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5947dc0f8e9fa]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5947dc0f8e9fa]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:207;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[195]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5947dc0f9543f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5947dc0f9543f]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:209;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[196]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5947ec46a4324]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5947ec46a4324]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:211;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[197]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5947ec46d0c98]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5947ec46d0c98]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:213;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[198]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_594824329086c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_594824329086c]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:215;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[199]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5948243299fd2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5948243299fd2]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:217;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[200]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59483d25e6041]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59483d25e6041]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:219;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[201]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59483d261b9d9]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59483d261b9d9]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:221;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[202]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59483d2622a6b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59483d2622a6b]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6755;s:2:"en";i:6742;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[206]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_596d0f26e22fa]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_596d0f26e22fa]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:229;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[207]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_596d0f26eb034]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_596d0f26eb034]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:231;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[208]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_596d65753d71e]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_596d65753d71e]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:233;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[209]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_596d657546461]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_596d657546461]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:235;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[210]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_596d65754eb94]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_596d65754eb94]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:237;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[212]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_5978c5b9e3afd]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_5978c5b9e3afd]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:240;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[213]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59b97bfa53f86]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59b97bfa53f86]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:243;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[214]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59b97bfa64bd5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59b97bfa64bd5]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:245;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[215]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59d282a74e1af]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59d282a74e1af]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"en";i:247;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[216]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59d285971b0fc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59d285971b0fc]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:249;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[217]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59d285973ea8b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59d285973ea8b]]></wp:term_name>
		<wp:term_description><![CDATA[a:2:{s:2:"pt";i:6993;s:2:"en";i:6982;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[218]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59d2a74fd496a]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59d2a74fd496a]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:252;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[219]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59d8c8a7268fe]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59d8c8a7268fe]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:254;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[220]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59efc164a5db0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59efc164a5db0]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:256;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[221]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59efc164ad363]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59efc164ad363]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:258;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[222]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_translations]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_59efc164b4798]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[pll_59efc164b4798]]></wp:term_name>
		<wp:term_description><![CDATA[a:1:{s:2:"pt";i:260;}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[223]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[language]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pt]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Português]]></wp:term_name>
		<wp:term_description><![CDATA[a:3:{s:6:"locale";s:5:"pt_BR";s:3:"rtl";i:0;s:9:"flag_code";s:2:"br";}]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[224]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[term_language]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[pll_pt]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Português]]></wp:term_name>
	</wp:term>
	<wp:term><wp:term_id>225</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[principal]]></wp:term_slug><wp:term_name><![CDATA[principal]]></wp:term_name>
</wp:term>
	<wp:term><wp:term_id>226</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[principal-en]]></wp:term_slug><wp:term_name><![CDATA[principal-en]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=4.9.1</generator>

	<item>
		<title>sample-blog-img</title>
		<link>http://localhost:8080/?attachment_id=6187&#038;lang=pt</link>
		<pubDate>Wed, 06 Jan 2016 21:41:47 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2013/01/sample-img.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6187</wp:post_id>
		<wp:post_date><![CDATA[2016-01-06 21:41:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-06 21:41:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sample-blog-img]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2013/01/sample-img.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/01/sample-img.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:600;s:6:"height";i:402;s:4:"file";s:22:"2013/01/sample-img.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"sample-img-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"sample-img-300x201.png";s:5:"width";i:300;s:6:"height";i:201;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>icon</title>
		<link>http://localhost:8080/?attachment_id=6213&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 03:02:32 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/icon.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6213</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 00:02:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 03:02:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[icon]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/icon.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/icon.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:16;s:6:"height";i:16;s:4:"file";s:16:"2017/04/icon.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>m_elemarjr</title>
		<link>http://localhost:8080/?attachment_id=6220&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 03:15:16 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2015/12/m_elemarjr.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6220</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 00:15:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 03:15:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[m_elemarjr]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2015/12/m_elemarjr.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/12/m_elemarjr.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1080;s:6:"height";i:720;s:4:"file";s:22:"2015/12/m_elemarjr.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"m_elemarjr-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"m_elemarjr-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:22:"m_elemarjr-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:23:"m_elemarjr-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1465059235";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>photo</title>
		<link>http://localhost:8080/?attachment_id=6243&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 04:38:15 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/photo.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6243</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 01:38:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 04:38:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/photo.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/photo.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:215;s:6:"height";i:215;s:4:"file";s:17:"2017/04/photo.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"photo-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>m_elemar2</title>
		<link>http://localhost:8080/?attachment_id=6253&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 12:10:39 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/m_elemar2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6253</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 09:10:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 12:10:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[m_elemar2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/m_elemar2.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/m_elemar2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1080;s:6:"height";i:720;s:4:"file";s:21:"2017/04/m_elemar2.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"m_elemar2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:21:"m_elemar2-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:21:"m_elemar2-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:22:"m_elemar2-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>m_elemar3</title>
		<link>http://localhost:8080/?attachment_id=6255&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 12:11:18 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/m_elemar3.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6255</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 09:11:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 12:11:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[m_elemar3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/m_elemar3.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/m_elemar3.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1080;s:6:"height";i:720;s:4:"file";s:21:"2017/04/m_elemar3.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"m_elemar3-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:21:"m_elemar3-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:21:"m_elemar3-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:22:"m_elemar3-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1465061623";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>m_elemarjr_0_bg</title>
		<link>http://localhost:8080/?attachment_id=6271&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 12:40:46 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/m_elemarjr_0_bg.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6271</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 09:40:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 12:40:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[m_elemarjr_0_bg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/m_elemarjr_0_bg.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/m_elemarjr_0_bg.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1080;s:6:"height";i:720;s:4:"file";s:27:"2017/04/m_elemarjr_0_bg.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"m_elemarjr_0_bg-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"m_elemarjr_0_bg-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:27:"m_elemarjr_0_bg-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:28:"m_elemarjr_0_bg-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1465059235";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>m_elemarjr_1_bg</title>
		<link>http://localhost:8080/?attachment_id=6272&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 12:41:40 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/m_elemarjr_1_bg.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6272</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 09:41:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 12:41:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[m_elemarjr_1_bg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/m_elemarjr_1_bg.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/m_elemarjr_1_bg.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1080;s:6:"height";i:720;s:4:"file";s:27:"2017/04/m_elemarjr_1_bg.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"m_elemarjr_1_bg-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"m_elemarjr_1_bg-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:27:"m_elemarjr_1_bg-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:28:"m_elemarjr_1_bg-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>m_elemarjr_2_bg</title>
		<link>http://localhost:8080/?attachment_id=6273&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 12:42:34 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/m_elemarjr_2_bg.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6273</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 09:42:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 12:42:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[m_elemarjr_2_bg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/m_elemarjr_2_bg.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/m_elemarjr_2_bg.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1080;s:6:"height";i:720;s:4:"file";s:27:"2017/04/m_elemarjr_2_bg.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"m_elemarjr_2_bg-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"m_elemarjr_2_bg-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:27:"m_elemarjr_2_bg-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:28:"m_elemarjr_2_bg-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1465061623";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>m_elemarjr_0_bg</title>
		<link>http://localhost:8080/?attachment_id=6290&#038;lang=pt</link>
		<pubDate>Sun, 02 Apr 2017 13:13:50 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/m_elemarjr_0_bg-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6290</wp:post_id>
		<wp:post_date><![CDATA[2017-04-02 10:13:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-02 13:13:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[m_elemarjr_0_bg-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/m_elemarjr_0_bg-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/m_elemarjr_0_bg-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1080;s:6:"height";i:720;s:4:"file";s:29:"2017/04/m_elemarjr_0_bg-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"m_elemarjr_0_bg-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"m_elemarjr_0_bg-1-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:29:"m_elemarjr_0_bg-1-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:30:"m_elemarjr_0_bg-1-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1465059235";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>elemar_about_0</title>
		<link>http://localhost:8080/?attachment_id=6362&#038;lang=pt</link>
		<pubDate>Tue, 04 Apr 2017 02:22:27 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/elemar_about_0.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6362</wp:post_id>
		<wp:post_date><![CDATA[2017-04-03 23:22:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-04 02:22:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[elemar_about_0]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/elemar_about_0.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/elemar_about_0.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:972;s:6:"height";i:648;s:4:"file";s:26:"2017/04/elemar_about_0.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"elemar_about_0-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:26:"elemar_about_0-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:26:"elemar_about_0-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>hexagonal_style</title>
		<link>http://localhost:8080/?attachment_id=6413</link>
		<pubDate>Mon, 17 Apr 2017 11:59:06 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/hexagonal_style.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6413</wp:post_id>
		<wp:post_date><![CDATA[2017-04-17 08:59:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-17 11:59:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hexagonal_style]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6412</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/hexagonal_style.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/hexagonal_style.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:670;s:6:"height";i:389;s:4:"file";s:27:"2017/04/hexagonal_style.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"hexagonal_style-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"hexagonal_style-300x174.jpg";s:5:"width";i:300;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>hexagonal_style</title>
		<link>http://localhost:8080/?attachment_id=6423</link>
		<pubDate>Mon, 17 Apr 2017 12:56:06 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/hexagonal_style-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6423</wp:post_id>
		<wp:post_date><![CDATA[2017-04-17 09:56:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-17 12:56:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hexagonal_style-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6412</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/hexagonal_style-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/hexagonal_style-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:698;s:6:"height";i:421;s:4:"file";s:29:"2017/04/hexagonal_style-1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"hexagonal_style-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"hexagonal_style-1-300x181.jpg";s:5:"width";i:300;s:6:"height";i:181;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>strategy</title>
		<link>http://localhost:8080/?attachment_id=6463</link>
		<pubDate>Fri, 21 Apr 2017 12:50:13 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/strategy.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6463</wp:post_id>
		<wp:post_date><![CDATA[2017-04-21 09:50:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-21 12:50:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[strategy]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6462</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/strategy.gif]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/strategy.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:437;s:6:"height";i:164;s:4:"file";s:20:"2017/04/strategy.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"strategy-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:6:"medium";a:4:{s:4:"file";s:20:"strategy-300x113.gif";s:5:"width";i:300;s:6:"height";i:113;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>questions-2212771_1920</title>
		<link>http://localhost:8080/?attachment_id=6483&#038;lang=pt</link>
		<pubDate>Wed, 10 May 2017 13:11:37 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/05/questions-2212771_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6483</wp:post_id>
		<wp:post_date><![CDATA[2017-05-10 10:11:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-10 13:11:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[questions-2212771_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/05/questions-2212771_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/05/questions-2212771_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1277;s:4:"file";s:34:"2017/05/questions-2212771_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"questions-2212771_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"questions-2212771_1920-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:34:"questions-2212771_1920-768x511.jpg";s:5:"width";i:768;s:6:"height";i:511;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:35:"questions-2212771_1920-1024x681.jpg";s:5:"width";i:1024;s:6:"height";i:681;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>blackboard-837210_1920</title>
		<link>http://localhost:8080/?attachment_id=6487</link>
		<pubDate>Thu, 11 May 2017 13:16:07 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/blackboard-837210_1920-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6487</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 10:16:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 13:16:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[blackboard-837210_1920-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6309</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/blackboard-837210_1920-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/blackboard-837210_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1080;s:4:"file";s:36:"2017/04/blackboard-837210_1920-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"blackboard-837210_1920-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:36:"blackboard-837210_1920-1-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:36:"blackboard-837210_1920-1-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:37:"blackboard-837210_1920-1-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>problem-1951987_1920</title>
		<link>http://localhost:8080/?attachment_id=6490</link>
		<pubDate>Thu, 11 May 2017 13:30:19 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/problem-1951987_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6490</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 10:30:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 13:30:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[problem-1951987_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6400</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/problem-1951987_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/problem-1951987_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1179;s:4:"file";s:32:"2017/04/problem-1951987_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"problem-1951987_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:32:"problem-1951987_1920-300x184.jpg";s:5:"width";i:300;s:6:"height";i:184;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:32:"problem-1951987_1920-768x472.jpg";s:5:"width";i:768;s:6:"height";i:472;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:33:"problem-1951987_1920-1024x629.jpg";s:5:"width";i:1024;s:6:"height";i:629;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>accept-1671024_1920</title>
		<link>http://localhost:8080/?attachment_id=6491</link>
		<pubDate>Thu, 11 May 2017 13:36:51 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/accept-1671024_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6491</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 10:36:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 13:36:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[accept-1671024_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6408</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/accept-1671024_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/accept-1671024_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1440;s:4:"file";s:31:"2017/04/accept-1671024_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"accept-1671024_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:31:"accept-1671024_1920-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:31:"accept-1671024_1920-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:32:"accept-1671024_1920-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>hex-675576</title>
		<link>http://localhost:8080/?attachment_id=6492</link>
		<pubDate>Thu, 11 May 2017 13:45:06 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/hex-675576.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6492</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 10:45:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 13:45:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hex-675576]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6429</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/hex-675576.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/hex-675576.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1080;s:4:"file";s:22:"2017/04/hex-675576.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"hex-675576-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"hex-675576-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:22:"hex-675576-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:23:"hex-675576-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>books-1012088_1920</title>
		<link>http://localhost:8080/?attachment_id=6493</link>
		<pubDate>Thu, 11 May 2017 13:50:10 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/books-1012088_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6493</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 10:50:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 13:50:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[books-1012088_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6433</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/books-1012088_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/books-1012088_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1280;s:4:"file";s:30:"2017/04/books-1012088_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"books-1012088_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:30:"books-1012088_1920-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:30:"books-1012088_1920-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"books-1012088_1920-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>command</title>
		<link>http://localhost:8080/?attachment_id=6502</link>
		<pubDate>Thu, 11 May 2017 22:09:52 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/command.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6502</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 19:09:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 22:09:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[command]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6437</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/command.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/command.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:464;s:6:"height";i:288;s:4:"file";s:19:"2017/04/command.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"command-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:19:"command-300x186.png";s:5:"width";i:300;s:6:"height";i:186;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>hex-675576</title>
		<link>http://localhost:8080/?attachment_id=6503</link>
		<pubDate>Thu, 11 May 2017 22:10:47 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/hex-675576-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6503</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 19:10:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 22:10:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hex-675576-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6412</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/hex-675576-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/hex-675576-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1080;s:4:"file";s:24:"2017/04/hex-675576-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"hex-675576-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:24:"hex-675576-1-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:24:"hex-675576-1-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:25:"hex-675576-1-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>accept-1671024_1920</title>
		<link>http://localhost:8080/?attachment_id=6504</link>
		<pubDate>Thu, 11 May 2017 22:12:17 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/accept-1671024_1920-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6504</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 19:12:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 22:12:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[accept-1671024_1920-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6402</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/accept-1671024_1920-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/accept-1671024_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1440;s:4:"file";s:33:"2017/04/accept-1671024_1920-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"accept-1671024_1920-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:33:"accept-1671024_1920-1-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:33:"accept-1671024_1920-1-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:34:"accept-1671024_1920-1-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>problem-1951987_1920</title>
		<link>http://localhost:8080/?attachment_id=6505</link>
		<pubDate>Thu, 11 May 2017 22:13:48 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/problem-1951987_1920-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6505</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 19:13:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 22:13:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[problem-1951987_1920-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6385</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/problem-1951987_1920-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/problem-1951987_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1179;s:4:"file";s:34:"2017/04/problem-1951987_1920-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"problem-1951987_1920-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"problem-1951987_1920-1-300x184.jpg";s:5:"width";i:300;s:6:"height";i:184;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:34:"problem-1951987_1920-1-768x472.jpg";s:5:"width";i:768;s:6:"height";i:472;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:35:"problem-1951987_1920-1-1024x629.jpg";s:5:"width";i:1024;s:6:"height";i:629;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>blackboard-837210_1920</title>
		<link>http://localhost:8080/?attachment_id=6506</link>
		<pubDate>Thu, 11 May 2017 22:14:52 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/blackboard-837210_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6506</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 19:14:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 22:14:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[blackboard-837210_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6350</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/blackboard-837210_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/blackboard-837210_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1080;s:4:"file";s:34:"2017/04/blackboard-837210_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"blackboard-837210_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"blackboard-837210_1920-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:34:"blackboard-837210_1920-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:35:"blackboard-837210_1920-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>questions-2212771_1920</title>
		<link>http://localhost:8080/?attachment_id=6507</link>
		<pubDate>Thu, 11 May 2017 22:17:14 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/questions-2212771_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6507</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 19:17:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 22:17:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[questions-2212771_1920-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6339</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/questions-2212771_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/questions-2212771_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1277;s:4:"file";s:34:"2017/04/questions-2212771_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"questions-2212771_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"questions-2212771_1920-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:34:"questions-2212771_1920-768x511.jpg";s:5:"width";i:768;s:6:"height";i:511;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:35:"questions-2212771_1920-1024x681.jpg";s:5:"width";i:1024;s:6:"height";i:681;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>strategy</title>
		<link>http://localhost:8080/?attachment_id=6508</link>
		<pubDate>Thu, 11 May 2017 22:19:27 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/strategy-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6508</wp:post_id>
		<wp:post_date><![CDATA[2017-05-11 19:19:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-11 22:19:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[strategy-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6462</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/strategy-1.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/strategy-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:464;s:6:"height";i:288;s:4:"file";s:22:"2017/04/strategy-1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"strategy-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"strategy-1-300x186.png";s:5:"width";i:300;s:6:"height";i:186;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>strategy</title>
		<link>http://localhost:8080/?attachment_id=6510</link>
		<pubDate>Fri, 12 May 2017 11:11:01 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/strategy.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6510</wp:post_id>
		<wp:post_date><![CDATA[2017-05-12 08:11:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-12 11:11:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[strategy-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6476</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/strategy.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/strategy.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:464;s:6:"height";i:315;s:4:"file";s:20:"2017/04/strategy.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"strategy-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:20:"strategy-300x204.png";s:5:"width";i:300;s:6:"height";i:204;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>command</title>
		<link>http://localhost:8080/?attachment_id=6511</link>
		<pubDate>Fri, 12 May 2017 11:12:37 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/command-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6511</wp:post_id>
		<wp:post_date><![CDATA[2017-05-12 08:12:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-12 11:12:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[command-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6458</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/command-1.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/command-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:464;s:6:"height";i:315;s:4:"file";s:21:"2017/04/command-1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"command-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"command-1-300x204.png";s:5:"width";i:300;s:6:"height";i:204;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>strategy</title>
		<link>http://localhost:8080/?attachment_id=6539</link>
		<pubDate>Fri, 12 May 2017 13:10:16 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/strategy-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6539</wp:post_id>
		<wp:post_date><![CDATA[2017-05-12 10:10:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-12 13:10:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[strategy-4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6437</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/strategy-2.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/strategy-2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:464;s:6:"height";i:315;s:4:"file";s:22:"2017/04/strategy-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"strategy-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"strategy-2-300x204.png";s:5:"width";i:300;s:6:"height";i:204;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>command</title>
		<link>http://localhost:8080/?attachment_id=6540</link>
		<pubDate>Fri, 12 May 2017 13:11:01 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/04/command-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6540</wp:post_id>
		<wp:post_date><![CDATA[2017-05-12 10:11:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-12 13:11:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[command-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6437</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/04/command-2.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/04/command-2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:464;s:6:"height";i:315;s:4:"file";s:21:"2017/04/command-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"command-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"command-2-300x204.png";s:5:"width";i:300;s:6:"height";i:204;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sunset-2247726_1920</title>
		<link>http://localhost:8080/?attachment_id=6560</link>
		<pubDate>Fri, 19 May 2017 22:32:40 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/05/sunset-2247726_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6560</wp:post_id>
		<wp:post_date><![CDATA[2017-05-19 19:32:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-19 22:32:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sunset-2247726_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6542</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/05/sunset-2247726_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/05/sunset-2247726_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:742;s:4:"file";s:31:"2017/05/sunset-2247726_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"sunset-2247726_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:31:"sunset-2247726_1920-300x116.jpg";s:5:"width";i:300;s:6:"height";i:116;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:31:"sunset-2247726_1920-768x297.jpg";s:5:"width";i:768;s:6:"height";i:297;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:32:"sunset-2247726_1920-1024x396.jpg";s:5:"width";i:1024;s:6:"height";i:396;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sunset-2247726_1920</title>
		<link>http://localhost:8080/?attachment_id=6563</link>
		<pubDate>Sat, 20 May 2017 12:27:59 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/05/sunset-2247726_1920-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6563</wp:post_id>
		<wp:post_date><![CDATA[2017-05-20 09:27:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-20 12:27:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sunset-2247726_1920-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6562</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/05/sunset-2247726_1920-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/05/sunset-2247726_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:742;s:4:"file";s:33:"2017/05/sunset-2247726_1920-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"sunset-2247726_1920-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:33:"sunset-2247726_1920-1-300x116.jpg";s:5:"width";i:300;s:6:"height";i:116;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:33:"sunset-2247726_1920-1-768x297.jpg";s:5:"width";i:768;s:6:"height";i:297;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:34:"sunset-2247726_1920-1-1024x396.jpg";s:5:"width";i:1024;s:6:"height";i:396;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>opencv</title>
		<link>http://localhost:8080/?attachment_id=6603</link>
		<pubDate>Fri, 26 May 2017 17:46:26 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/05/opencv.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6603</wp:post_id>
		<wp:post_date><![CDATA[2017-05-26 14:46:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-26 17:46:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[opencv]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6601</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/05/opencv.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/05/opencv.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1080;s:4:"file";s:18:"2017/05/opencv.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"opencv-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:18:"opencv-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:18:"opencv-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:19:"opencv-1024x576.png";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>options</title>
		<link>http://localhost:8080/?attachment_id=6623</link>
		<pubDate>Mon, 29 May 2017 21:21:57 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/05/options.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6623</wp:post_id>
		<wp:post_date><![CDATA[2017-05-29 18:21:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-29 21:21:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[options]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6621</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/05/options.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/05/options.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1919;s:6:"height";i:701;s:4:"file";s:19:"2017/05/options.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"options-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:19:"options-300x110.png";s:5:"width";i:300;s:6:"height";i:110;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:19:"options-768x281.png";s:5:"width";i:768;s:6:"height";i:281;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:20:"options-1024x374.png";s:5:"width";i:1024;s:6:"height";i:374;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>options</title>
		<link>http://localhost:8080/?attachment_id=6626</link>
		<pubDate>Mon, 29 May 2017 21:25:50 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/05/options-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6626</wp:post_id>
		<wp:post_date><![CDATA[2017-05-29 18:25:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-29 21:25:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[options-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6625</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/05/options-1.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/05/options-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1919;s:6:"height";i:701;s:4:"file";s:21:"2017/05/options-1.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"options-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"options-1-300x110.png";s:5:"width";i:300;s:6:"height";i:110;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:21:"options-1-768x281.png";s:5:"width";i:768;s:6:"height";i:281;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:22:"options-1-1024x374.png";s:5:"width";i:1024;s:6:"height";i:374;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>logo_w</title>
		<link>http://localhost:8080/?attachment_id=6636&#038;lang=pt</link>
		<pubDate>Thu, 01 Jun 2017 21:15:32 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/logo_w.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6636</wp:post_id>
		<wp:post_date><![CDATA[2017-06-01 18:15:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-01 21:15:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[logo_w]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/logo_w.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/logo_w.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:105;s:6:"height";i:40;s:4:"file";s:18:"2017/06/logo_w.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>logo_b</title>
		<link>http://localhost:8080/?attachment_id=6637&#038;lang=pt</link>
		<pubDate>Thu, 01 Jun 2017 21:18:31 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/logo_b.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6637</wp:post_id>
		<wp:post_date><![CDATA[2017-06-01 18:18:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-01 21:18:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[logo_b]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/logo_b.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/logo_b.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:106;s:6:"height";i:40;s:4:"file";s:18:"2017/06/logo_b.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>logo_b_r</title>
		<link>http://localhost:8080/?attachment_id=6638&#038;lang=pt</link>
		<pubDate>Thu, 01 Jun 2017 21:18:57 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/logo_b_r.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6638</wp:post_id>
		<wp:post_date><![CDATA[2017-06-01 18:18:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-01 21:18:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[logo_b_r]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/logo_b_r.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/logo_b_r.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:211;s:6:"height";i:80;s:4:"file";s:20:"2017/06/logo_b_r.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"logo_b_r-150x80.png";s:5:"width";i:150;s:6:"height";i:80;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>logo_w_r</title>
		<link>http://localhost:8080/?attachment_id=6639&#038;lang=pt</link>
		<pubDate>Thu, 01 Jun 2017 21:27:12 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/logo_w_r.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6639</wp:post_id>
		<wp:post_date><![CDATA[2017-06-01 18:27:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-01 21:27:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[logo_w_r]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/logo_w_r.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/logo_w_r.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:211;s:6:"height";i:80;s:4:"file";s:20:"2017/06/logo_w_r.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"logo_w_r-150x80.png";s:5:"width";i:150;s:6:"height";i:80;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>software_sem_bugs</title>
		<link>http://localhost:8080/?attachment_id=6641&#038;lang=pt</link>
		<pubDate>Fri, 02 Jun 2017 02:58:25 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/software_sem_bugs.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6641</wp:post_id>
		<wp:post_date><![CDATA[2017-06-01 23:58:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-02 02:58:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[software_sem_bugs]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/software_sem_bugs.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/software_sem_bugs.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:887;s:6:"height";i:568;s:4:"file";s:29:"2017/06/software_sem_bugs.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"software_sem_bugs-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:29:"software_sem_bugs-300x192.png";s:5:"width";i:300;s:6:"height";i:192;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:29:"software_sem_bugs-768x492.png";s:5:"width";i:768;s:6:"height";i:492;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>microservice_arch</title>
		<link>http://localhost:8080/?attachment_id=6654</link>
		<pubDate>Tue, 06 Jun 2017 00:22:18 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/microservice_arch.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6654</wp:post_id>
		<wp:post_date><![CDATA[2017-06-05 21:22:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-06 00:22:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[microservice_arch]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6646</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/microservice_arch.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/microservice_arch.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:880;s:6:"height";i:543;s:4:"file";s:29:"2017/06/microservice_arch.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"microservice_arch-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:29:"microservice_arch-300x185.png";s:5:"width";i:300;s:6:"height";i:185;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:29:"microservice_arch-768x474.png";s:5:"width";i:768;s:6:"height";i:474;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>microservices_arch2</title>
		<link>http://localhost:8080/?attachment_id=6656</link>
		<pubDate>Tue, 06 Jun 2017 00:43:41 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/microservices_arch2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6656</wp:post_id>
		<wp:post_date><![CDATA[2017-06-05 21:43:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-06 00:43:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[microservices_arch2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6646</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/microservices_arch2.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/microservices_arch2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:902;s:6:"height";i:361;s:4:"file";s:31:"2017/06/microservices_arch2.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"microservices_arch2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:31:"microservices_arch2-300x120.png";s:5:"width";i:300;s:6:"height";i:120;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:31:"microservices_arch2-768x307.png";s:5:"width";i:768;s:6:"height";i:307;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>window-1231894_1280</title>
		<link>http://localhost:8080/?attachment_id=6666</link>
		<pubDate>Tue, 06 Jun 2017 01:01:35 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/window-1231894_1280.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6666</wp:post_id>
		<wp:post_date><![CDATA[2017-06-05 22:01:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-06 01:01:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[window-1231894_1280]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6646</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/window-1231894_1280.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/window-1231894_1280.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:872;s:4:"file";s:31:"2017/06/window-1231894_1280.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"window-1231894_1280-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:31:"window-1231894_1280-300x204.jpg";s:5:"width";i:300;s:6:"height";i:204;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:31:"window-1231894_1280-768x523.jpg";s:5:"width";i:768;s:6:"height";i:523;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:32:"window-1231894_1280-1024x698.jpg";s:5:"width";i:1024;s:6:"height";i:698;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>window-1231894_1280</title>
		<link>http://localhost:8080/?attachment_id=6668</link>
		<pubDate>Tue, 06 Jun 2017 01:04:07 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/window-1231894_1280-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6668</wp:post_id>
		<wp:post_date><![CDATA[2017-06-05 22:04:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-06 01:04:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[window-1231894_1280-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6667</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/window-1231894_1280-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/window-1231894_1280-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:872;s:4:"file";s:33:"2017/06/window-1231894_1280-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"window-1231894_1280-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:33:"window-1231894_1280-1-300x204.jpg";s:5:"width";i:300;s:6:"height";i:204;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:33:"window-1231894_1280-1-768x523.jpg";s:5:"width";i:768;s:6:"height";i:523;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:34:"window-1231894_1280-1-1024x698.jpg";s:5:"width";i:1024;s:6:"height";i:698;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>m_elemarjr_0_bg-1</title>
		<link>http://localhost:8080/?attachment_id=6676&#038;lang=pt</link>
		<pubDate>Wed, 07 Jun 2017 11:58:37 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/m_elemarjr_0_bg-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6676</wp:post_id>
		<wp:post_date><![CDATA[2017-06-07 08:58:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-07 11:58:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[m_elemarjr_0_bg-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/m_elemarjr_0_bg-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/m_elemarjr_0_bg-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1080;s:6:"height";i:720;s:4:"file";s:29:"2017/06/m_elemarjr_0_bg-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"m_elemarjr_0_bg-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"m_elemarjr_0_bg-1-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:29:"m_elemarjr_0_bg-1-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:30:"m_elemarjr_0_bg-1-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1465059235";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>csharp_nolight</title>
		<link>http://localhost:8080/?attachment_id=6701</link>
		<pubDate>Wed, 14 Jun 2017 12:47:58 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6701</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 09:47:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 12:47:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[csharp_nolight]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6696</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/csharp_nolight.png]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/csharp_nolight.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:855;s:4:"file";s:26:"2017/06/csharp_nolight.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"csharp_nolight-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"csharp_nolight-300x134.png";s:5:"width";i:300;s:6:"height";i:134;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:26:"csharp_nolight-768x342.png";s:5:"width";i:768;s:6:"height";i:342;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:27:"csharp_nolight-1024x456.png";s:5:"width";i:1024;s:6:"height";i:456;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>csharp_nolight</title>
		<link>http://localhost:8080/?attachment_id=6703</link>
		<pubDate>Wed, 14 Jun 2017 12:51:31 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6703</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 09:51:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 12:51:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[csharp_nolight-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6702</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/csharp_nolight-1.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/csharp_nolight-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:855;s:4:"file";s:28:"2017/06/csharp_nolight-1.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"csharp_nolight-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"csharp_nolight-1-300x134.png";s:5:"width";i:300;s:6:"height";i:134;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"csharp_nolight-1-768x342.png";s:5:"width";i:768;s:6:"height";i:342;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"csharp_nolight-1-1024x456.png";s:5:"width";i:1024;s:6:"height";i:456;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>result</title>
		<link>http://localhost:8080/?attachment_id=6714</link>
		<pubDate>Wed, 14 Jun 2017 14:46:03 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/result.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6714</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 11:46:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 14:46:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[result]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6711</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/result.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/result.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1103;s:6:"height";i:639;s:4:"file";s:18:"2017/06/result.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"result-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:18:"result-300x174.png";s:5:"width";i:300;s:6:"height";i:174;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:18:"result-768x445.png";s:5:"width";i:768;s:6:"height";i:445;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:19:"result-1024x593.png";s:5:"width";i:1024;s:6:"height";i:593;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>internet-1895376_1920</title>
		<link>http://localhost:8080/?attachment_id=6725</link>
		<pubDate>Thu, 15 Jun 2017 21:49:13 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/06/internet-1895376_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6725</wp:post_id>
		<wp:post_date><![CDATA[2017-06-15 18:49:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-15 21:49:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[internet-1895376_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6723</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/06/internet-1895376_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/06/internet-1895376_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1280;s:4:"file";s:33:"2017/06/internet-1895376_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"internet-1895376_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:33:"internet-1895376_1920-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:33:"internet-1895376_1920-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:34:"internet-1895376_1920-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FOTOS-SOBRE-01</title>
		<link>http://localhost:8080/?attachment_id=6810&#038;lang=pt</link>
		<pubDate>Fri, 07 Jul 2017 17:38:43 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/FOTOS-SOBRE-01.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6810</wp:post_id>
		<wp:post_date><![CDATA[2017-07-07 14:38:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-07 17:38:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[fotos-sobre-01]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/FOTOS-SOBRE-01.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/FOTOS-SOBRE-01.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:517;s:4:"file";s:26:"2017/07/FOTOS-SOBRE-01.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-01-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-01-300x194.jpg";s:5:"width";i:300;s:6:"height";i:194;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-01-768x496.jpg";s:5:"width";i:768;s:6:"height";i:496;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FOTOS-SOBRE-02</title>
		<link>http://localhost:8080/?attachment_id=6811&#038;lang=pt</link>
		<pubDate>Fri, 07 Jul 2017 17:39:15 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/FOTOS-SOBRE-02.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6811</wp:post_id>
		<wp:post_date><![CDATA[2017-07-07 14:39:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-07 17:39:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[fotos-sobre-02]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/FOTOS-SOBRE-02.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/FOTOS-SOBRE-02.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:517;s:4:"file";s:26:"2017/07/FOTOS-SOBRE-02.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-02-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-02-300x194.jpg";s:5:"width";i:300;s:6:"height";i:194;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-02-768x496.jpg";s:5:"width";i:768;s:6:"height";i:496;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FOTOS-SOBRE-04</title>
		<link>http://localhost:8080/?attachment_id=6813&#038;lang=pt</link>
		<pubDate>Fri, 07 Jul 2017 17:40:05 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/FOTOS-SOBRE-04-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6813</wp:post_id>
		<wp:post_date><![CDATA[2017-07-07 14:40:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-07 17:40:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[fotos-sobre-04-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/FOTOS-SOBRE-04-1.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/FOTOS-SOBRE-04-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:517;s:4:"file";s:28:"2017/07/FOTOS-SOBRE-04-1.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"FOTOS-SOBRE-04-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:28:"FOTOS-SOBRE-04-1-300x194.jpg";s:5:"width";i:300;s:6:"height";i:194;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:28:"FOTOS-SOBRE-04-1-768x496.jpg";s:5:"width";i:768;s:6:"height";i:496;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FOTOS-SOBRE-03</title>
		<link>http://localhost:8080/?attachment_id=6820&#038;lang=pt</link>
		<pubDate>Fri, 07 Jul 2017 17:41:50 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/FOTOS-SOBRE-03.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6820</wp:post_id>
		<wp:post_date><![CDATA[2017-07-07 14:41:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-07 17:41:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[fotos-sobre-03]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/FOTOS-SOBRE-03.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/FOTOS-SOBRE-03.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:517;s:4:"file";s:26:"2017/07/FOTOS-SOBRE-03.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-03-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-03-300x194.jpg";s:5:"width";i:300;s:6:"height";i:194;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-03-768x496.jpg";s:5:"width";i:768;s:6:"height";i:496;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FOTOS-SOBRE-05</title>
		<link>http://localhost:8080/?attachment_id=6821&#038;lang=pt</link>
		<pubDate>Fri, 07 Jul 2017 17:42:17 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/FOTOS-SOBRE-05.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6821</wp:post_id>
		<wp:post_date><![CDATA[2017-07-07 14:42:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-07 17:42:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[fotos-sobre-05]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/FOTOS-SOBRE-05.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/FOTOS-SOBRE-05.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:517;s:4:"file";s:26:"2017/07/FOTOS-SOBRE-05.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-05-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-05-300x194.jpg";s:5:"width";i:300;s:6:"height";i:194;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:26:"FOTOS-SOBRE-05-768x496.jpg";s:5:"width";i:768;s:6:"height";i:496;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>electricity-1835546_1920</title>
		<link>http://localhost:8080/?attachment_id=6892</link>
		<pubDate>Tue, 18 Jul 2017 01:45:42 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/electricity-1835546_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6892</wp:post_id>
		<wp:post_date><![CDATA[2017-07-17 22:45:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-18 01:45:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[electricity-1835546_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6885</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/electricity-1835546_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/electricity-1835546_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1280;s:4:"file";s:36:"2017/07/electricity-1835546_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"electricity-1835546_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:36:"electricity-1835546_1920-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:36:"electricity-1835546_1920-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:37:"electricity-1835546_1920-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CONTATO-cabeçalho</title>
		<link>http://localhost:8080/?attachment_id=6904&#038;lang=pt</link>
		<pubDate>Wed, 19 Jul 2017 16:00:08 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/CONTATO-cabeçalho.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6904</wp:post_id>
		<wp:post_date><![CDATA[2017-07-19 13:00:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-19 16:00:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[contato-cabecalho]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/CONTATO-cabeçalho.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/CONTATO-cabeçalho.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1367;s:6:"height";i:614;s:4:"file";s:30:"2017/07/CONTATO-cabeçalho.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"CONTATO-cabeçalho-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:30:"CONTATO-cabeçalho-300x135.jpg";s:5:"width";i:300;s:6:"height";i:135;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:30:"CONTATO-cabeçalho-768x345.jpg";s:5:"width";i:768;s:6:"height";i:345;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"CONTATO-cabeçalho-1024x460.jpg";s:5:"width";i:1024;s:6:"height";i:460;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>brazil-2128654_1920</title>
		<link>http://localhost:8080/?attachment_id=6915</link>
		<pubDate>Wed, 26 Jul 2017 16:39:12 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/brazil-2128654_1920.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6915</wp:post_id>
		<wp:post_date><![CDATA[2017-07-26 13:39:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-26 16:39:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[brazil-2128654_1920]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6914</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/brazil-2128654_1920.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/brazil-2128654_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1440;s:4:"file";s:31:"2017/07/brazil-2128654_1920.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"brazil-2128654_1920-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:31:"brazil-2128654_1920-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:31:"brazil-2128654_1920-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:32:"brazil-2128654_1920-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2017-07-26 15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_ RavenDB index analyzer that removes</title>
		<link>http://localhost:8080/?attachment_id=6926</link>
		<pubDate>Wed, 26 Jul 2017 18:10:40 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/2017-07-26-15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_-RavenDB-index-analyzer-that-removes.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6926</wp:post_id>
		<wp:post_date><![CDATA[2017-07-26 15:10:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-26 18:10:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2017-07-26-15_08_11-elemarjr_ravendb-indexing-braziliananalyzer_-ravendb-index-analyzer-that-removes]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6914</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_-RavenDB-index-analyzer-that-removes.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/2017-07-26-15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_-RavenDB-index-analyzer-that-removes.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:994;s:6:"height";i:901;s:4:"file";s:112:"2017/07/2017-07-26-15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_-RavenDB-index-analyzer-that-removes.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:112:"2017-07-26-15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_-RavenDB-index-analyzer-that-removes-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:112:"2017-07-26-15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_-RavenDB-index-analyzer-that-removes-300x272.png";s:5:"width";i:300;s:6:"height";i:272;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:112:"2017-07-26-15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_-RavenDB-index-analyzer-that-removes-768x696.png";s:5:"width";i:768;s:6:"height";i:696;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2017-07-26 15_17_12-Terms _ Raven.Studio</title>
		<link>http://localhost:8080/?attachment_id=6927</link>
		<pubDate>Wed, 26 Jul 2017 18:17:44 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/2017-07-26-15_17_12-Terms-_-Raven.Studio.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6927</wp:post_id>
		<wp:post_date><![CDATA[2017-07-26 15:17:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-26 18:17:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2017-07-26-15_17_12-terms-_-raven-studio]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6914</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_17_12-Terms-_-Raven.Studio.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/2017-07-26-15_17_12-Terms-_-Raven.Studio.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1045;s:6:"height";i:767;s:4:"file";s:52:"2017/07/2017-07-26-15_17_12-Terms-_-Raven.Studio.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:52:"2017-07-26-15_17_12-Terms-_-Raven.Studio-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:52:"2017-07-26-15_17_12-Terms-_-Raven.Studio-300x220.png";s:5:"width";i:300;s:6:"height";i:220;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:52:"2017-07-26-15_17_12-Terms-_-Raven.Studio-768x564.png";s:5:"width";i:768;s:6:"height";i:564;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:53:"2017-07-26-15_17_12-Terms-_-Raven.Studio-1024x752.png";s:5:"width";i:1024;s:6:"height";i:752;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seletor de idioma</title>
		<link>http://localhost:8080/?p=6840</link>
		<pubDate>Fri, 07 Jul 2017 19:49:53 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6840</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6840</wp:post_id>
		<wp:post_date><![CDATA[2017-07-07 16:49:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-07 19:49:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[seletor-de-idioma]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="principal-en"><![CDATA[principal-en]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_pll_menu_item]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:22:"hide_if_no_translation";i:0;s:12:"hide_current";i:1;s:10:"force_home";i:0;s:10:"show_flags";i:0;s:10:"show_names";i:1;s:8:"dropdown";i:0;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[#pll_switcher]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6840]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seletor de idioma</title>
		<link>http://localhost:8080/?p=6841</link>
		<pubDate>Fri, 07 Jul 2017 19:50:13 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6841</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6841</wp:post_id>
		<wp:post_date><![CDATA[2017-07-07 16:50:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-07 19:50:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[seletor-de-idioma-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="principal"><![CDATA[principal]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6841]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_pll_menu_item]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:22:"hide_if_no_translation";i:0;s:12:"hide_current";i:1;s:10:"force_home";i:0;s:10:"show_flags";i:0;s:10:"show_names";i:1;s:8:"dropdown";i:0;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[#pll_switcher]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2017-07-26 15_21_41-ravendb_Raven.Database_Indexing_Analyzers at v3.5 · ravendb_ravendb</title>
		<link>http://localhost:8080/?attachment_id=6928</link>
		<pubDate>Wed, 26 Jul 2017 18:22:42 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6928</wp:post_id>
		<wp:post_date><![CDATA[2017-07-26 15:22:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-26 18:22:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2017-07-26-15_21_41-ravendb_raven-database_indexing_analyzers-at-v3-5-%c2%b7-ravendb_ravendb]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6914</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1045;s:6:"height";i:767;s:4:"file";s:100:"2017/07/2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:100:"2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:100:"2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb-300x220.png";s:5:"width";i:300;s:6:"height";i:220;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:100:"2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb-768x564.png";s:5:"width";i:768;s:6:"height";i:564;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:101:"2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb-1024x752.png";s:5:"width";i:1024;s:6:"height";i:752;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2017-07-26 15_29_26-Terms _ Raven.Studio</title>
		<link>http://localhost:8080/?attachment_id=6929</link>
		<pubDate>Wed, 26 Jul 2017 18:31:13 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/2017-07-26-15_29_26-Terms-_-Raven.Studio.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6929</wp:post_id>
		<wp:post_date><![CDATA[2017-07-26 15:31:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-26 18:31:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2017-07-26-15_29_26-terms-_-raven-studio]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6914</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_29_26-Terms-_-Raven.Studio.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/2017-07-26-15_29_26-Terms-_-Raven.Studio.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1045;s:6:"height";i:767;s:4:"file";s:52:"2017/07/2017-07-26-15_29_26-Terms-_-Raven.Studio.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:52:"2017-07-26-15_29_26-Terms-_-Raven.Studio-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:52:"2017-07-26-15_29_26-Terms-_-Raven.Studio-300x220.png";s:5:"width";i:300;s:6:"height";i:220;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:52:"2017-07-26-15_29_26-Terms-_-Raven.Studio-768x564.png";s:5:"width";i:768;s:6:"height";i:564;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:53:"2017-07-26-15_29_26-Terms-_-Raven.Studio-1024x752.png";s:5:"width";i:1024;s:6:"height";i:752;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2017-07-26 15_35_31-C__Windows_system32_cmd.exe</title>
		<link>http://localhost:8080/?attachment_id=6930</link>
		<pubDate>Wed, 26 Jul 2017 18:35:52 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/07/2017-07-26-15_35_31-C__Windows_system32_cmd.exe_.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6930</wp:post_id>
		<wp:post_date><![CDATA[2017-07-26 15:35:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-26 18:35:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2017-07-26-15_35_31-c__windows_system32_cmd-exe]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6914</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_35_31-C__Windows_system32_cmd.exe_.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/07/2017-07-26-15_35_31-C__Windows_system32_cmd.exe_.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:780;s:6:"height";i:305;s:4:"file";s:60:"2017/07/2017-07-26-15_35_31-C__Windows_system32_cmd.exe_.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:60:"2017-07-26-15_35_31-C__Windows_system32_cmd.exe_-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:60:"2017-07-26-15_35_31-C__Windows_system32_cmd.exe_-300x117.png";s:5:"width";i:300;s:6:"height";i:117;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:60:"2017-07-26-15_35_31-C__Windows_system32_cmd.exe_-768x300.png";s:5:"width";i:768;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>puzzle</title>
		<link>http://localhost:8080/?attachment_id=6950&#038;lang=pt</link>
		<pubDate>Thu, 17 Aug 2017 15:33:48 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/08/puzzle.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6950</wp:post_id>
		<wp:post_date><![CDATA[2017-08-17 12:33:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-08-17 15:33:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[puzzle]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/08/puzzle.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/08/puzzle.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:670;s:4:"file";s:18:"2017/08/puzzle.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"puzzle-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:18:"puzzle-300x157.jpg";s:5:"width";i:300;s:6:"height";i:157;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:18:"puzzle-768x402.jpg";s:5:"width";i:768;s:6:"height";i:402;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:19:"puzzle-1024x536.jpg";s:5:"width";i:1024;s:6:"height";i:536;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IMG_20151104_220840</title>
		<link>http://localhost:8080/?attachment_id=6959&#038;lang=pt</link>
		<pubDate>Thu, 17 Aug 2017 16:47:00 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/08/IMG_20151104_220840.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6959</wp:post_id>
		<wp:post_date><![CDATA[2017-08-17 13:47:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-08-17 16:47:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_20151104_220840]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/08/IMG_20151104_220840.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/08/IMG_20151104_220840.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:576;s:4:"file";s:31:"2017/08/IMG_20151104_220840.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"IMG_20151104_220840-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:31:"IMG_20151104_220840-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:31:"IMG_20151104_220840-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:32:"IMG_20151104_220840-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>21587277_1956304777981255_3843148973171350455_o</title>
		<link>http://localhost:8080/?attachment_id=6972</link>
		<pubDate>Wed, 13 Sep 2017 18:27:13 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/09/21587277_1956304777981255_3843148973171350455_o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6972</wp:post_id>
		<wp:post_date><![CDATA[2017-09-13 15:27:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-09-13 18:27:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[21587277_1956304777981255_3843148973171350455_o]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6971</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/09/21587277_1956304777981255_3843148973171350455_o.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/09/21587277_1956304777981255_3843148973171350455_o.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2048;s:6:"height";i:1365;s:4:"file";s:59:"2017/09/21587277_1956304777981255_3843148973171350455_o.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:59:"21587277_1956304777981255_3843148973171350455_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:59:"21587277_1956304777981255_3843148973171350455_o-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:59:"21587277_1956304777981255_3843148973171350455_o-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:60:"21587277_1956304777981255_3843148973171350455_o-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Amazing_CSharp_v2(animations_splited)</title>
		<link>http://localhost:8080/?attachment_id=6973</link>
		<pubDate>Wed, 13 Sep 2017 18:31:47 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/09/Amazing_CSharp_v2animations_splited.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6973</wp:post_id>
		<wp:post_date><![CDATA[2017-09-13 15:31:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-09-13 18:31:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[amazing_csharp_v2animations_splited]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6971</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/09/Amazing_CSharp_v2animations_splited.pdf]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/09/Amazing_CSharp_v2animations_splited.pdf]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>21458153_1956307134647686_2636095235272504746_o</title>
		<link>http://localhost:8080/?attachment_id=6975</link>
		<pubDate>Wed, 13 Sep 2017 18:35:22 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/09/21458153_1956307134647686_2636095235272504746_o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6975</wp:post_id>
		<wp:post_date><![CDATA[2017-09-13 15:35:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-09-13 18:35:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[21458153_1956307134647686_2636095235272504746_o]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6971</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/09/21458153_1956307134647686_2636095235272504746_o.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/09/21458153_1956307134647686_2636095235272504746_o.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2048;s:6:"height";i:1365;s:4:"file";s:59:"2017/09/21458153_1956307134647686_2636095235272504746_o.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:59:"21458153_1956307134647686_2636095235272504746_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:59:"21458153_1956307134647686_2636095235272504746_o-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:59:"21458153_1956307134647686_2636095235272504746_o-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:60:"21458153_1956307134647686_2636095235272504746_o-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>databoff-frontend</title>
		<link>http://localhost:8080/?attachment_id=6981&#038;lang=pt</link>
		<pubDate>Mon, 25 Sep 2017 01:49:43 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/09/databoff-frontend.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6981</wp:post_id>
		<wp:post_date><![CDATA[2017-09-24 22:49:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-09-25 01:49:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[databoff-frontend]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/09/databoff-frontend.zip]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/09/databoff-frontend.zip]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rob-bye-141865</title>
		<link>http://localhost:8080/?attachment_id=6989</link>
		<pubDate>Mon, 02 Oct 2017 18:11:24 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/rob-bye-141865.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6989</wp:post_id>
		<wp:post_date><![CDATA[2017-10-02 15:11:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-02 18:11:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[rob-bye-141865]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6982</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/rob-bye-141865.jpg]]></wp:attachment_url>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/rob-bye-141865.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1512;s:6:"height";i:1134;s:4:"file";s:26:"2017/10/rob-bye-141865.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"rob-bye-141865-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:26:"rob-bye-141865-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:26:"rob-bye-141865-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:27:"rob-bye-141865-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rplot</title>
		<link>http://localhost:8080/?attachment_id=6999</link>
		<pubDate>Mon, 02 Oct 2017 20:58:28 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/Rplot.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6999</wp:post_id>
		<wp:post_date><![CDATA[2017-10-02 17:58:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-02 20:58:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[rplot]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6995</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/Rplot.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/Rplot.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:712;s:6:"height";i:547;s:4:"file";s:17:"2017/10/Rplot.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"Rplot-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"Rplot-300x230.png";s:5:"width";i:300;s:6:"height";i:230;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>linh-pham-221033</title>
		<link>http://localhost:8080/?attachment_id=7011</link>
		<pubDate>Mon, 02 Oct 2017 21:32:24 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/linh-pham-221033.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7011</wp:post_id>
		<wp:post_date><![CDATA[2017-10-02 18:32:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-02 21:32:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[linh-pham-221033]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>6995</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/linh-pham-221033.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/linh-pham-221033.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1495;s:6:"height";i:997;s:4:"file";s:28:"2017/10/linh-pham-221033.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"linh-pham-221033-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:28:"linh-pham-221033-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:28:"linh-pham-221033-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:29:"linh-pham-221033-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>exception</title>
		<link>http://localhost:8080/?attachment_id=7017</link>
		<pubDate>Sat, 07 Oct 2017 12:40:09 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/exception.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7017</wp:post_id>
		<wp:post_date><![CDATA[2017-10-07 09:40:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-07 12:40:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[exception]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>7014</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/exception.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/exception.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1124;s:6:"height";i:602;s:4:"file";s:21:"2017/10/exception.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"exception-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:21:"exception-300x161.jpg";s:5:"width";i:300;s:6:"height";i:161;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:21:"exception-768x411.jpg";s:5:"width";i:768;s:6:"height";i:411;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:22:"exception-1024x548.jpg";s:5:"width";i:1024;s:6:"height";i:548;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>alex-knight-199368</title>
		<link>http://localhost:8080/?attachment_id=7021</link>
		<pubDate>Tue, 24 Oct 2017 22:40:27 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/alex-knight-199368.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7021</wp:post_id>
		<wp:post_date><![CDATA[2017-10-24 19:40:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-24 22:40:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[alex-knight-199368]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>7020</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/alex-knight-199368.jpg]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/alex-knight-199368.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1134;s:6:"height";i:756;s:4:"file";s:30:"2017/10/alex-knight-199368.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"alex-knight-199368-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:30:"alex-knight-199368-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:30:"alex-knight-199368-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"alex-knight-199368-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>git_elemar</title>
		<link>http://localhost:8080/?attachment_id=7023</link>
		<pubDate>Tue, 24 Oct 2017 22:42:55 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/git_elemar.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7023</wp:post_id>
		<wp:post_date><![CDATA[2017-10-24 19:42:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-24 22:42:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[git_elemar]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>7020</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/git_elemar.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/git_elemar.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1000;s:6:"height";i:664;s:4:"file";s:22:"2017/10/git_elemar.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"git_elemar-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"git_elemar-300x199.png";s:5:"width";i:300;s:6:"height";i:199;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:22:"git_elemar-768x510.png";s:5:"width";i:768;s:6:"height";i:510;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>logo_elemarjr</title>
		<link>http://localhost:8080/?attachment_id=7029&#038;lang=pt</link>
		<pubDate>Wed, 25 Oct 2017 13:44:26 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/logo_elemarjr.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7029</wp:post_id>
		<wp:post_date><![CDATA[2017-10-25 10:44:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-25 13:44:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[logo_elemarjr]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/logo_elemarjr.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/logo_elemarjr.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:189;s:4:"file";s:25:"2017/10/logo_elemarjr.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"logo_elemarjr-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"logo_elemarjr-300x113.png";s:5:"width";i:300;s:6:"height";i:113;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>logo_elemarjr_54</title>
		<link>http://localhost:8080/?attachment_id=7030&#038;lang=pt</link>
		<pubDate>Wed, 25 Oct 2017 13:46:31 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/logo_elemarjr_54.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7030</wp:post_id>
		<wp:post_date><![CDATA[2017-10-25 10:46:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-25 13:46:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[logo_elemarjr_54]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/logo_elemarjr_54.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/logo_elemarjr_54.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:143;s:6:"height";i:54;s:4:"file";s:28:"2017/10/logo_elemarjr_54.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>logo_elemar_114</title>
		<link>http://localhost:8080/?attachment_id=7031&#038;lang=pt</link>
		<pubDate>Wed, 25 Oct 2017 13:52:06 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/wp-content/uploads/2017/10/logo_elemar_114.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7031</wp:post_id>
		<wp:post_date><![CDATA[2017-10-25 10:52:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-25 13:52:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[logo_elemar_114]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://localhost:8080/wp-content/uploads/2017/10/logo_elemar_114.png]]></wp:attachment_url>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/10/logo_elemar_114.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:301;s:6:"height";i:114;s:4:"file";s:27:"2017/10/logo_elemar_114.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"logo_elemar_114-150x114.png";s:5:"width";i:150;s:6:"height";i:114;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:27:"logo_elemar_114-300x114.png";s:5:"width";i:300;s:6:"height";i:114;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cara,cadê os teus posts?</title>
		<link>http://localhost:8080/?p=6297&#038;lang=pt</link>
		<pubDate>Mon, 03 Apr 2017 20:16:26 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6297</guid>
		<description></description>
		<content:encoded><![CDATA[[vc_row type="in_container" full_screen_row_position="middle" scene_position="center" text_color="dark" text_align="left" overlay_strength="0.3"][vc_column column_padding="no-extra-padding" column_padding_position="all" background_color_opacity="1" background_hover_color_opacity="1" column_shadow="none" width="1/1" tablet_text_alignment="default" phone_text_alignment="default" column_border_width="none" column_border_style="solid"][vc_column_text]Você deve ter percebido que os meus posts antigos sumiram, não? <strong>Pois é, com muito pesar, tive que tomar a decisão de dar um reboot aqui no blog</strong>.

Eis minhas razões:
<ol>
 	<li>Havia um bocado de conteúdo defasado.</li>
 	<li>Muitos posts apresentavam sérios problemas de formatação.</li>
 	<li>Não havia uma boa estruturação de Categorias/Tags.</li>
</ol>
<strong>Isso significa que todo aquele material foi perdido? Provavelmente sim.</strong> Mas prometo muito mais conteúdo daqui para diante.[/vc_column_text][/vc_column][/vc_row]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6297</wp:post_id>
		<wp:post_date><![CDATA[2017-04-03 17:16:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-03 20:16:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[caracade-os-teus-posts]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="comunicado"><![CDATA[Comunicado]]></category>
		<category domain="post_translations" nicename="pll_58e2e248090de"><![CDATA[pll_58e2e248090de]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6483]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/05/questions-2212771_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_needs_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Giovanni Bassi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[Giggio@giggio.net]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.lambda3.com.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[2.44.198.251]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-03 19:35:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-03 22:35:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Relax, Elemar. Nada se perde na Internet. http://web.archive.org/web/*/www.elemarjr.com]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Alberto Monteiro]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[alberto.monteiro@live.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://albertomonteiro.net.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.104.125.42]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-04 10:42:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-04 13:42:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valeu d+ pelo link, funciona lindamente!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>2</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Tiago Takahashi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tiagokioshi@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[201.86.71.228]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-05 08:34:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-05 11:34:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valeuu, funcionou show! Só não encontrei o post que eu estava procurando sobre : Ganhando Flexibilidade e Escalabilidade com Mensageria e “Pipes and Filters” (usando C#). =/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>2</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Tiago Costa]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[eutiagocosta@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[191.17.44.9]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-06 11:40:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-06 14:40:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Justo agora que tive a oportunidade de implementar aqui Event Sourcing + CQRS em java =(]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1491489621.0715";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1491498600.9314";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Antônio Filho]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[antoniomquadrosfilho@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[201.91.94.85]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-11 13:03:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-11 16:03:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Poxa, é uma pena. Para mim o conteúdo era muito bom... acredito que para a maioria das pessoas que leem o que você escreve. Recentemente me baseei em em um de seus artigos falando sobre utilizar menos tipos primitivos... muito bom.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1491926590.9853";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1491926988.2652";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Gabriel Takashi Katakura]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gt.katakura@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[187.112.247.198]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-12 09:00:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-12 12:00:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Aguardando outro post como \"Melhorando validações no domínio com melhores assinaturas\", achava aquela ideia sensacional, mas infelizmente não guardei o código exemplificado ;(]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1491998446.3994";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1492007674.0924";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Vinicius de Melo Rocha]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vmrocha@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.130.225.123]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-13 17:31:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-13 20:31:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Que triste, não precisava ter apagado tudo! :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1492115493.0247";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1492187562.0979";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Gonçalves]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markapollo@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[189.84.211.194]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-05-15 17:18:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-05-15 20:18:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Poxa, pena mesmo, eu usava muito como referência, soubesse disso teria salvo todos os artigos, rs]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1494879509.1346";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1494959820.4731";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Arquitetos Arquitetando Arquiteturas</title>
		<link>http://localhost:8080/?p=6309&#038;lang=pt</link>
		<pubDate>Mon, 03 Apr 2017 21:25:45 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6309</guid>
		<description></description>
		<content:encoded><![CDATA[Em todos esses anos tenho recebido relatos de desenvolvedores projetando sistemas com belas arquiteturas. Muitos deles tem levantado um bocado de questões sobre a necessidade de um "arquiteto".
<p style="padding-left: 60px;">Nunca é demais lembrar - quando me refiro a <strong>arquitetura</strong>, falo dos <strong>componentes</strong> de uma aplicação, das <strong>responsabilidades</strong> de cada componente, e seus relacionamentos.</p>
<p style="padding-left: 60px;"><em><strong>ARQUITETURA = COMPONENTES + SUAS RESPONSABILIDADES + SEUS RELACIONAMENTOS</strong></em></p>
Muita da resistência ao papel do <em>arquiteto de software</em> ocorre por causa da abordagem burocrática, pomposa e desconectada, cheia de diagramas e pouco código adotada por alguns. Felizmente, isso tem pouco haver com a arquitetura que defendo.

Papéis no time, processos de trabalho e artefatos podem ser analisados separadamente. Vejamos:
<ul>
 	<li><strong>Papel/cargo: Arquiteto</strong> - Muitas organizações possuem um papel (ou mesmo um cargo) dedicado ao <em>arquiteto de software</em>. Nos descritivos, encontramos tanto gente desconectada do desenvolvimento quanto gente que <em>coloca a mão na massa - </em>acredite, tenho visto os dois modelos funcionarem e falharem<em>. </em>Observe, entretanto, que quaisquer destes perfis não tem relação com o processo que será seguido.</li>
</ul>
<ul>
 	<li><strong>Processo: Elaborar Arquiteturas</strong> - Considere que não há código quando começamos um projeto de software e há um software rodando no seu final - o que existe entre o primeiro momento e o segundo é um time executando diversas atividades. Algumas pessoas gostam de <em>pensar o sistema todo (</em><em>BDUF)</em> antes de escrever qualquer código. Outros, eu inclusive, preferem deixar a <em>arquitetura emergir </em>durante o desenvolvimento. De qualquer forma,  perceba que com o software concluído é impossível determinar qual modelo foi seguido.</li>
</ul>
<ul>
 	<li><strong>Artefato: Arquitetura </strong>- Ao observar um software, você consegue inferir um bocado de características da arquitetura (camadas, modelo de colaboração, persistência) - todo software possui uma arquitetura, mesmo que ela tenha emergido de forma não coordenada.</li>
</ul>
Vamos então responder algumas questões fundamentais.
<p style="padding-left: 30px;"><em>Precisamos de alguém com o papel de arquiteto em nosso time?</em></p>
<p style="padding-left: 30px;"><strong>Depende!</strong> Qual é o tamanho do projeto? Qual é a complexidade envolvida? Mais importante, quais são os riscos? Quanto maior o projeto, complexidade ou riscos, mais necessária será a figura do arquiteto. Alguém que tenha experiência nesse tipo de projetos e que já colecione algumas cicatrizes seria uma boa escolha.</p>
<p style="padding-left: 30px;"><em>Como deveria ser a atuação do arquiteto?</em></p>
<p style="padding-left: 30px;"><strong>Pessoalmente, eu entendo que o arquiteto deve se portar como um orquestrador.</strong> Alguém que consiga ouvir todas as partes envolvidas com o projeto (especialistas de domínio, desenvolvedores, pessoal do negócio) e consolidar decisões. Cabe ao arquiteto a responsabilidade de definir claramente a estratégia do projeto e assegurar que ela estará sendo respeitada.</p>
<p style="padding-left: 30px;"><em><strong>ESTRATÉGIA = PADRÃO COERENTE PARA TOMADA DE DECISÕES.</strong></em></p>
<p style="padding-left: 30px;"><i>E os tais diagramas? Eles são mesmo necessários?</i></p>
<p style="padding-left: 30px;">Sim! Eles são. Os diagramas servem para comunicar as decisões de arquitetura para todas as partes envolvidas.</p>
<p style="padding-left: 30px;"><i>O código não seria o suficiente?</i></p>
<p style="padding-left: 30px;">Não. Eu penso que não são suficientes porque nem todas as pessoas envolvidas no projeto sabem ler o código. A arquitetura não serve apenas para o time técnico. Ela é uma ferramenta de comunicação. Além disso, alguns diagramas surgem antes de que qualquer código tenha sido produzido. Diagramas permitem expressar a arquitetura em diferentes níveis de detalhe.</p>
<p style="padding-left: 30px;"><i>Não temos ninguém com o cargo de arquiteto. Como proceder?</i></p>
<p style="padding-left: 30px;">Nesses casos, para cada projeto, é bom determinar alguém - com alguma experiência - para fazer a tal "orquestração". Há quem defenda arquitetura como uma responsabilidade compartilhada. Eu, entretanto, penso que aquilo que é responsabilidade de todos, não é de ninguém.</p>
Se você tem mais perguntas, deixe-as aqui nos comentários. Se não concorda com algum ponto, deixe-me saber sua opinião.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6309</wp:post_id>
		<wp:post_date><![CDATA[2017-04-03 18:25:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-03 21:25:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[arquitetos-arquitetando-arquiteturas]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="arquitetura"><![CDATA[Arquitetura]]></category>
		<category domain="post_translations" nicename="pll_58e2f5e508cbd"><![CDATA[pll_58e2f5e508cbd]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6487]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/blackboard-837210_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#78cd6e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[23]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-03-arquitetos-arquitetando-arquiteturas.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[eaf6a0857ad3c125f82ec4d3d3c68b5d8dfcd472]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Robson Castilho]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nosborcastilho@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://robsoncastilho.com.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[179.214.141.120]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-03 21:24:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-04 00:24:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá, Elemar!

Em se tratando do ponto \"o arquiteto deve se portar como um orquestrador\", como ficaria a interação dele com um Product Owner (ou algo similar) em um projeto? Já teve experiência do tipo? Conte-nos aí!

Abs!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Cleiton Felipe de Moraes]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cleiton.felipe@yahoo.com.br]]></wp:comment_author_email>
			<wp:comment_author_url>http://cleitonfelipe.azurewebsites.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[201.87.158.242]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-04 15:13:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-04 18:13:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá Elemar,
Show de bola o post, eu só tenho uma dúvida: No caso de todos os software ter uma arquitetura mesmo que seja de forma não coordenada, você acha que ainda assim o software pode ter sucesso pleno(ex: Ser um software escalável e ter uma manutenção eficaz)? Ou isso é relativo? Me corrija se eu estiver me confundindo ou falando besteira :D... 
Abraços!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dude, where are your posts?</title>
		<link>http://localhost:8080/?p=6339&#038;lang=en</link>
		<pubDate>Tue, 04 Apr 2017 00:01:11 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6339</guid>
		<description></description>
		<content:encoded><![CDATA[As you probably noted, my old blog posts are gone! <strong>It's sad, but I had to take this way</strong>.

Main reasons:
<ol>
 	<li>There was a lot of legacy content.</li>
 	<li>Too many posts with formatting issues.</li>
 	<li>There was no good categories and tags for all content.</li>
</ol>
<strong>That means all old content is really gone?</strong> Probably yes! I will do my best to provide best content for you.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6339</wp:post_id>
		<wp:post_date><![CDATA[2017-04-03 21:01:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-04 00:01:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dude-where-are-your-posts]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_translations" nicename="pll_58e2e248090de"><![CDATA[pll_58e2e248090de]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_needs_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/questions-2212771_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6507]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-03-dude-where-are-your-posts.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[7f1fe4f9712b10d699aabfcf6fccb2c3ecf14efa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Shimmy Weitzhandler]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[weitzhandler@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.microsoft.co.il/shimmy/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.66.89.108]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-05-17 02:59:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-05-17 05:59:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[WOW that\'s a shame!
[This](http://stackoverflow.com/questions/38811143/identityserver4-with-ef6) StackOverFlow answer linked to you and it\'s gone. You should have at least migrate the old stuff to GitHub etc.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1495000792.0772";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1495030222.9123";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Architects Architecting Architectures</title>
		<link>http://localhost:8080/?p=6350&#038;lang=en</link>
		<pubDate>Tue, 04 Apr 2017 01:24:52 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6350</guid>
		<description></description>
		<content:encoded><![CDATA[For years, I have known developers who designed beautiful architectures. A lot of them are questioning the need for a software architect role.
<p style="padding-left: 30px;">It's never too much to repeat - What I mean when talking about <strong>software architecture</strong> is: <strong>components</strong>, their <strong>responsibilities</strong>, and <strong>relationships</strong>.</p>
<p style="padding-left: 30px;"><strong>ARCHITECTURE = COMPONENTS + RESPONSIBILITIES + RELATIONSHIPS </strong></p>
This questioning may stem from a bureaucracy-intensive process, adopted by "diagrams-only" architects. Fortunately, it is not what I am talking about.

Team roles, work processes, and artifacts could (and should) be analyzed independently. Let's see:
<ul>
 	<li><strong>Team Role: Architect</strong> - A lot of organizations adopt a dedicated position responsible for the software architecture. Some architects DO WRITE CODE; others DO NOT. I have seen both fail and succeed.</li>
</ul>
<ul>
 	<li><strong>Process: Architecting </strong>- There is no code when we are starting a new project. Right? There is a running system when the project is done. Between these two moments, we have a team performing some tasks. Some people will prefer to think about the entire system before to write any code. Some people, like me, will prefer to have an emergent architecture. Anyway, when the software is up and running it is impossible to determine which method was the adopted.</li>
</ul>
<ul>
 	<li><strong>Artifact: Architecture</strong> - Just observing a running system, it is easy to infer a lot about the related architecture decisions (layers, collaboration model, persistence) - every software system has an architecture, even when that one was not properly designed.</li>
</ul>
So, let's try to answer some questions:
<p style="padding-left: 30px;"><em>Do we need someone with the "Software Architecture Role"? </em></p>
<p style="padding-left: 30px;"><strong>Sometimes yes, sometimes no! </strong>How big is the project? What is the domain complexity? What are the associated risks? The greater the design, complexity or risks, the more necessary will be the presence of an architect. Someone with experience and with some failing histories to share.</p>
<p style="padding-left: 30px;"><em>How should the architect behave?</em></p>
<p style="padding-left: 30px;"><strong>Personally, I think the architect should behave as a <em>maestro</em>. </strong>The architect should listen to the team, customers, domain specialists, business people, and sponsors. The architect should make explicit the project strategy and ensure that the strategy is respected in all decisions.</p>
<p style="padding-left: 30px;"><strong>PROJECT STRATEGY = COHERENT DECISION-MAKING PATTERN</strong></p>
<p style="padding-left: 30px;"><em>What about the diagrams? Are they needed?</em></p>
<p style="padding-left: 30px;">Yes! They are needed. The diagrams are communication tools. They are important to communicate the architecture to everyone.</p>
<p style="padding-left: 30px;"><em>Isn't the code enough?</em></p>
<p style="padding-left: 30px;">No, it's not. Not every people knows how to read the code. The diagrams are not targeted only to the technical team. Like I said before, the diagrams are communication tools. Some diagrams are created before any code. Diagrams could express different levels of detail.</p>
<p style="padding-left: 30px;"><em>We do not have a software architect role. How to proceed?</em></p>
<p style="padding-left: 30px;">For each project, it is a good idea to have someone - with experience - to perform this task. There are people defending architecting as a shared responsibility. I don't believe in this.</p>
Questions or comments? Let me know your opinion.

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6350</wp:post_id>
		<wp:post_date><![CDATA[2017-04-03 22:24:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-04 01:24:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[architects-architecting-architectures]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_translations" nicename="pll_58e2f5e508cbd"><![CDATA[pll_58e2f5e508cbd]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6506]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/blackboard-837210_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#78cd6e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-03-architects-architecting-architectures.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[bd0813c44ccc7c5ea4422db8e26176d66ffd47c9]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Eduardo Spaki]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[spoky.br@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://spaki.io</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[89.154.68.108]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-10 04:12:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-10 07:12:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice, Ill share, because I knew a lot of people who think the software architect is a kind of \"power coder\" or senior+ software dev/eng]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1491808350.8397";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1491810936.0365";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>When &#039;null&#039; is not good enough</title>
		<link>http://localhost:8080/?p=6385&#038;lang=en</link>
		<pubDate>Fri, 14 Apr 2017 18:26:55 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6385</guid>
		<description></description>
		<content:encoded><![CDATA[As an experienced .NET developer, you have to deal with <em>NullReferenceException</em> occurrences every day. Am I right? I firmly believe this is a design problem. Please, consider the following code sample:
<pre><code>public interface IEmployeeRepository
{
  Employee GeyById(string id);
}

class EmployeeRepository : IEmployeeRepository
{
  public Employee GetById(string id)
    =&gt; new DbContext().Find(id);
}
</code></pre>

What should be the result of the <em>GetById</em> execution? An <em>Employee</em> instance, right? Unfortunately, this is not the case all the time. If there is no record with the specified id, the result would be <em>null</em>. Maybe you think that is ok, but I don't think so.

The fact is the code is not entirely clear about what should be the expected result of the method execution. As an experienced developer, sometimes you will check the method result, but sometimes not...

My proposal would be to start using a container indicating that, at times, the result would be "no result."

<pre><code>public interface IEmployeeRepository
{
  Option&lt;Employee&gt; GeyById(string id);
}

class EmployeeRepository : IEmployeeRepository
{
  public Option&lt;Employee&gt;; GeyById(string id)
    =&gt;; new DbContext().Find(id);
}
</code></pre>

Now, the code is clearer. Don't you think?
<h3>What about the Option implementation</h3>
The <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp/blob/master/src/ElemarJR.FunctionalCSharp/Option.cs">Option Type</a> is just a regular C# struct that provides implicit conversions and very basic functional operations.

The most interesting thing about this approach is that programmers consuming the <em>EmployeeRepository</em> from the previous example would not have direct access to the (possible) <em>employee</em> instance. The only way to get it would be thorugh the container.
<pre><code>public IActionResult Get(string id) =&gt; _repository.GetById(id)
  .Match&lt;IActionResult&gt;(
    some: employee =&gt; Ok(employee),
    none: () =&gt; NotFound()
  );
</code></pre>

<em>NullReferenceExcption</em> is gone by design.

Nice, right? <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp/blob/master/src/ElemarJR.FunctionalCSharp/Option.cs">Option Type</a> is available on my <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp">github</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6385</wp:post_id>
		<wp:post_date><![CDATA[2017-04-14 15:26:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-14 18:26:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[when-null-is-not-good-enough]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
		<category domain="post_tag" nicename="option"><![CDATA[option]]></category>
		<category domain="post_translations" nicename="pll_58f11d0d44ea6"><![CDATA[pll_58f11d0d44ea6]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6505]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ff4629]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/problem-1951987_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-14-when-null-is-not-good-enough.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[f66d00a7697e104f9da6f42259d6ab737417a89e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Quando &#039;null&#039; é um problema</title>
		<link>http://localhost:8080/?p=6400&#038;lang=pt</link>
		<pubDate>Fri, 14 Apr 2017 19:03:40 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6400</guid>
		<description></description>
		<content:encoded><![CDATA[Como um programador experiente, você precisa lidar com ocorrências <em>NullReferenceException</em> todos os dias. Certo? Eu defendo que este é um problema de design. Por favor, considere o código que segue:
<pre><code>public interface IEmployeeRepository
{
  Employee GeyById(string id);
}

class EmployeeRepository : IEmployeeRepository
{
  public Employee GetById(string id)
    =&gt; new DbContext().Find(id);
}
</code></pre>

Qual deveria ser o resultado da execução de <em>GetById</em>? Uma instância de <em>Employee</em>, certo? Infelizmente, este não é o caso sempre. Se não há registro com o id especificado, o resutaldo seria <em>null</em>. Talvez você esteja conformado com isso. Eu não!

O fato é que o código não é totalmente claro sobre qual deveria ser o resultado esperado para a execução desse método. Como programador experiente, algumas vezes você vai verificar o resultado do método, mas as vezes não...

Minha proposta seria começar a usar um container indicando que, as vezes, o resultado seria "sem resultado".
<pre><code>public interface IEmployeeRepository
{
  Option&lt;Employee&gt; GeyById(string id);
}

class EmployeeRepository : IEmployeeRepository
{
  public Option&lt;Employee&gt;; GeyById(string id)
    =&gt;; new DbContext().Find(id);
}
</code></pre>

Agora o código é bem mais claro. Não acha?

<h3>Sobre a implementação de Option</h3>
O <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp/blob/master/src/ElemarJR.FunctionalCSharp/Option.cs">tipo Option</a> é apenas uma <em>struct</em> que provê algumas conversões implicitas e algumas operações funcionais básicas.

A coisa mais interessante sobre essa abordagem é que os programadores consumindo <em>EmployeeRepository</em> do exemplo anterior não teriam mais acesso direto a (possível) instância de <em>employee</em>. O único meio para ter acesso seria através do container.

<pre><code>public IActionResult Get(string id) =&gt; _repository.GetById(id)
  .Match&lt;IActionResult&gt;(
    some: employee =&gt; Ok(employee),
    none: () =&gt; NotFound()
  );
</code></pre>

<em>NullReferenceExcption</em> se foi!

Legal, não acha? <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp/blob/master/src/ElemarJR.FunctionalCSharp/Option.cs">Option</a> está disponível no meu <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp">github</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6400</wp:post_id>
		<wp:post_date><![CDATA[2017-04-14 16:03:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-14 19:03:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[quando-null-e-um-problema]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="funcional"><![CDATA[Funcional]]></category>
		<category domain="post_tag" nicename="option-pt"><![CDATA[option]]></category>
		<category domain="post_translations" nicename="pll_58f11d0d44ea6"><![CDATA[pll_58f11d0d44ea6]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6490]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/problem-1951987_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ff4629]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-14-quando-null-e-um-problema.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[0facdbe02ccf8a0c9a89a70e2630f7339f24870b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Fabio Gemignani]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fabiogemignani@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.188.240.151]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-17 10:13:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-17 13:13:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito interessante, Elemar! São pequenos cuidados assim que tornam nossas aplicações cada vez melhores!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1492434833.0991";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1492435409.2868";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Lopes]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lucaslopesr@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[179.105.212.33]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-08-24 14:46:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-08-24 17:46:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito interessante.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1504878847.8279";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1503596791.2487";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Daniel Pinto]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[me@danielpin.to]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.159.215.59]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-12-02 11:18:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-12-02 14:18:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente post.

Uma duvida, no caso onde o repositorio esta implementado com async/await sendo que retorna uma Task funcionaria igual?

A implementacao seria algo como:  public async Option&lt;Task&lt;List&gt;&gt; GetXpto() ?

Abs,]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1512392491.2956";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1512224293.8106";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Exceptions are too intrusive</title>
		<link>http://localhost:8080/?p=6402&#038;lang=en</link>
		<pubDate>Fri, 14 Apr 2017 20:00:57 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6402</guid>
		<description></description>
		<content:encoded><![CDATA[In the <a href="http://www.elemarjr.com/en/2017/04/when-null-is-not-good-enough/">previous post</a>, I shared an example of how <em>containers</em> could help us to make the code clearer about what to expect as execution results.

<pre><code>public interface IEmployeeRepository
{
  Option&lt;Employee&gt; GeyById(string id);
}
 
class EmployeeRepository : IEmployeeRepository
{
  public Option&lt;Employee&gt; GeyById(string id)
    =&gt;; new DbContext().Find(id);
}
</code></pre>

But, what about exceptions?! The <em>GetById</em> method would throw an exception if something goes wrong (for example, if it is not possible to connect to the database), but there is nothing in the method signature about it.

<h3>The <em>Either</em> container</h3>
A much better approach would be:

<pre></code>public interface IEmployeeRepository
{
    Either&lt;Exception, Option&lt;Employee&gt;&gt; GeyById(string id);
}

class EmployeeRepository : IEmployeeRepository
{
    public Either&lt;Exception, Option&lt;Employee&gt;&gt; GeyById(string id)
    {
        try
        {
            return new DbContext().Find(id);
        }
        catch (Exception e)
        {
            return e;
        }
    }
}</code></pre>

The <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp/blob/master/src/ElemarJR.FunctionalCSharp/Either.cs">Either Type</a> is just a regular C# struct that provides implicit conversions and very basic functional operations. It allows us to return different type results. In this example, we are using this container to make explicit that this method could result in either an employee instance or an exception.

<h3>The <em>Try</em> container</h3>
I love the Either container, but I don't think it is good enough! I have been working hard to make my code even clearer. 


<pre><code>public interface IEmployeeRepository
{
    Try&lt;Exception, Option&lt;Employee&gt;&gt; GeyById(string id);
}

class EmployeeRepository : IEmployeeRepository
{
    public Try&lt;Exception, Option&lt;Employee&gt;&gt; GeyById(string id)
        =&gt; Try.Run(return new DbContext().Find(id));
}
</code></pre>

The <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp/blob/master/src/ElemarJR.FunctionalCSharp/Try.cs">Try Type</a>, as the Either type, is just a regular C# struct that provides implicit conversions and very basic functional operations. It allows us to return different type results for failure and success, explicitly. 

The most interesting thing about this approach is that the <em>EmployeeRepository</em> users would be forced to handle exceptions.

<pre><code>public IActionResult Get(string id) =&gt; _repository.GetById(id).Match&lt;IActionResult&gt;(
  failure: _ =&gt; DatabaseError(),
  success: e =&gt; e .Match&lt;IActionResult&gt;(
    some: employee =&gt; Ok(employee),
    none: () =&gt; NotFound()
  ));
</code></pre>

Nice, right? <em>Either</em> and <em>Try</em> implementations are available on my <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp">github</a>.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6402</wp:post_id>
		<wp:post_date><![CDATA[2017-04-14 17:00:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-14 20:00:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[exceptions-are-too-intrusive]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="either"><![CDATA[either]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="exceptions"><![CDATA[exceptions]]></category>
		<category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
		<category domain="post_translations" nicename="pll_58f12b6088142"><![CDATA[pll_58f12b6088142]]></category>
		<category domain="post_tag" nicename="try"><![CDATA[try]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6504]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/accept-1671024_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ff4629]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-14-exceptions-are-too-intrusive.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[0019a5d74cd2fb93fb523f0b90832ffc39004f94]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Júnior]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[junior.tads@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://medium.com/@junior.tads</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[187.50.200.224]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-07 10:04:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-07 13:04:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente abordagem, principalmente pela chamada que além de fácil leitura se torna obrigatório o tratamento.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1496840850.0452";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1496840654.1858";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Exceptions são muito intrusivas</title>
		<link>http://localhost:8080/?p=6408&#038;lang=pt</link>
		<pubDate>Fri, 14 Apr 2017 20:14:45 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6408</guid>
		<description></description>
		<content:encoded><![CDATA[No <a href="http://www.elemarjr.com/pt/2017/04/quando-null-e-um-problema/">post anterior</a>, compartilhei um exemplo de como <em>containers</em> podem nos ajudar a deixar o código mais claro sobre os resultados de um método.

<pre><code>public interface IEmployeeRepository
{
  Option&lt;Employee&gt; GeyById(string id);
}
 
class EmployeeRepository : IEmployeeRepository
{
  public Option&lt;Employee&gt; GeyById(string id)
    =&gt;; new DbContext().Find(id);
}
</code></pre>

E o que temos sobre Exceptions?! O método <em>GetById</em> irá lançar uma exception se alguma coisa der errado (se não for possível conectar com o banco, por exemplo), mas não há nada sobre isso na assinatura do método.

<h3>Either</h3>
Uma abordagem superior seria:

<pre></code>public interface IEmployeeRepository
{
    Either&lt;Exception, Option&lt;Employee&gt;&gt; GeyById(string id);
}

class EmployeeRepository : IEmployeeRepository
{
    public Either&lt;Exception, Option&lt;Employee&gt;&gt; GeyById(string id)
    {
        try
        {
            return new DbContext().Find(id);
        }
        catch (Exception e)
        {
            return e;
        }
    }
}</code></pre>

O <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp/blob/master/src/ElemarJR.FunctionalCSharp/Either.cs">tipo Either</a> é apenas uma struct comum com conversões implícitas e algumas operações funcionais. Ele permite diferentes tipos de retorno. Neste exemplo, estamos usando o container para tornar explícito que o método pode resultar tanto uma instância de <em>Employee</em> quanto uma exceção.

<h3>Try</h3>
Eu amo o Either, mas ele não é bom o suficiente! Eu tenho trabalhando bastante para tornar o meu código ainda mais claro. 

<pre><code>public interface IEmployeeRepository
{
    Try&lt;Exception, Option&lt;Employee&gt;&gt; GeyById(string id);
}

class EmployeeRepository : IEmployeeRepository
{
    public Try&lt;Exception, Option&lt;Employee&gt;&gt; GeyById(string id)
        =&gt; Try.Run(return new DbContext().Find(id));
}
</code></pre>

O <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp/blob/master/src/ElemarJR.FunctionalCSharp/Try.cs">tipo Try</a>, assim como Either, é uma struct que provê conversões implícitas e algumas operações muito básicas. Ela permite que diferentes tipos de retorno para falha e para sucesso. 

A coisa mais interessante sobre esta abordagem é que os programadores que consomem <em>EmployeeRepository</em> são agora forçados a tratar exceções.

<pre><code>public IActionResult Get(string id) =&gt; _repository.GetById(id).Match&lt;IActionResult&gt;(
  failure: _ =&gt; DatabaseError(),
  success: e =&gt; e .Match&lt;IActionResult&gt;(
    some: employee =&gt; Ok(employee),
    none: () =&gt; NotFound()
  ));
</code></pre>

Implementações de <em>Either</em> e <em>Try</em> estão disponíveis no meu <a href="https://github.com/ElemarJR/ElemarJR.FunctionalCSharp">github</a>.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6408</wp:post_id>
		<wp:post_date><![CDATA[2017-04-14 17:14:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-14 20:14:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[exceptions-sao-muito-intrusivas]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="either-pt"><![CDATA[either]]></category>
		<category domain="post_tag" nicename="exceptions-pt"><![CDATA[exceptions]]></category>
		<category domain="post_tag" nicename="funcional"><![CDATA[Funcional]]></category>
		<category domain="post_translations" nicename="pll_58f12b6088142"><![CDATA[pll_58f12b6088142]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6491]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/accept-1671024_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ff4629]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-14-exceptions-sao-muito-intrusivas.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[43aed45c707eb3ecc1a099b2982342c25346d599]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Rafael Oliveira]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rafaelgpo@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[189.6.235.95]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-07-06 13:22:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-07-06 16:22:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Achei fantástica sua abordagem. Só não entendi como o programador pode ser forçado a tratar a exceção se ele ainda pode simplesmente chamar _repository.GetById(id) sem o Match()]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1499358176.3421";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1499358489.8635";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[elemarjr]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[elemarjr@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.79.96.135]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-07-06 13:28:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-07-06 16:28:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sem o match ele não chega no valor.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>18</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1499358522.7826";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Tiago]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[trosendo.dev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[187.32.163.105]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-07-26 14:46:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-07-26 17:46:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Elemar, lembro de um poste seu aonde você encadeava chamadas com o Try, porém não estou conseguindo achar no seu blog, parece que ele foi resetado rs, você teria ele ai ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1501091176.9385";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1501092850.0295";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Hexagonal Architecture Pattern</title>
		<link>http://localhost:8080/?p=6412&#038;lang=en</link>
		<pubDate>Mon, 17 Apr 2017 12:49:09 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6412</guid>
		<description></description>
		<content:encoded><![CDATA[Some years ago, <a href="http://alistair.cockburn.us/Hexagonal+architecture">Alistair Cockburn</a> proposed this interesting pattern. Quoting his words, the primary intent is:
<p style="padding-left: 30px;"><em>Allow an application to equally be driven by users, programs, automated test or batch scripts, and to be developed and tested in isolation from its eventual run-time devices and databases.</em></p>
<p style="padding-left: 30px;"><em>As events arrive from the outside world at a port, a technology-specific adapter converts it into a usable procedure call or message and passes it to the application. The application is blissfully ignorant of the nature of the input device. When the application has something to send out, it sends it out through a port to an adapter, which creates the appropriate signals needed by the receiving technology (human or automated). The application has a semantically sound interaction with the adapters on all sides of it, without actually knowing the nature of the things on the other side of the adapters.</em></p>
We could graphically represent this idea in this way:

<img class="size-full wp-image-6423 aligncenter" src="http://localhost:8080/wp-content/uploads/2017/04/hexagonal_style-1.jpg" alt="" width="698" height="421" />

According to this pattern, it is a good idea to design our applications with some separation between the application core, which contains the domain logic, and an outer layer of adapters through which our application interacts with the external components. Following this, Web API/MVC controllers would be good examples of adapters - they are responsible by to provide data and to handle inputs. The same applies to the repository pattern implementations which interacts with the database.

While some abstractions are useful in the domain model, they may not translate well to the message contract expected by the interacting applications. The outer layer, which contains the adapters implementations, is where we leave these abstractions and convert to the representation expected by the external components (database, user interface and so on).

A good example of this pattern implications would be the adoption of a separated model for persistence as the first option whenever necessary. Another example is the use of DTOs in the frontend.

To adopt this pattern reduces the coupling and makes the system easy to maintain. In the short term, that could increase the development costs. Anyway, this cost is easily justified in the long run.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6412</wp:post_id>
		<wp:post_date><![CDATA[2017-04-17 09:49:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-17 12:49:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ensuring-the-quality-of-the-domain-model-through-the-hexagonal-architecture-pattern]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="adapters"><![CDATA[adapters]]></category>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="ddd"><![CDATA[DDD]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="hexagonal"><![CDATA[hexagonal]]></category>
		<category domain="post_translations" nicename="pll_58f4c00d2fa3c"><![CDATA[pll_58f4c00d2fa3c]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6503]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/hex-675576-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#78cd6e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-17-ensuring-the-quality-of-the-domain-model-through-the-hexagonal-architecture-pattern.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[fa17c379e0400c3c6be7969a492f209527d34e19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Getting started with microservices &#8211; Elemar JR]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.elemarjr.com/en/2017/06/getting-started-with-microservices/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[107.180.120.22]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-06 15:07:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-06 18:07:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] When creating Microservices, I recommend adopting the Hexagonal Architecture Pattern. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1496777880.0296";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1496772423.7107";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Hexagonal Architecture Pattern</title>
		<link>http://localhost:8080/?p=6429&#038;lang=pt</link>
		<pubDate>Mon, 17 Apr 2017 13:16:20 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6429</guid>
		<description></description>
		<content:encoded><![CDATA[Há alguns anos, <a href="http://alistair.cockburn.us/Hexagonal+architecture">Alistair Cockburn</a> propôs um padrão bem interessante. Citando suas palavras, a ideia central é:
<p style="padding-left: 30px;"><em>Permitir que a interação com uma aplicação seja idência para usuários, programas, testes automatizados ou scripts. Também, que possa ser desenvolvida e testada isoladamente.</em></p>
<p style="padding-left: 30px;"><em>Na medida que "eventos" cheguem de componentes externos, seria responsabilidade de um adaptador fazer a conversão para uma chamada local ou mensagem a ser encaminhada para a aplicação. Esta seria ignorante a natureza da origem do input. Quando a aplicação tem algum retorno ou necessidade de envio externo, também o faria através de um adaptador que usaria os meios apropriados para cada tecnologia.  A aplicação "conhece" apenas os adaptadores, sem jamais interagir com componentes externos diretamente.</em></p>
Poderíamos representar essa ideia graficamente da forma que segue:

<img class="size-full wp-image-6423 aligncenter" src="http://localhost:8080/wp-content/uploads/2017/04/hexagonal_style-1.jpg" alt="" width="698" height="421" />

De acordo com este padrão, é uma boa ideia projetar nossas aplicações com algum nível de separação entre o core, que contem a lógica de domínio, e uma camada externa de adaptadores que seriam responsáveis por interagir com componentes externos. Seguindo essa idia, controllers Web API/MVC seriam bons exemplos desses adaptadores - eles são responsáveis por prover data e por tratar <em>inputs</em>. O mesmo pode ser dito a respeito de implementações do padrão <em>Repository</em> que interage com bases de dados.

Enquanto algumas abstrações são interessantes no modelo de dominio, estas podem não ser adequadas para interação com componentes externos. A camada externa, que contem as implementações dos adaptadores, seria onde as abstrações do domínio seriam convertidas para representações mais adequadas.

Um bom exemplo das implicações desse padrão seria a adoção de um modelo separado para persistência sempre que necessário. Outro bom exemplo é o uso de DTOs na comunicação com o frontend.

Adotar este padrão reduz o acomplamento e torna o sistema mais fácil de manter. No curto prazo, ele poderia aumentar os custos de desenvolvimento. Entretanto, o custo se justificaria facilmente no longo prazo.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6429</wp:post_id>
		<wp:post_date><![CDATA[2017-04-17 10:16:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-17 13:16:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hexagonal-architecture-pattern]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="arquitetura"><![CDATA[Arquitetura]]></category>
		<category domain="post_tag" nicename="hexagonal"><![CDATA[hexagonal]]></category>
		<category domain="post_tag" nicename="isolamento"><![CDATA[isolamento]]></category>
		<category domain="post_tag" nicename="padrao"><![CDATA[padrão]]></category>
		<category domain="post_translations" nicename="pll_58f4c00d2fa3c"><![CDATA[pll_58f4c00d2fa3c]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6492]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/hex-675576.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#78cd6e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-17-hexagonal-architecture-pattern.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[7a463807b5b6eb1c7346133efd561e55d7b7176f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[Alberto Monteiro]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[alberto.monteiro@live.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://albertomonteiro.net.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.200.94.33]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-17 12:04:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-17 15:04:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Show me the code :D
Acho legal esse tipo de post, mas gosto mais quando acompanha um código]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1492441445.1611";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[Thiago Custodio]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[thiago.custodio@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.27.76.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-17 23:02:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-18 02:02:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Show me the code +1]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>22</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1492480949.0103";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1492566853.0211";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[elemarjr]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[elemarjr@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.44.213.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-18 22:56:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-19 01:56:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Poxa, meus posts de código tem código. O que poderia ser compartilhado aqui? 

Devolvo o pedido. :) show me the code e melhorem p conteúdo com o código que vocês sentem falta.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>22</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1492566980.0189";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[Thiago Guerreiro]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[contato@thiagoguerreiro.com.br]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[179.232.134.233]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-22 23:49:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-23 02:49:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Elemar, meus pêsames por ter perdido todo o conteúdo do blog...

Você pensa ou planeja fazer algum treinamento abordando todo o conteúdo que você posta aqui?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1492959348.1483";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1492915747.3945";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[elemarjr]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[elemarjr@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[179.151.3.40]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-23 11:57:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-23 14:57:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá Thiago.

No momento, não tenho a intenção de oferecer treinamentos. Entretanto, ofereço o serviço de mentoria para profissionais de TI.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>25</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1492959436.6173";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[Wans]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wandelson.bezer@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[179.35.225.168]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-28 15:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-28 18:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Acredito que esse seja um exemplo, o Elemar pode afirmar melhor. https://github.com/tpierrain/CQRS]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>23</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1493405307.9816";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1493405160.4063";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Tiago]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[titata18@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[191.34.153.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-05-08 00:47:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-05-08 03:47:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hexagonal é animal, \"Ports and Adapters\", acaba se tornando um vício,  ultimamente estou adotando esta arquitetura em todos meus projetos, grandes ou pequenod]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1494239796.9156";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1494215246.0926";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Sobre a importância de um bom &quot;repertório&quot;</title>
		<link>http://localhost:8080/?p=6433&#038;lang=pt</link>
		<pubDate>Mon, 17 Apr 2017 14:43:16 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6433</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Nem todos os problemas podem ser resolvidos da mesma forma. Nem toda ferramenta é apropriada para todo tipo de trabalho.</strong>

A frase acima é óbvia, mas o óbvio nem sempre é facilmente aplicável.

Hoje, temos inúmeras opções de linguagem, frameworks, bancos de dados, mecanismos de mensageria, etc. Cada uma destas com pontos fortes e com pontos fracos. Algumas mais indicadas para determinados <strong>contextos</strong> do que outras.

A palavra importante aqui é <strong>CONTEXTO</strong>. Nem sempre a ferramenta mais ajustada para um problema, no sentido puramente técnico, é a mais indicada para o contexto do problema. São partes do contexto, por exemplo, além do problema em si, a equipe que irá atacar o problema e quem está pagando pela solução. Com frequência, é economicamente mais sensato optar pela "segunda melhor ferramenta para o problema" em virtude das características do time ou do ambiente.

<strong>Como profissionais, fica a nossa responsabilidade de termos um bom repertório.</strong> Ou seja, de conhecermos ferramentas que possam resolver o problema de forma mais ajustada ao contexto. Quanto mais amplo nosso repertório, maior a quantidade de problemas que iremos conseguir atacar e resolver, e mais diversificados os contextos onde conseguiremos atuar.

<strong>É importante termos em consideração, entretanto, que manter um repertório amplo custa caro</strong> - tanto em virtude do tempo necessário, quanto da quantidade de dinheiro. Precisamos ser criteriosos sobre o que aprender e quando aprender. <strong>Tentar saber tudo é o atalho mais fácil para não saber nada</strong>.

Antes de selecionar algo para estudar, é importante ter noção clara do contexto em que se está inserido e, principalmente, sobre o contexto que se deseja inserir. <strong>Saber onde está e onde quer chegar é fundamento para o desenvolvimento do repertório correto e economicamente razoável</strong>.

Ao planejar seu repertório, <strong>preocupe-se em superar as demandas dos contextos em que atua hoje e em atender as demandas dos contextos onde pretende atuar</strong>.

Há quem defenda que o mercado remunera raridade. Eu acho que essa crença é parcialmente verdadeira. Eu acredito que <strong>o mercado remunera a capacidade de gerar valor - gastando menos ou ganhando mais</strong>. A única maneira de atender essa condição é tendo  o repertório apropriado e isso deve ser feito de forma regrada.

Por fim, é sempre bom dedicar algum tempo (diminuto) para estudar algo exótico. As vezes temos boas surpresas e oportunidades graças ao estudo despretensioso.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6433</wp:post_id>
		<wp:post_date><![CDATA[2017-04-17 11:43:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-17 14:43:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sobre-a-importancia-de-um-bom-repertorio]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="carreira"><![CDATA[carreira]]></category>
		<category domain="category" nicename="estrategia"><![CDATA[Estratégia]]></category>
		<category domain="post_tag" nicename="mentoria"><![CDATA[mentoria]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6493]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/04/books-1012088_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ae81f9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-17-sobre-a-importancia-de-um-bom-repertorio.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[40b71e7fdf2938b230488d21e9679d1f493265c2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[Gabriel RB]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gabrielrb.net@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://gabrielrb.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.87.21.102]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-18 08:43:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-18 11:43:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Costumo abrir vários links de artigos para leitura, e sofro com uma overdose de conteúdo diverso, que me dá um repertório legal, mas não sinto isso se transformando em resultados mais expressivos no meu dia-a-dia. Depois de repassar minhas 35 abas de artigos, vou mudar essa estratégia, fazendo estudos mais on-demand, focados nas necessidades que forem surgindo. O mundo #tec gira muito rápido, e se não dosarmos, é como você disse no artigo, passamos mais tempo estudando do que realizando.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1492515809.7753";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1492566839.5441";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>From GoF to Lambdas - The Command Pattern</title>
		<link>http://localhost:8080/?p=6437&#038;lang=en</link>
		<pubDate>Mon, 17 Apr 2017 19:32:16 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6437</guid>
		<description></description>
		<content:encoded><![CDATA[Last year, <a href="https://twitter.com/mariofusco">Mario Fusco</a> wrote a <a href="https://www.voxxed.com/blog/2016/04/gang-four-patterns-functional-light-part-1/">blog post series</a> questioning the way Java developers are implementing the Gang of Four (GoF) patterns. He shared a functional approach, which is easier to read and maintain.

I will do my best to provide a C# version of Mario's recommendations expanding some examples. Let's start with the Command pattern.
<h3>The Command Pattern - how it is commonly adopted today</h3>
The Command Pattern is a behavioral design pattern in which an object is used to encapsulate all information needed to perform an action or trigger an event at a later time.

In Java, this is commonly implemented defining an interface:

<pre><code>interface Command {
    void run();
}
</code></pre>


At this point, the developer can provide different command implementations.

<pre><code>public class Logger implements Command {
    public final String message;
 
    public Logger( String message ) {
        this.message = message;
    }
 
    @Override
    public void run() {
        // ..
    }
}
</code></pre>

The "consumer" does not have to know about the details of the command execution. Some implementations will just affect the application state, other could save data on disk, for example.

<pre><code>public class FileSaver implements Command {
    public final String message;
 
    public FileSaver( String message ) {
        this.message = message;
    }
 
    @Override
    public void run() {
        // ..
    }
}
</code></pre>

In some cases, commands could be used to coordinate work with another components/applications.

<pre><code>public class Mailer implements Command {
    public final String message;
 
    public Mailer( String message ) {
        this.message = message;
    }
 
    @Override
    public void run() {
        // ..
    }
}
</code></pre>

It is a good practice to have something to coordinate the execution of one or more instances of this commands.

<pre><code>public class Executor {
    public void execute(List&lt;Command&gt; tasks) {
        for (Command task : tasks) {
            task.run();
        }
    }
}
</code></pre>

Finally it is possible to create a list of the commands we want to run

<pre><code>List&lt;Command&gt; tasks = new ArrayList&lt;&gt;();
tasks.add(new Logger( &quot;Hi&quot; ));
tasks.add(new FileSaver( &quot;Cheers&quot; ));
tasks.add(new Mailer( &quot;Bye&quot; ));
 
new Executor().execute( tasks );
</code></pre>

Commands, implemented in this way, are just functions wrapped into objects.
<h3>The Command Pattern - Mario's recommendation</h3>
The FunctionalInterface concept could make the Command pattern implementation a lot less verbose.

<pre><code>@FunctionalInterface
interface Command {
    void run();
}
</code></pre>

If you are not familiar with the @FunctionalInterface annotation, they are used with Single Abstract Method interfaces - like Command. Functional interfaces can be represented with a simple lambda expression or a method reference. Java already provides a functional interface with a <em>run</em> method named <em>Runnable</em>

More natural than creating a class wrapping a single function is to write just that single function, right?

<pre><code>public static void log(String message) {
    // ..
}
 
public static void save(String message) {
    // ..
}
 
public static void send(String message) {
    // ..
}
</code></pre>

We don't need an Executor class as well:

<pre><code>public static void execute(List&lt;Runnable&gt; tasks ) {
    tasks.forEach( Runnable::run );
}
</code></pre>

And all the commands could be executed just as before.

<pre><code>List&lt;Runnable&gt; tasks = new ArrayList&lt;&gt;();
tasks.add(() -&gt; log(&quot;Hi&quot;));
tasks.add(() -&gt; save(&quot;Cheers&quot;));
tasks.add(() -&gt; send(&quot;Bye&quot;));
 
execute( tasks );
</code></pre>

Mario explains:
<p style="padding-left: 30px;"><em>Here the Java compiler automatically translates the lambdas with no arguments and invoking the void static methods executing the actions formerly wrapped in commands into </em>anonymous<em> implementation of the Runnable interface thus allowing to collect them in a List of Runnables.</em></p>

<h3>Mario's recommendation translated to C#</h3>
Now, it is time to apply Mario's recommendation using C#. Let's go!

First of all, we don't need to create an interface. We don't need to check if the BCL provides an interface neither. We have delegates!

<pre><code>public delegate void Command();</code></pre>

Here we are defining a delegate, but we could use <strong>Action</strong> with no prejudice.

We can use simple methods just like Mario did.

<pre><code>public static void Log(string message)
{
    // ..
}

public static void Save(string message)
{
    // ..
}

public static void Send(string message)
{
    // ..
}</code></pre>

We can also execute it easily:

<pre><code>var commands = new List&lt;Command&gt;
{
    () =&gt; Log(&quot;Hi&quot;),
    () =&gt; Save(&quot;Cheers&quot;),
    () =&gt; Send(&quot;Bye&quot;)
};

commands.ForEach(command =&gt; command());
</code></pre>

In a more "functional" approach, we could convert are functions into HOF.

<pre><code>public static Command Log(string message)
    => () => { /* .. */ };

public static Command Save(string message)
    => () => { /* .. */ };

public static Command Send(string message)
    => () => { /* .. */ };
</code></pre>

This could be a good idea, especially if we want to perform some complex setup. Anyway, it removes the need of using lambdas when creating a command list.

<pre><code>var commands = new List&lt;Command&gt;
{
    Log(&quot;Hi&quot;),
    Save(&quot;Cheers&quot;),
    Send(&quot;Bye&quot;)
};

commands.ForEach(command =&gt; command());
</code></pre>

We don't need to create a class to implement the command pattern. There are simpler alternatives in Java *and* in C#.

Next time, let's talk about the strategy pattern.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6437</wp:post_id>
		<wp:post_date><![CDATA[2017-04-17 16:32:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-17 19:32:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[from-gof-to-lambdas-the-command-pattern]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
		<category domain="post_tag" nicename="gof"><![CDATA[gof]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_translations" nicename="pll_58f8a1f35ab43"><![CDATA[pll_58f8a1f35ab43]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6540]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ff4629]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_series_part]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-17-from-gof-to-lambdas-the-command-pattern.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[82a1bacfda3a319bc1a0438bb10d110ff2bd77e4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[From GoF to Lambdas – The Command Pattern | Ace Infoway]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://zerozone.com/mmp/aceinfoway/from-gof-to-lambdas-the-command-pattern-/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[52.2.32.161]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-28 15:43:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-28 18:43:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] GoF to Lambdas – The Command Pattern&#013; {$excerpt:n}&#013; submitted by  /u/justaguythatcodes  [link] [comments]&#013; Source: [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1493405333.5926";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1493405014.3688";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[From GoF to Lambdas &#8211; The Strategy Pattern &#8211; Elemar JR]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.elemarjr.com/en/2017/04/from-gof-to-lambdas-the-strategy-pattern/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[107.180.120.20]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-05-20 13:37:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-05-20 16:37:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] the previous post, I mentioned Mario Fusco who wrote a blog post series questioning the way Java developers are [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1495298250.2621";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1495298721.5027";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Implementação Funcional de Design Patterns - Command</title>
		<link>http://localhost:8080/?p=6458&#038;lang=pt</link>
		<pubDate>Thu, 20 Apr 2017 12:20:51 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6458</guid>
		<description></description>
		<content:encoded><![CDATA[Ano passado, <a href="https://twitter.com/mariofusco">Mario Fusco</a> escreveu <a href="https://www.voxxed.com/blog/2016/04/gang-four-patterns-functional-light-part-1/">uma série de posts</a> questionando a forma como programadores Java estão implementando os padrões de projeto definidos pelo GoF. Ele compartilhou uma abordagem funcional, mais simples de ler e de manter .

Eu vou fazer o meu melhor para criar uma versão C# das recomendações de Fusco expandindo alguns exemplos. Vamos começar com o padrão Command.

<h3>O padrão Command - como é frequentemente implementado</h3>
O padrão Command é um padrão de comportamento em que um objeto é utilizado para encapsular toda informação necessária para executar uma ação ou disparar um evento em um momento futuro.

Em Java, ele geralmente começa a ser implementado pela definição de uma interface:

<pre><code>interface Command {
    void run();
}
</code></pre>

Com a interface definida, o programador pode prover diferentes implementações.

<pre><code>public class Logger implements Command {
    public final String message;
 
    public Logger( String message ) {
        this.message = message;
    }
 
    @Override
    public void run() {
        // ..
    }
}
</code></pre>

O código que irá consumir o comando não precisa saber detalhes da execução do comando. Algumas implementações vão afetar apenas o estado da aplicação, outras podem salvar dados no disco, por exemplo.

<pre><code>public class FileSaver implements Command {
    public final String message;
 
    public FileSaver( String message ) {
        this.message = message;
    }
 
    @Override
    public void run() {
        // ..
    }
}
</code></pre>

Em alguns casos, comandos podem ser utilizados para coordenar trabalho com outros componentes/aplicações.

<pre><code>public class Mailer implements Command {
    public final String message;
 
    public Mailer( String message ) {
        this.message = message;
    }
 
    @Override
    public void run() {
        // ..
    }
}
</code></pre>

É uma boa prática ter algo que coordene a execução de uma ou mais instâncias.

<pre><code>public class Executor {
    public void execute(List&lt;Command&gt; tasks) {
        for (Command task : tasks) {
            task.run();
        }
    }
}
</code></pre>

Assim, é possível criar uma lista de comandos que se deseja executar.

<pre><code>List&lt;Command&gt; tasks = new ArrayList&lt;&gt;();
tasks.add(new Logger( &quot;Hi&quot; ));
tasks.add(new FileSaver( &quot;Cheers&quot; ));
tasks.add(new Mailer( &quot;Bye&quot; ));
 
new Executor().execute( tasks );
</code></pre>

Comandos, implementados desata forma, são apenas funções envolvidas em objetos.

<h3>O padrão Command - conforme recomendação de Fusco</h3>
O conceito de FunctionalInterface permite a implementação desse padrão de forma muito mais expressiva.

<pre><code>@FunctionalInterface
interface Command {
    void run();
}
</code></pre>

Se você não é familiarizado com a anotação @FunctionalInterface, ela pode ser usada com interfaces que definem um único método abstrato - como a interface Command em nosso exemplo. Interfaces funcionais podem ser representadas com uma expressão lambda simples ou com uma referência para um método. 

Java já oferece uma interface com o método <em>run</em> chamada <em>Runnable</em>

Mais natural que crair uma classe com uma única função, é escrever apenas esta função, certo?

<pre><code>public static void log(String message) {
    // ..
}
 
public static void save(String message) {
    // ..
}
 
public static void send(String message) {
    // ..
}
</code></pre>

Também não é necessário escrever uma classe para coordenar a execução.

<pre><code>public static void execute(List&lt;Runnable&gt; tasks ) {
    tasks.forEach( Runnable::run );
}
</code></pre>

E todos os comandos podem ser executados da mesma forma que antes.

<pre><code>List&lt;Runnable&gt; tasks = new ArrayList&lt;&gt;();
tasks.add(() -&gt; log(&quot;Hi&quot;));
tasks.add(() -&gt; save(&quot;Cheers&quot;));
tasks.add(() -&gt; send(&quot;Bye&quot;));
 
execute( tasks );
</code></pre>

Fusco explica:
<p style="padding-left: 30px;"><em>Aqui, o compilador Java automaticamente traduz as expressões Lambda sem parâmetros em classes anônimas que implementam a interface Runnable, o que permite que a lista de comandos seja armazenada em uma lista.</em></p>

<h3>Recomendação de Fusco traduzida para C#</h3>

Agora é hora de implementar as recomendações de Mario Fusco em C#!

Primeiro, não precisamos criar uma interface. Também não precisamos verificar se a BCL provê uma interface adequada também. Podemos usar delegates!

<pre><code>public delegate void Command();</code></pre>

Estamos definindo um delegate, mas poderíamos usar uma <strong>Action</strong>.

Podemos escrever métodos simples, da mesma forma como Mario fez.

<pre><code>public static void Log(string message)
{
    // ..
}

public static void Save(string message)
{
    // ..
}

public static void Send(string message)
{
    // ..
}</code></pre>

Também podemos executar facilmente:

<pre><code>var commands = new List&lt;Command&gt;
{
    () =&gt; Log(&quot;Hi&quot;),
    () =&gt; Save(&quot;Cheers&quot;),
    () =&gt; Send(&quot;Bye&quot;)
};

commands.ForEach(command =&gt; command());
</code></pre>

Em uma abordagem ainda mais funcional, podemos converter os comandos em HOF.

<pre><code>public static Command Log(string message)
    => () => { /* .. */ };

public static Command Save(string message)
    => () => { /* .. */ };

public static Command Send(string message)
    => () => { /* .. */ };
</code></pre>

Esta pode ser uma boa ideia, especialmente se precisamos alguma configuração. De qualquer forma, isso remove a necessidade de usar Lmbdas para criar a lista de comandos.

<pre><code>var commands = new List&lt;Command&gt;
{
    Log(&quot;Hi&quot;),
    Save(&quot;Cheers&quot;),
    Send(&quot;Bye&quot;)
};

commands.ForEach(command =&gt; command());
</code></pre>

Não precisamos criar uma classe para implementar o padrão Command. Há alternativas mais simples em Java e em C#

Em breve, vamos falar sobre o padrão Strategy.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6458</wp:post_id>
		<wp:post_date><![CDATA[2017-04-20 09:20:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-20 12:20:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[implementacao-funcional-de-design-patterns-command]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="command"><![CDATA[command]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="funcional"><![CDATA[Funcional]]></category>
		<category domain="post_tag" nicename="gof-pt"><![CDATA[gof]]></category>
		<category domain="post_tag" nicename="java-pt"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="padroes"><![CDATA[padrões]]></category>
		<category domain="post_translations" nicename="pll_58f8a1f35ab43"><![CDATA[pll_58f8a1f35ab43]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6511]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#2ac4ea]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_spost_short_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Command]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_series_part]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-20-implementacao-funcional-de-design-patterns-command.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[b116cdf2f229629ff6e55ffff3ec5645ddf4e685]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Implementação Funcional de Design Patterns &#8211; Strategy &#8211; Elemar JR]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.elemarjr.com/pt/2017/04/implementacao-funcional-de-design-patterns-strategy/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[107.180.120.20]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-05-12 08:11:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-05-12 11:11:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] post anterior, eu mencionei uma série de post do Mario Fusco questionando a forma como desenvolvedores Java [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1494587519.7253";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1494587665.1786";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>From GoF to Lambdas - The Strategy Pattern</title>
		<link>http://localhost:8080/?p=6462&#038;lang=en</link>
		<pubDate>Fri, 21 Apr 2017 13:52:56 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6462</guid>
		<description></description>
		<content:encoded><![CDATA[In the <a href="http://www.elemarjr.com/en/2017/04/from-gof-to-lambdas-the-command-pattern/">previous post</a>, I mentioned Mario Fusco who wrote a <a href="https://www.voxxed.com/blog/2016/04/gang-four-patterns-functional-light-part-1/">blog post series</a> questioning the way Java developers are implementing the Gang of Four (GoF) patterns.

I am trying to provide a C# version of Mario's recommendations expanding some examples. In this post, I would like to talk about the Strategy Pattern.
<h3>The Strategy Pattern</h3>
The goal of this pattern is to define a family of algorithms, encapsulate each one, and make them interchangeable. The algorithm varies independently from clients that use it.

There are three primary participants in this pattern:
<ol>
 	<li><strong>The strategy interface</strong>, which declares an interface common to all supported algorithms.</li>
 	<li><strong>The strategy concrete implementation</strong>, which implements the algorithm according to the strategy interface.</li>
 	<li><strong>The execution context</strong>, which is configured with a specific implementation and to define an interface that lets the strategy access its data.</li>
</ol>
<h3>How it is commonly adopted today</h3>
The first step is putting an abstract definition of the behaviors (algorithms) we want to support into an interface. Let's assume we need to provide different sorting algorithms. So, the first step would be to define a standard interface with a sort method:

<pre><code>public interface IArraySortStrategy
{
    T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison);
}</code></pre>

Then, we would need to write concrete implementations of the sorting Strategy:

<pre><code>public class QuickSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}

public class MergeSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}

public class BubbleSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}</code></pre>


After that, we would be ready to use it.

<pre><code>namespace HelloStrategy.Controllers
{
    [Route(&quot;api/[controller]&quot;)]
    public class ValuesController : Controller
    {
        private readonly IArraySortStrategy _sortingStrategy;
        
        public ValuesController(IArraySortStrategy sortingStrategy)
        {
            _sortingStrategy = sortingStrategy;
        }
        // ..
    }
}
</code></pre>

<h3>Mario's recommendation</h3>
The strategy implementation using interfaces is too verbose. Don't you think? We are defining classes just to wrap functions.

Let's use a delegate instead of an interface:

<pre><code>public delegate T[] SortingAlgorithm&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison);</code></pre>

Now, we can write concrete implementations as simple functions:

<pre><code>public static class SortingImplementations
{
    public static T[] QuickSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
    public static T[] MergeSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
    public static T[] BubbleSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
}
</code></pre>
This is an apparently less coupled solution. We do not have to reference the strategy interface in the concrete implementation. So, we could provide concrete implementations in different assemblies with no dependencies.

In the context, we just need to specify the delegate we need instead of the interface.

<pre><code>namespace HelloStrategy.Controllers
{
    [Route(&quot;api/[controller]&quot;)]
    public class ValuesController : Controller
    {
        private readonly SortingAlgorithm&lt;Customer&gt; _sortingAlgorithm;

        public ValuesController(SortingAlgorithm&lt;Customer&gt; sortingAlgorithm)
        {
            _sortingAlgorithm = sortingAlgorithm;
        }

        // ..
    }
}
</code></pre>

The dependency injection container provided by ASP.net core supports it:

<pre><code>public void ConfigureServices(IServiceCollection services)
{
    services.AddSingleton<SortingAlgorithm<Customer>>(SortingImplementations.QuickSort);
    // Add framework services.
    services.AddMvc();
}</code></pre>

That's it. Next time, we will talk about the Template pattern.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6462</wp:post_id>
		<wp:post_date><![CDATA[2017-04-21 10:52:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-21 13:52:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[from-gof-to-lambdas-the-strategy-pattern]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
		<category domain="post_tag" nicename="gof"><![CDATA[gof]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_translations" nicename="pll_58fa1126e9ad9"><![CDATA[pll_58fa1126e9ad9]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6539]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ff4629]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_series_part]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-21-from-gof-to-lambdas-the-strategy-pattern.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[fecab3d080f6d98e686b9beeab3225a3efca1620]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Implementação Funcional de Design Patterns - Strategy</title>
		<link>http://localhost:8080/?p=6476&#038;lang=pt</link>
		<pubDate>Fri, 21 Apr 2017 14:19:20 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6476</guid>
		<description></description>
		<content:encoded><![CDATA[No <a href="http://www.elemarjr.com/pt/2017/04/implementacao-funcional-de-design-patterns-command/">post anterior</a>, eu mencionei uma <a href="https://www.voxxed.com/blog/2016/04/gang-four-patterns-functional-light-part-1/">série de post</a> do Mario Fusco questionando a forma como desenvolvedores Java estão implementando os design patterns propostos pelo GoF.

Estou tentando prover uma versão C# das recomendações de Fusco, expandindo alguns exemplos. Neste post, eu gostaria de falar sobre o padrão Strategy.
<h3>Sobre o padrão</h3>
O objetivo do padrão strategy é definir uma "família de algoritmos", encapsulando cada um deles, tornando-os intercambiáveis. A implementação poderia variar independete da forma como o cliente a utilizaria.

Os três elementos fundamentais desse padrão são:
<ol>
 	<li><b>A interface para a estratégia</b>, que declara uma interface comum suportada por todas as implementações.</li>
 	<li><strong>As implementações concretas</strong>, que estão de acordo com o especificado na interface.</li>
 	<li><strong>O contexto de execução</strong>, que é configurado para uma implementação específica e que mantem/fornece as entradas.</li>
</ol>
&nbsp;

<h3>Como geralmente é implementado</h3>
O primeiro passo é colocar a definição dos comportamentos que desejamos suportar em uma interface. Vamos assumir que queremos prover diferentes algoritmos de ordenação, por exemplo. Nesse caso, o primeiro passo seria definir uma interface padrão com um método de ordenação.

<pre><code>public interface IArraySortStrategy
{
    T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison);
}</code></pre>

Então, podemos escrever as implementações concretas:

<pre><code>public class QuickSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}

public class MergeSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}

public class BubbleSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}</code></pre>

Assim, estamos prontos para consumir isso.
<pre><code>namespace HelloStrategy.Controllers
{
    [Route(&quot;api/[controller]&quot;)]
    public class ValuesController : Controller
    {
        private readonly IArraySortStrategy _sortingStrategy;
        
        public ValuesController(IArraySortStrategy sortingStrategy)
        {
            _sortingStrategy = sortingStrategy;
        }
        // ..
    }
}
</code></pre>

<h3>Recomendação de Fusco</h3>
A implementação da estratégia usando interfaces é muito verbosa. Não acha? Afinal, estamos apenas definindo classes para "envolver" funções.

Vamos usar um delegate no lugar de uma interface:
<pre><code>public delegate T[] SortingAlgorithm&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison);</code></pre>

Agora, podemos escrever implementações concretas como funções simples:

<pre><code>public static class SortingImplementations
{
    public static T[] QuickSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
    public static T[] MergeSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
    public static T[] BubbleSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
}
</code></pre>

Esta é uma solução aparentemente menos acoplada. Não precisamos adicionar referências para uma interface. Dessa forma, podemos prover implementações concretas em diferentes assemblies sem que sejam necessárias adições de referências.

No contexto, precisamos apenas especificar que esperamos um delegate no lugar de uma implementação de interface.

<pre><code>namespace HelloStrategy.Controllers
{
    [Route(&quot;api/[controller]&quot;)]
    public class ValuesController : Controller
    {
        private readonly SortingAlgorithm&lt;Customer&gt; _sortingAlgorithm;

        public ValuesController(SortingAlgorithm&lt;Customer&gt; sortingAlgorithm)
        {
            _sortingAlgorithm = sortingAlgorithm;
        }

        // ..
    }
}
</code></pre>

O container de injeção de dependências do ASP.net core suporta isso:

<pre><code>public void ConfigureServices(IServiceCollection services)
{
    services.AddSingleton<SortingAlgorithm<Customer>>(SortingImplementations.QuickSort);
    // Add framework services.
    services.AddMvc();
}</code></pre>

Era isso. Na próxima vez, vamos falar sobre o padrão Template.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6476</wp:post_id>
		<wp:post_date><![CDATA[2017-04-21 11:19:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-21 14:19:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[implementacao-funcional-de-design-patterns-strategy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="funcional"><![CDATA[Funcional]]></category>
		<category domain="post_tag" nicename="gof-pt"><![CDATA[gof]]></category>
		<category domain="post_tag" nicename="padroes"><![CDATA[padrões]]></category>
		<category domain="post_translations" nicename="pll_58fa1126e9ad9"><![CDATA[pll_58fa1126e9ad9]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="strategy"><![CDATA[Strategy]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6510]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#ff4629]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_spost_short_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Strategy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_series_part]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[wptouch_sc_data]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:6:"page-1";O:8:"stdClass":5:{s:21:"has_desktop_shortcode";i:1;s:7:"scripts";a:0:{}s:6:"styles";a:0:{}s:11:"valid_until";i:1496409669;s:17:"shortcode_content";s:5734:"<p>No <a href="http://www.elemarjr.com/pt/2017/04/implementacao-funcional-de-design-patterns-command/">post anterior</a>, eu mencionei&nbsp;uma <a href="https://www.voxxed.com/blog/2016/04/gang-four-patterns-functional-light-part-1/">série de post</a>&nbsp;do Mario Fusco questionando a forma como desenvolvedores Java estão implementando os design patterns propostos pelo GoF.</p>
<p>Estou tentando prover uma versão C# das recomendações de Fusco, expandindo alguns exemplos. Neste post, eu gostaria de falar sobre o padrão Strategy.</p>
<h3 class="heading-font">Sobre o padrão</h3>
<p>O objetivo do padrão strategy é definir uma &#8220;família de algoritmos&#8221;, encapsulando cada um deles, tornando-os intercambiáveis. A implementação poderia variar independete da forma como o cliente a utilizaria.</p>
<p>Os três elementos fundamentais desse padrão são:</p>
<ol>
<li><b>A interface para a estratégia</b>, que declara uma interface comum suportada por todas as implementações.</li>
<li><strong>As implementações concretas</strong>, que estão de acordo com o especificado na interface.</li>
<li><strong>O contexto de execução</strong>, que é configurado para uma implementação específica e que mantem/fornece as entradas.</li>
</ol>
<p>&nbsp;</p>
<h3 class="heading-font">Como geralmente é implementado</h3>
<p>O primeiro passo é colocar a definição dos comportamentos que desejamos suportar em uma interface. Vamos assumir que queremos prover diferentes algoritmos de ordenação, por exemplo. Nesse caso, o primeiro passo seria definir uma interface padrão com um método de ordenação.</p>
<pre class="brush: csharp; title: C#: a interface para a estratégia; notranslate" title="C#: a interface para a estratégia">public interface IArraySortStrategy
{
    T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison);
}
</pre>
<p>Então, podemos escrever as implementações concretas:</p>
<pre class="brush: csharp; title: C#: Implementações concretas para a estratégia; notranslate" title="C#: Implementações concretas para a estratégia">public class QuickSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}

public class MergeSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}

public class BubbleSortStrategy : IArraySortStrategy
{
    public T[] Sort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison)
    {
        // ..
    }
}
</pre>
<p>Assim, estamos prontos para consumir isso.</p>
<pre class="brush: csharp; title: C#: Controller que usa a estratégia.; notranslate" title="C#: Controller que usa a estratégia.">namespace HelloStrategy.Controllers
{
    [Route("api/[controller]")]
    public class ValuesController : Controller
    {
        private readonly IArraySortStrategy _sortingStrategy;
        
        public ValuesController(IArraySortStrategy sortingStrategy)
        {
            _sortingStrategy = sortingStrategy;
        }
        // ..
    }
}
</pre>
<h3 class="heading-font">Recomendação de Fusco</h3>
<p>A implementação da estratégia usando interfaces é muito verbosa. Não acha? Afinal, estamos apenas definindo classes para &#8220;envolver&#8221; funções.</p>
<p>Vamos usar um delegate no lugar de uma interface:</p>
<pre class="brush: csharp; title: C#: Definindo a interface de uma estratégia usando delegates; notranslate" title="C#: Definindo a interface de uma estratégia usando delegates">public delegate T[] SortingAlgorithm&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison);
</pre>
<p>Agora, podemos escrever implementações concretas como funções simples:</p>
<pre class="brush: csharp; title: C#: Funções como implementações concretas das interfaces; notranslate" title="C#: Funções como implementações concretas das interfaces">public static class SortingImplementations
{
    public static T[] QuickSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
    public static T[] MergeSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
    public static T[] BubbleSort&lt;T&gt;(T[] input, Comparison&lt;T&gt; comparison) {  /* .. */ }
}
</pre>
<p>Esta é uma solução aparentemente menos acoplada. Não precisamos adicionar referências para uma interface. Dessa forma, podemos prover implementações concretas em diferentes assemblies sem que sejam necessárias adições de referências.</p>
<p>No contexto, precisamos apenas especificar que esperamos um delegate no lugar de uma implementação de interface.</p>
<pre class="brush: csharp; title: C#: Injeção de dependência com delegates; notranslate" title="C#: Injeção de dependência com delegates">namespace HelloStrategy.Controllers
{
    [Route("api/[controller]")]
    public class ValuesController : Controller
    {
        private readonly SortingAlgorithm&lt;Customer&gt; _sortingAlgorithm;

        public ValuesController(SortingAlgorithm&lt;Customer&gt; sortingAlgorithm)
        {
            _sortingAlgorithm = sortingAlgorithm;
        }

        // ..
    }
}
</pre>
<p>O container de injeção de dependências do ASP.net core suporta isso:</p>
<pre class="brush: csharp; title: C#: ASP.net core suporta injeção de dependências com funções; notranslate" title="C#: ASP.net core suporta injeção de dependências com funções">public void ConfigureServices(IServiceCollection services)
{
    services.AddSingleton&lt;SortingAlgorithm&lt;Customer&gt;&gt;(SortingImplementations.QuickSort);
    // Add framework services.
    services.AddMvc();
}
</pre>
<p>Era isso. Na próxima vez, vamos falar sobre o padrão Template.</p>
";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-04-21-implementacao-funcional-de-design-patterns-strategy.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[b7db05e7869a5246f7ec79aee397d00f2dca899b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Vinicius Dias]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[carlosv775@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://github.com/CViniciusSDias</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[200.222.105.250]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-05-30 09:40:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-05-30 12:40:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Caso você desenvolva outra implementação de ordenação, teria que adicionar um outro método à classe `SortingImplementations`. Isso quebraria o Open Closed Principle, não?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1496166055.0468";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1496148010.0612";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Writing an ASP.NET Core Identity Storage Provider from Scratch with RavenDB</title>
		<link>http://localhost:8080/?p=6542&#038;lang=en</link>
		<pubDate>Fri, 19 May 2017 22:33:07 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6542</guid>
		<description></description>
		<content:encoded><![CDATA[In this post, I will share how to write an ASP.NET Core Identity Storage Provider from the Scratch using RavenDB.

The source code is fully available on <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">my Github</a>.

<h2>What is ASP.NET Core Identity?</h2>
ASP.NET Core Identity is the membership system for building ASP.NET Core web applications, including membership, log in, and user data. ASP.NET Core Identity allows you to add login features to your application and makes it easy to customize data about the logged in user.
<h2>What is a storage provider?</h2>
The Storage Provider is a low-level component in the ASP.NET Core Identity architecture that provides classes that specify how users and roles are persisted.

By default, ASP.NET Core Identity stores user information in a SQL Server database using Entity Framework. However, you may prefer to use a different type of persistence strategy, such as RavenDB database. In this case, you will need to use/write a customized provider for your storage mechanism and plug that provider into your application.

The storage provider should provide implementations for two interfaces: <strong>IUserStore</strong> and <strong>IRoleStore</strong>.

<h2>Starting your own ASP.NET Core Identity Storage Provider</h2>
I strongly recommend you to create dedicated .net standard library Project to accommodate your implementation. This is not mandatory, but it will help you to maintain some code organization and reuse.

To implement your own storage provider, you will need to install the <a href="https://www.nuget.org/packages/Microsoft.AspNetCore.Identity/">Microsoft.AspNetCore.Identity NuGet package</a> in your project. In this post, I will use RavenDB as the persistence mechanism, so I will install the <a href="https://www.nuget.org/packages/RavenDB.Client">RavenDB.Client NuGet package</a> as well.

<h2>Supporting basic user data management</h2>
The most important element of a Storage Provider implementation is the User Store. The User Store is a class that provides methods for all data operations on the user.

A minimal user store needs to implement the <a href="https://github.com/aspnet/Identity/blob/rel/1.1.2/src/Microsoft.AspNetCore.Identity/IUserStore.cs">IUserStore interface</a>.

<pre><code>using System;
using System.Threading;
using System.Threading.Tasks;

namespace Microsoft.AspNetCore.Identity
{
    public interface IUserStore&lt;TUser&gt; : IDisposable where TUser : class
    {
        Task&lt;string&gt; GetUserIdAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;string&gt; GetUserNameAsync(TUser user, CancellationToken cancellationToken);
        Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken);
        Task&lt;string&gt; GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken);
        Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; CreateAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; UpdateAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; DeleteAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;TUser&gt; FindByIdAsync(string userId, CancellationToken cancellationToken);
        Task&lt;TUser&gt; FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken);
    }
}</code></pre>

There are methods to create, update, delete and retrieve users. There are also methods to get and set values from the user object. 

<h4>The User object</h4>
There are no constraints to define the public interface of the user object and that is really exciting. The developer is free to define the user object in the way he wants. The basic implementation requires just three properties. So, in this example, let’s start simple.

<pre><code>public class RavenDBIdentityUser
{
    public RavenDBIdentityUser(string userName) : this()
    {
        UserName = userName ?? throw new ArgumentNullException(nameof(userName));
    }

    public string Id { get; internal set; }
    public string UserName { get; internal set; }
    public string NormalizedUserName { get; internal set; }
}
</code></pre>

<h4>Getting things done to save and retrieve data</h4>
Now, it is time to start to implement our UserStore.

<pre><code>public partial class RavenDBUserStore&lt;TUser, TDocumentStore&gt; :
    IUserStore&lt;TUser&gt;,
    where TUser : RavenDBIdentityUser
    where TDocumentStore: class, IDocumentStore
{
    public IdentityErrorDescriber ErrorDescriber { get; }
    public TDocumentStore Context { get; }

    private readonly Lazy&lt;IAsyncDocumentSession&gt; _session;

    public RavenDBUserStore(
        TDocumentStore context,
        IdentityErrorDescriber errorDescriber = null
    )
    {
        ErrorDescriber = errorDescriber;
        Context = context ?? throw new ArgumentNullException(nameof(context));

        _session = new Lazy&lt;IAsyncDocumentSession&gt;(() =&gt;
        {
            var session = Context.OpenAsyncSession();
            session.Advanced.UseOptimisticConcurrency = true;
            return session;
        }, true);
    }

    public IAsyncDocumentSession Session 
        =&gt; _session.Value;

    public Task SaveChanges(
        CancellationToken cancellationToken = default(CancellationToken)
        ) =&gt; Session.SaveChangesAsync(cancellationToken);

    // ...

    #region IDisposable
    private void ThrowIfDisposed()
    {
        if (_disposed)
        {
            throw new ObjectDisposedException(GetType().Name);
        }
    }

    private bool _disposed;
    public void Dispose()
    {
        Session.Dispose;
        _disposed = true;
    }
    #endregion
}</code></pre>

In this code, we start to implement the IUserStore interface. 

I am using a generic parameter to specify the type of the user object that will be utilized. There is a constraint enforcing this type as a specialization of the RavenDBIdentityUser class. This design decision makes easy to extend the model to save additional data.

The constructor expects an IDocumentStore instance. We will use this object to connect to the RavenDB database. (If you want to learn more about RavenDB, subscribe the <a href="https://ravendb.net/learn">RavenDB bootcamp</a> available for free online). 

We will be using the RavenDB Async API that is pretty easy.

<h4>Creating, retrieving, updating and deleting users</h4>
With a session, it's pretty easy to write the code that will create, retrieve and update users.
<pre><code>public async Task&lt;IdentityResult&gt; CreateAsync(
    TUser user,
    CancellationToken cancellationToken = default(CancellationToken)
    )
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    cancellationToken.ThrowIfCancellationRequested();

    await Session.StoreAsync(user, cancellationToken);
    await SaveChanges(cancellationToken);

    return IdentityResult.Success;
}

public Task&lt;TUser&gt; FindByIdAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    cancellationToken.ThrowIfCancellationRequested();
    return Session.LoadAsync&lt;TUser&gt;(userId, cancellationToken);
}

public async Task&lt;IdentityResult&gt; UpdateAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    var stored = await Session.LoadAsync&lt;TUser&gt;(user.Id, cancellationToken);
    var etag = Session.Advanced.GetEtagFor(stored);

    await Session.StoreAsync(user, etag, cancellationToken);

    try
    {
        await SaveChanges(cancellationToken);
    }
    catch (ConcurrencyException)
    {
        return IdentityResult.Failed(ErrorDescriber.ConcurrencyFailure());
    }

    return IdentityResult.Success;
}

public async Task&lt;IdentityResult&gt; DeleteAsync(
    TUser user,
    CancellationToken cancellationToken = default(CancellationToken)
    )
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    Session.Delete(user.Id);

    try
    {
        await SaveChanges(cancellationToken);
    }
    catch (ConcurrencyException)
    {
        return IdentityResult.Failed(ErrorDescriber.ConcurrencyFailure());
    }

    return IdentityResult.Success;
}</code></pre>


We don't need to think about table schemas - RavenDB is a schemaless database. RavenDB will save the object with no complaints, even if the class public interface changes completely. There is no need to think about modifications in this code in the future. There is no migrations or anything like that.

<h4>Finding users by name</h4>
Now, let's write the FindByName method.

<pre><code>public Task&lt;TUser&gt; FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    return Session.Query&lt;TUser&gt;().FirstOrDefaultAsync(
        u =&gt; u.NormalizedUserName == normalizedUserName, cancellationToken
    );
}</code></pre>

How fast is this code? Using Raven it is extremely fast! RavenDB will create an index automatically to execute this query as fast as possible.

<h4>Getting and setting</h4>
As you know, we are free to define the public interface of the user object. So, the IUserStore interface defines some helper methods where we can define the logic for getting and setting data.

<pre><code>public Task&lt;string&gt; GetUserIdAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();
    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.Id);
}

public Task&lt;string&gt; GetUserNameAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.UserName);
}

public Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    if (userName == null)
    {
        throw new ArgumentNullException(nameof(userName));
    }

    user.UserName = userName;

    return Task.CompletedTask;
}

public Task&lt;string&gt; GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.NormalizedUserName);
}

public Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    if (normalizedName == null)
    {
        throw new ArgumentNullException(nameof(normalizedName));
    }

    user.NormalizedUserName = normalizedName;

    return Task.CompletedTask;
}
</code></pre>


Simple like that. 

<h2>Supporting advanced user data management</h2>

As you can see, the basic implementation of the user store does not have support to some important concepts like passwords, emails, claims, users lockout, roles and so on.

All these features can be added as you need implementing some optional interfaces. These interfaces will just define other helper methods to get and set data from the user object. 

You can find the implementation of these important optional interfaces on my <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.

<h2>Roles data management</h2>
A good Storage provider should provide a Role Store. The Role Store is a class that provides methods for all data operations on the Roles.

<pre><code>public interface IRoleStore&lt;TRole&gt; : IDisposable where TRole : class
{
    Task&lt;IdentityResult&gt; CreateAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;IdentityResult&gt; DeleteAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;TRole&gt; FindByIdAsync(string roleId, CancellationToken cancellationToken);
    Task&lt;TRole&gt; FindByNameAsync(string normalizedRoleName, CancellationToken cancellationToken);
    Task&lt;string&gt; GetNormalizedRoleNameAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;string&gt; GetRoleIdAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;string&gt; GetRoleNameAsync(TRole role, CancellationToken cancellationToken);
    Task SetNormalizedRoleNameAsync(TRole role, string normalizedName, CancellationToken cancellationToken);
    Task SetRoleNameAsync(TRole role, string roleName, CancellationToken cancellationToken);
    Task&lt;IdentityResult&gt; UpdateAsync(TRole role, CancellationToken cancellationToken);
}
</code></pre>


As you can see, the idea is pretty similar to IUserStore. So, we can follow the same implementation strategy.

You can find a example of IRoleStore implementation on my <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.

<h2>Helper methods to make the IdentityBuilder configuration easier</h2>
Now that we have IUserStore and IRoleStore implementations, we need to write a helper method to configure the IdentityBuilder to use these implementations.

<pre><code>public static class IdentityBuilderExtensions
{
    public static IdentityBuilder UseRavenDBDataStoreAdaptor&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    ) where TDocumentStore : class, IDocumentStore
        =&gt; builder
            .AddRavenDBUserStore&lt;TDocumentStore&gt;()
            .AddRavenDBRoleStore&lt;TDocumentStore&gt;();
        
    private static IdentityBuilder AddRavenDBUserStore&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    )
    {
        var userStoreType = typeof(RavenDBUserStore&lt;,&gt;).MakeGenericType(builder.UserType, typeof(TDocumentStore));

        builder.Services.AddScoped(
            typeof(IUserStore&lt;&gt;).MakeGenericType(builder.UserType),
            userStoreType
        );

        return builder;
    }

    private static IdentityBuilder AddRavenDBRoleStore&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    )
    {
        var roleStoreType = typeof(RavenDBRoleStore&lt;,&gt;).MakeGenericType(builder.RoleType, typeof(TDocumentStore));

        builder.Services.AddScoped(
            typeof(IRoleStore&lt;&gt;).MakeGenericType(builder.RoleType),
            roleStoreType
        );

        return builder;
    }
}</code></pre>

Done!

<h2>Using it!</h2>

We are ready to stop using Entity Framework and SQL Server (ugh) and start using RavenDB to store user and role data in our ASP.NET Core applications.

Assuming that you are already using RavenDB, the configuration will be something like that:

<pre><code>public void ConfigureServices(IServiceCollection services)
{
    // Add framework services.
    //services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;
    //        options.UseSqlServer(Configuration[&quot;Data:DefaultConnection:ConnectionString&quot;]));

    services.AddSingleton(DocumentStoreHolder.Store)

    services.AddIdentity&lt;ApplicationUser, RavenDBIdentityRole&gt;()
        .UseRavenDBDataStoreAdaptor&lt;IDocumentStore&gt;()
        .AddDefaultTokenProviders();

    services.AddMvc();

    // Add application services.
    services.AddTransient&lt;IEmailSender, AuthMessageSender&gt;();
    services.AddTransient&lt;ISmsSender, AuthMessageSender&gt;();
}</code></pre>

Please note that you will need to change the base class of the ApplicationUser to RavenDBIdentityUser.

There is a running demo on my <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.

Nice!


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6542</wp:post_id>
		<wp:post_date><![CDATA[2017-05-19 19:33:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-19 22:33:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[writing-an-asp-net-core-identity-storage-provider-from-scratch-with-ravendb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aspnet"><![CDATA[aspnet]]></category>
		<category domain="post_tag" nicename="aspnetcore"><![CDATA[aspnetcore]]></category>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="dotnet"><![CDATA[dotnet]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="identity"><![CDATA[identity]]></category>
		<category domain="post_tag" nicename="membership"><![CDATA[membership]]></category>
		<category domain="post_translations" nicename="pll_59203662cb6af"><![CDATA[pll_59203662cb6af]]></category>
		<category domain="post_tag" nicename="ravendb"><![CDATA[ravendb]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/05/sunset-2247726_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6560]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[wptouch_sc_data]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:6:"page-1";O:8:"stdClass":5:{s:21:"has_desktop_shortcode";i:1;s:7:"scripts";a:0:{}s:6:"styles";a:0:{}s:11:"valid_until";i:1496409711;s:17:"shortcode_content";s:18095:"<p>In this post, I will share how to write an ASP.NET Core Identity Storage Provider from the Scratch using RavenDB.</p>
<p>The source code is fully available on <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">my Github</a>.</p>
<h2 class="heading-font">What is ASP.NET Core Identity?</h2>
<p>ASP.NET Core Identity is the membership system for building ASP.NET Core web applications, including membership, log in, and user data. ASP.NET Core Identity allows you to add login features to your application and makes it easy to customize data about the logged in user.</p>
<h2 class="heading-font">What is a storage provider?</h2>
<p>The Storage Provider is a low-level component in the ASP.NET Core Identity architecture that provides classes that specify how users and roles are persisted.</p>
<p>By default, ASP.NET Core Identity stores user information in a SQL Server database using Entity Framework. However, you may prefer to use a different type of persistence strategy, such as RavenDB database. In this case, you will need to use/write a customized provider for your storage mechanism and plug that provider into your application.</p>
<p>The storage provider should provide implementations for two interfaces: <strong>IUserStore</strong> and <strong>IRoleStore</strong>.</p>
<h2 class="heading-font">Starting your own ASP.NET Core Identity Storage Provider</h2>
<p>I strongly recommend you to create dedicated .net standard library Project to accommodate your implementation. This is not mandatory, but it will help you to maintain some code organization and reuse.</p>
<p>To implement your own storage provider, you will need to install the <a href="https://www.nuget.org/packages/Microsoft.AspNetCore.Identity/">Microsoft.AspNetCore.Identity NuGet package</a> in your project. In this post, I will use RavenDB as the persistence mechanism, so I will install the <a href="https://www.nuget.org/packages/RavenDB.Client">RavenDB.Client NuGet package</a> as well.</p>
<h2 class="heading-font">Supporting basic user data management</h2>
<p>The most important element of a Storage Provider implementation is the User Store. The User Store is a class that provides methods for all data operations on the user.</p>
<p>A minimal user store needs to implement the <a href="https://github.com/aspnet/Identity/blob/rel/1.1.2/src/Microsoft.AspNetCore.Identity/IUserStore.cs">IUserStore interface</a>.</p>
<pre class="brush: csharp; title: IUserStore interface; notranslate" title="IUserStore interface">using System;
using System.Threading;
using System.Threading.Tasks;

namespace Microsoft.AspNetCore.Identity
{
    public interface IUserStore&lt;TUser&gt; : IDisposable where TUser : class
    {
        Task&lt;string&gt; GetUserIdAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;string&gt; GetUserNameAsync(TUser user, CancellationToken cancellationToken);
        Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken);
        Task&lt;string&gt; GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken);
        Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; CreateAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; UpdateAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; DeleteAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;TUser&gt; FindByIdAsync(string userId, CancellationToken cancellationToken);
        Task&lt;TUser&gt; FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken);
    }
}
</pre>
<p>There are methods to create, update, delete and retrieve users. There are also methods to get and set values from the user object. </p>
<h4 class="heading-font">The User object</h4>
<p>There are no constraints to define the public interface of the user object and that is really exciting. The developer is free to define the user object in the way he wants. The basic implementation requires just three properties. So, in this example, let’s start simple.</p>
<pre class="brush: csharp; title: The very simple user class; notranslate" title="The very simple user class">public class RavenDBIdentityUser
{
    public RavenDBIdentityUser(string userName) : this()
    {
        UserName = userName ?? throw new ArgumentNullException(nameof(userName));
    }

    public string Id { get; internal set; }
    public string UserName { get; internal set; }
    public string NormalizedUserName { get; internal set; }
}
</pre>
<h4 class="heading-font">Getting things done to save and retrieve data</h4>
<p>Now, it is time to start to implement our UserStore.</p>
<pre class="brush: csharp; title: Implementation of IUserInterface; notranslate" title="Implementation of IUserInterface">public partial class RavenDBUserStore&lt;TUser, TDocumentStore&gt; :
    IUserStore&lt;TUser&gt;,
    where TUser : RavenDBIdentityUser
    where TDocumentStore: class, IDocumentStore
{
    public IdentityErrorDescriber ErrorDescriber { get; }
    public TDocumentStore Context { get; }

    private readonly Lazy&lt;IAsyncDocumentSession&gt; _session;

    public RavenDBUserStore(
        TDocumentStore context,
        IdentityErrorDescriber errorDescriber = null
    )
    {
        ErrorDescriber = errorDescriber;
        Context = context ?? throw new ArgumentNullException(nameof(context));

        _session = new Lazy&lt;IAsyncDocumentSession&gt;(() =&gt;
        {
            var session = Context.OpenAsyncSession();
            session.Advanced.UseOptimisticConcurrency = true;
            return session;
        }, true);
    }

    public IAsyncDocumentSession Session 
        =&gt; _session.Value;

    public Task SaveChanges(
        CancellationToken cancellationToken = default(CancellationToken)
        ) =&gt; Session.SaveChangesAsync(cancellationToken);

    // ...

    #region IDisposable
    private void ThrowIfDisposed()
    {
        if (_disposed)
        {
            throw new ObjectDisposedException(GetType().Name);
        }
    }

    private bool _disposed;
    public void Dispose()
    {
        Session.Dispose;
        _disposed = true;
    }
    #endregion
}
</pre>
<p>In this code, we start to implement the IUserStore interface. </p>
<p>I am using a generic parameter to specify the type of the user object that will be utilized. There is a constraint enforcing this type as a specialization of the RavenDBIdentityUser class. This design decision makes easy to extend the model to save additional data.</p>
<p>The constructor expects an IDocumentStore instance. We will use this object to connect to the RavenDB database. (If you want to learn more about RavenDB, subscribe the <a href="https://ravendb.net/learn">RavenDB bootcamp</a> available for free online). </p>
<p>We will be using the RavenDB Async API that is pretty easy.</p>
<h4 class="heading-font">Creating, retrieving, updating and deleting users</h4>
<p>With a session, it&#8217;s pretty easy to write the code that will create, retrieve and update users.</p>
<pre class="brush: csharp; title: Creating, retrieving and updating users; notranslate" title="Creating, retrieving and updating users">public async Task&lt;IdentityResult&gt; CreateAsync(
    TUser user,
    CancellationToken cancellationToken = default(CancellationToken)
    )
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    cancellationToken.ThrowIfCancellationRequested();

    await Session.StoreAsync(user, cancellationToken);
    await SaveChanges(cancellationToken);

    return IdentityResult.Success;
}

public Task&lt;TUser&gt; FindByIdAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    cancellationToken.ThrowIfCancellationRequested();
    return Session.LoadAsync&lt;TUser&gt;(userId, cancellationToken);
}

public async Task&lt;IdentityResult&gt; UpdateAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    var stored = await Session.LoadAsync&lt;TUser&gt;(user.Id, cancellationToken);
    var etag = Session.Advanced.GetEtagFor(stored);

    await Session.StoreAsync(user, etag, cancellationToken);

    try
    {
        await SaveChanges(cancellationToken);
    }
    catch (ConcurrencyException)
    {
        return IdentityResult.Failed(ErrorDescriber.ConcurrencyFailure());
    }

    return IdentityResult.Success;
}

public async Task&lt;IdentityResult&gt; DeleteAsync(
    TUser user,
    CancellationToken cancellationToken = default(CancellationToken)
    )
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    Session.Delete(user.Id);

    try
    {
        await SaveChanges(cancellationToken);
    }
    catch (ConcurrencyException)
    {
        return IdentityResult.Failed(ErrorDescriber.ConcurrencyFailure());
    }

    return IdentityResult.Success;
}
</pre>
<p>We don&#8217;t need to think about table schemas &#8211; RavenDB is a schemaless database. RavenDB will save the object with no complaints, even if the class public interface changes completely. There is no need to think about modifications in this code in the future. There is no migrations or anything like that.</p>
<h4 class="heading-font">Finding users by name</h4>
<p>Now, let&#8217;s write the FindByName method.</p>
<pre class="brush: csharp; title: Querying with RavenDB; notranslate" title="Querying with RavenDB">public Task&lt;TUser&gt; FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    return Session.Query&lt;TUser&gt;().FirstOrDefaultAsync(
        u =&gt; u.NormalizedUserName == normalizedUserName, cancellationToken
    );
}
</pre>
<p>How fast is this code? Using Raven it is extremely fast! RavenDB will create an index automatically to execute this query as fast as possible.</p>
<h4 class="heading-font">Getting and setting</h4>
<p>As you know, we are free to define the public interface of the user object. So, the IUserStore interface defines some helper methods where we can define the logic for getting and setting data.</p>
<pre class="brush: csharp; title: Getting and setting; notranslate" title="Getting and setting">public Task&lt;string&gt; GetUserIdAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();
    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.Id);
}

public Task&lt;string&gt; GetUserNameAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.UserName);
}

public Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    if (userName == null)
    {
        throw new ArgumentNullException(nameof(userName));
    }

    user.UserName = userName;

    return Task.CompletedTask;
}

public Task&lt;string&gt; GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.NormalizedUserName);
}

public Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    if (normalizedName == null)
    {
        throw new ArgumentNullException(nameof(normalizedName));
    }

    user.NormalizedUserName = normalizedName;

    return Task.CompletedTask;
}
</pre>
<p>Simple like that. </p>
<h2 class="heading-font">Supporting advanced user data management</h2>
<p>As you can see, the basic implementation of the user store does not have support to some important concepts like passwords, emails, claims, users lockout, roles and so on.</p>
<p>All these features can be added as you need implementing some optional interfaces. These interfaces will just define other helper methods to get and set data from the user object. </p>
<p>You can find the implementation of these important optional interfaces on my <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.</p>
<h2 class="heading-font">Roles data management</h2>
<p>A good Storage provider should provide a Role Store. The Role Store is a class that provides methods for all data operations on the Roles.</p>
<pre class="brush: csharp; title: IRoleStore interface; notranslate" title="IRoleStore interface">public interface IRoleStore&lt;TRole&gt; : IDisposable where TRole : class
{
    Task&lt;IdentityResult&gt; CreateAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;IdentityResult&gt; DeleteAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;TRole&gt; FindByIdAsync(string roleId, CancellationToken cancellationToken);
    Task&lt;TRole&gt; FindByNameAsync(string normalizedRoleName, CancellationToken cancellationToken);
    Task&lt;string&gt; GetNormalizedRoleNameAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;string&gt; GetRoleIdAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;string&gt; GetRoleNameAsync(TRole role, CancellationToken cancellationToken);
    Task SetNormalizedRoleNameAsync(TRole role, string normalizedName, CancellationToken cancellationToken);
    Task SetRoleNameAsync(TRole role, string roleName, CancellationToken cancellationToken);
    Task&lt;IdentityResult&gt; UpdateAsync(TRole role, CancellationToken cancellationToken);
}
</pre>
<p>As you can see, the idea is pretty similar to IUserStore. So, we can follow the same implementation strategy.</p>
<p>You can find a example of IRoleStore implementation on my <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.</p>
<h2 class="heading-font">Helper methods to make the IdentityBuilder configuration easier</h2>
<p>Now that we have IUserStore and IRoleStore implementations, we need to write a helper method to configure the IdentityBuilder to use these implementations.</p>
<pre class="brush: csharp; title: Helper methods to configure ASP.NET Core identity to use our Storage provider; notranslate" title="Helper methods to configure ASP.NET Core identity to use our Storage provider">public static class IdentityBuilderExtensions
{
    public static IdentityBuilder UseRavenDBDataStoreAdaptor&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    ) where TDocumentStore : class, IDocumentStore
        =&gt; builder
            .AddRavenDBUserStore&lt;TDocumentStore&gt;()
            .AddRavenDBRoleStore&lt;TDocumentStore&gt;();
        
    private static IdentityBuilder AddRavenDBUserStore&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    )
    {
        var userStoreType = typeof(RavenDBUserStore&lt;,&gt;).MakeGenericType(builder.UserType, typeof(TDocumentStore));

        builder.Services.AddScoped(
            typeof(IUserStore&lt;&gt;).MakeGenericType(builder.UserType),
            userStoreType
        );

        return builder;
    }

    private static IdentityBuilder AddRavenDBRoleStore&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    )
    {
        var roleStoreType = typeof(RavenDBRoleStore&lt;,&gt;).MakeGenericType(builder.RoleType, typeof(TDocumentStore));

        builder.Services.AddScoped(
            typeof(IRoleStore&lt;&gt;).MakeGenericType(builder.RoleType),
            roleStoreType
        );

        return builder;
    }
}
</pre>
<p>Done!</p>
<h2 class="heading-font">Using it!</h2>
<p>We are ready to stop using Entity Framework and SQL Server (ugh) and start using RavenDB to store user and role data in our ASP.NET Core applications.</p>
<p>Assuming that you are already using RavenDB, the configuration will be something like that:</p>
<pre class="brush: csharp; title: ASP.NET Core services configuration; notranslate" title="ASP.NET Core services configuration">public void ConfigureServices(IServiceCollection services)
{
    // Add framework services.
    //services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;
    //        options.UseSqlServer(Configuration["Data:DefaultConnection:ConnectionString"]));

    services.AddSingleton(DocumentStoreHolder.Store)

    services.AddIdentity&lt;ApplicationUser, RavenDBIdentityRole&gt;()
        .UseRavenDBDataStoreAdaptor&lt;IDocumentStore&gt;()
        .AddDefaultTokenProviders();

    services.AddMvc();

    // Add application services.
    services.AddTransient&lt;IEmailSender, AuthMessageSender&gt;();
    services.AddTransient&lt;ISmsSender, AuthMessageSender&gt;();
}
</pre>
<p>Please note that you will need to change the base class of the ApplicationUser to RavenDBIdentityUser.</p>
<p>There is a running demo on my <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.</p>
<p>Nice!</p>
";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-05-19-writing-an-asp-net-core-identity-storage-provider-from-scratch-with-ravendb.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[e3a853b01b0557a39e9958cfec999e4a3142ded5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[Fabio Silva Lima]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[Fabiosilvalima@terra.com.br]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.fabiosilvalima.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[179.111.16.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-05-19 21:00:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-05-20 00:00:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelent, very cool stuff. :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1495238439.0687";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1495238890.0796";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Criando um Storage Provider para ASP.NET Core Identity com RavenDB</title>
		<link>http://localhost:8080/?p=6562&#038;lang=pt</link>
		<pubDate>Sat, 20 May 2017 13:28:45 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6562</guid>
		<description></description>
		<content:encoded><![CDATA[Neste post, vamos escrever um <em>Storage Provider</em> para ASP.NET Core Identity, do zero, utilizando RavenDB como mecanismo de persistência.

O código fonte está disponível no <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">meu Github</a>.

<h2>O que é ASP.NET Core Identity?</h2>
ASP.NET Core Identity é um sistema de controle de usuários para aplicativos web desenvolvidos com ASP.NET core, incluindo <em>membership</em>, login, e dados de usuário. ASP.NET Core Identity permite que adicionemos funcionalidades de login em nossas aplicações e torna fácil a customização dos dados sobre o usuário logado.

<h2>O que é um <em>storage provider</em>?</h2>
O Storage Provider é um componente de nível mais baixo na arquitetura do ASP.NET Core Identity que fornece classes que determinam como dados de usuários e <em>roles</em> são armazenados. 

Por padrão, ASP.NET Core Identity armaznea informações em um banco de dados SQL Servier usando Entity Framework. Entretanto, talvez queiramos usar uma estratégia de persistência diferente, como usar um banco de dados RavenDB, por exemplo. Neste caso, precisamos usar/escrever um <em>provider</em> personalizado e integrar esse <em>provider</em> em nosssa aplicação.

Um <em>storage provider</em> deve forneceer implementações para duas interfaces: <strong>IUserStore</strong> e <strong>IRoleStore</strong>.

<h2>Começando o desenvolvimento de <em>Storage Provider</em> para ASP.NET Core Identity</h2>
Eu recomendo fortemente a criação de um projeto .NET standard separado para a implementação. Embora isso não seja mandatório, essa prática facilita a manutenção do código e o reuso.

Para implementar seu <em>storage provider</em>, precisamos instalar o pacote Nuger <a href="https://www.nuget.org/packages/Microsoft.AspNetCore.Identity/">Microsoft.AspNetCore.Identity</a> no projeto. Neste post, estamos usando RavenDB como mecanismo de persistência. Logo, também é necessário instalar o pacote <a href="https://www.nuget.org/packages/RavenDB.Client">RavenDB.Client NuGet package</a>.

<h2>Implementando a gestão de dados básicos dos usuários</h2>
O elemento mais importante de um <em>storage provider</em> é o <em>User Store</em>. O <em>User Store</em> é uma classe que provê métodos para todas as operações com dados para manter o usuário.

Uma abordagem mínima precisa implementar a interface <a href="https://github.com/aspnet/Identity/blob/rel/1.1.2/src/Microsoft.AspNetCore.Identity/IUserStore.cs">IUserStore </a>.

<pre><code>using System;
using System.Threading;
using System.Threading.Tasks;

namespace Microsoft.AspNetCore.Identity
{
    public interface IUserStore&lt;TUser&gt; : IDisposable where TUser : class
    {
        Task&lt;string&gt; GetUserIdAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;string&gt; GetUserNameAsync(TUser user, CancellationToken cancellationToken);
        Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken);
        Task&lt;string&gt; GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken);
        Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; CreateAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; UpdateAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; DeleteAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;TUser&gt; FindByIdAsync(string userId, CancellationToken cancellationToken);
        Task&lt;TUser&gt; FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken);
    }
}</code></pre>

Há métodos para criar, atualizar, apagar e recuperar dados de usuários. Há também métodos para obter e setar valores do objeto que mantem os dados do usuário.

<h4>O objeto <em>User</em></h4>
Não há <em>constraints</em> para definir a interface pública do objeto <em>User</em> e isso é realmente interessante. O desenvolvedor é livre para definir o objeto da forma como desejar. A implementação básica, que vimos acima, requer apenas três propriedades. Então, nesse exemplo, vamos começar simples.

<pre><code>
public class RavenDBIdentityUser
{
    public RavenDBIdentityUser(string userName) : this()
    {
        UserName = userName ?? throw new ArgumentNullException(nameof(userName));
    }

    public string Id { get; internal set; }
    public string UserName { get; internal set; }
    public string NormalizedUserName { get; internal set; }
}
</code></pre>

<h4>Preparando-se para salvar e recuperar dados</h4>
Agora, é hora de começarmos a implementar nossa <em>UserStore</em>

<pre><code>public partial class RavenDBUserStore&lt;TUser, TDocumentStore&gt; :
    IUserStore&lt;TUser&gt;,
    where TUser : RavenDBIdentityUser
    where TDocumentStore: class, IDocumentStore
{
    public IdentityErrorDescriber ErrorDescriber { get; }
    public TDocumentStore Context { get; }

    private readonly Lazy&lt;IAsyncDocumentSession&gt; _session;

    public RavenDBUserStore(
        TDocumentStore context,
        IdentityErrorDescriber errorDescriber = null
    )
    {
        ErrorDescriber = errorDescriber;
        Context = context ?? throw new ArgumentNullException(nameof(context));

        _session = new Lazy&lt;IAsyncDocumentSession&gt;(() =&gt;
        {
            var session = Context.OpenAsyncSession();
            session.Advanced.UseOptimisticConcurrency = true;
            return session;
        }, true);
    }

    public IAsyncDocumentSession Session 
        =&gt; _session.Value;

    public Task SaveChanges(
        CancellationToken cancellationToken = default(CancellationToken)
        ) =&gt; Session.SaveChangesAsync(cancellationToken);

    // ...

    #region IDisposable
    private void ThrowIfDisposed()
    {
        if (_disposed)
        {
            throw new ObjectDisposedException(GetType().Name);
        }
    }

    private bool _disposed;
    public void Dispose()
    {
        Session.Dispose;
        _disposed = true;
    }
    #endregion
}</code></pre>

Neste código, iniciamos a implementação da interface <em>IUserStore</em>.

Eu continuo usando um tipo genérico para especificar o tipo que será utilizado para armazenar dados do usuário. A única restrição força que o tipo seja uma especialização da classe RavenDBIdentityUser que definimos antes. Esta decisão de design torna fácil ampliar o modelo para salvar mais dados.

O construtor espera por uma instância de <em>IDocumentStore</em>. Nós vamos usar este objeto para conectar ao banco de dados RavenDB (Se deseja aprender mais sobre RavenDB, considere inscrever-se <a href="https://ravendb.net/learn">RavenDB bootcamp</a> disponível gratuitamente on-line). 

Nós vamos utilizar a biblioteca assíncrona do RavenDB que é bem fácil.

<h4>Criando, carregando, atualizando e excluindo usuários</h4>
Com uma sessão, é bem fácil escrever código para criação, carga e atualização de dados de usuários.

<pre><code>public async Task&lt;IdentityResult&gt; CreateAsync(
    TUser user,
    CancellationToken cancellationToken = default(CancellationToken)
    )
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    cancellationToken.ThrowIfCancellationRequested();

    await Session.StoreAsync(user, cancellationToken);
    await SaveChanges(cancellationToken);

    return IdentityResult.Success;
}

public Task&lt;TUser&gt; FindByIdAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    cancellationToken.ThrowIfCancellationRequested();
    return Session.LoadAsync&lt;TUser&gt;(userId, cancellationToken);
}

public async Task&lt;IdentityResult&gt; UpdateAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    var stored = await Session.LoadAsync&lt;TUser&gt;(user.Id, cancellationToken);
    var etag = Session.Advanced.GetEtagFor(stored);

    await Session.StoreAsync(user, etag, cancellationToken);

    try
    {
        await SaveChanges(cancellationToken);
    }
    catch (ConcurrencyException)
    {
        return IdentityResult.Failed(ErrorDescriber.ConcurrencyFailure());
    }

    return IdentityResult.Success;
}

public async Task&lt;IdentityResult&gt; DeleteAsync(
    TUser user,
    CancellationToken cancellationToken = default(CancellationToken)
    )
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    Session.Delete(user.Id);

    try
    {
        await SaveChanges(cancellationToken);
    }
    catch (ConcurrencyException)
    {
        return IdentityResult.Failed(ErrorDescriber.ConcurrencyFailure());
    }

    return IdentityResult.Success;
}</code></pre>

Não precisamos pensar em esquema de tabelas - RavenDB é um banco de dados <em>schemaless</em>. RavenDB vai salvar o objeto sem reclamações, mesmo que a interface pública da classe mude completamente. Não há necessidade de pensar a respeito de modificações neste código no futuro. Não há <em>migrations</em> ou nada deste tipo.

<h4>Encontrando usuários pelo nome</h4>
Agora, vamos escrever o método <em>FindByName</em>
Now, let's write the FindByName method.

<pre><code>public Task&lt;TUser&gt; FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    return Session.Query&lt;TUser&gt;().FirstOrDefaultAsync(
        u =&gt; u.NormalizedUserName == normalizedUserName, cancellationToken
    );
}</code></pre>

Quanto performático é esse código? Usando Raven, é extremamente rápido! RavenDB irá criar um índice automaticamente para executar essa <em>query</em> da forma mais rápida possível.

<h4>Obtendo e setando propriedades do objeto <em>User</em></h4>
Como você sabe, nós estamos livres para definir a interface pública do objeto <em>User</em>. Logo, a interface <em>IUserStore</em>, define alguns métodos auxiliares onde podemos definir a lógica que deve ser empregada para setar e obter dados.

<pre><code>public Task&lt;string&gt; GetUserIdAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();
    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.Id);
}

public Task&lt;string&gt; GetUserNameAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.UserName);
}

public Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    if (userName == null)
    {
        throw new ArgumentNullException(nameof(userName));
    }

    user.UserName = userName;

    return Task.CompletedTask;
}

public Task&lt;string&gt; GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.NormalizedUserName);
}

public Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    if (normalizedName == null)
    {
        throw new ArgumentNullException(nameof(normalizedName));
    }

    user.NormalizedUserName = normalizedName;

    return Task.CompletedTask;
}
</code></pre>

Simples assim. 

<h2>Fazendo gestão avançada dos dados dos usuários</h2>
Como você pode ver, a implementação básica do <em>User Store</em> não suporta alguns conceitos importantes, como senhas, emails, <em>claims</em>, bloqueio de usuários, <em>roles</em>, etc.

Todas essas funcionalidades podem ser adicionadas, conforme for necessário através da implementação de algumas interfaces opcionais. Estas interfaces apenas definem outros métodos auxiliares que recuperam e setam valores no objeto <em>user</em>.

Você encontra uma implementação dessas importantes interfaces opcionais no meu <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.

<h2>Gestão de <em>Roles</em></h2>
Um bom <em>storage provider</em> deve implementar também um <em>Role Store</em>. Trata-se de uma classe que provê métodos para todas as operações com dados envolvendo <em>Roles</em>.

<pre><code>public interface IRoleStore&lt;TRole&gt; : IDisposable where TRole : class
{
    Task&lt;IdentityResult&gt; CreateAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;IdentityResult&gt; DeleteAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;TRole&gt; FindByIdAsync(string roleId, CancellationToken cancellationToken);
    Task&lt;TRole&gt; FindByNameAsync(string normalizedRoleName, CancellationToken cancellationToken);
    Task&lt;string&gt; GetNormalizedRoleNameAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;string&gt; GetRoleIdAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;string&gt; GetRoleNameAsync(TRole role, CancellationToken cancellationToken);
    Task SetNormalizedRoleNameAsync(TRole role, string normalizedName, CancellationToken cancellationToken);
    Task SetRoleNameAsync(TRole role, string roleName, CancellationToken cancellationToken);
    Task&lt;IdentityResult&gt; UpdateAsync(TRole role, CancellationToken cancellationToken);
}
</code></pre>

Como pode ver, a ideia aqui é basicamente a mesma adotada no design de <em>IUserStore</em>. Logo, podemos seguir a mesma estratégia de implementação.

Novamente, você encontra um exemplo de implementação da interface IRoleStore no meu <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.

<h2>Métodos auxiliares para tornar a configuração do <em>IdentityBuilder</em> mais fácil</h2>
Agora que temos nossas implementações para IUserStore e IRoleStore, precisamos escrever um método auxiliar para configurar o IdentityBuilder para usar essas implementações.

<pre><code>public static class IdentityBuilderExtensions
{
    public static IdentityBuilder UseRavenDBDataStoreAdaptor&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    ) where TDocumentStore : class, IDocumentStore
        =&gt; builder
            .AddRavenDBUserStore&lt;TDocumentStore&gt;()
            .AddRavenDBRoleStore&lt;TDocumentStore&gt;();
        
    private static IdentityBuilder AddRavenDBUserStore&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    )
    {
        var userStoreType = typeof(RavenDBUserStore&lt;,&gt;).MakeGenericType(builder.UserType, typeof(TDocumentStore));

        builder.Services.AddScoped(
            typeof(IUserStore&lt;&gt;).MakeGenericType(builder.UserType),
            userStoreType
        );

        return builder;
    }

    private static IdentityBuilder AddRavenDBRoleStore&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    )
    {
        var roleStoreType = typeof(RavenDBRoleStore&lt;,&gt;).MakeGenericType(builder.RoleType, typeof(TDocumentStore));

        builder.Services.AddScoped(
            typeof(IRoleStore&lt;&gt;).MakeGenericType(builder.RoleType),
            roleStoreType
        );

        return builder;
    }
}</code></pre>

Feito!

<h2>Usando!</h2>

Estamos prontos para parar de usar Entity Framework e SQL Server (ugh) e começar a usar RavenDB para armazenar usuários e <em>Roles</em> em nossas aplicações com ASP.NET core.

Assumindo que você já esteja utilizando RavenDB, a configuração será algo similar ao que segue:

<pre><code>public void ConfigureServices(IServiceCollection services)
{
    // Add framework services.
    //services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;
    //        options.UseSqlServer(Configuration[&quot;Data:DefaultConnection:ConnectionString&quot;]));

    services.AddSingleton(DocumentStoreHolder.Store)

    services.AddIdentity&lt;ApplicationUser, RavenDBIdentityRole&gt;()
        .UseRavenDBDataStoreAdaptor&lt;IDocumentStore&gt;()
        .AddDefaultTokenProviders();

    services.AddMvc();

    // Add application services.
    services.AddTransient&lt;IEmailSender, AuthMessageSender&gt;();
    services.AddTransient&lt;ISmsSender, AuthMessageSender&gt;();
}</code></pre>

Observe que precismos mudar a classe base adotada de <em>AplicationUser</em> para <em>RavenDBIdentityUser</em>.

Há um demo executável no meu <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.

Era isso.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6562</wp:post_id>
		<wp:post_date><![CDATA[2017-05-20 10:28:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-20 13:28:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[criando-um-storage-provider-para-asp-net-core-identity-com-ravendb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aspnet-pt"><![CDATA[aspnet]]></category>
		<category domain="post_tag" nicename="aspnetcore-pt"><![CDATA[aspnetcore]]></category>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="dotnet-pt"><![CDATA[dotnet]]></category>
		<category domain="post_tag" nicename="identity-pt"><![CDATA[identity]]></category>
		<category domain="post_tag" nicename="membership-pt"><![CDATA[membership]]></category>
		<category domain="post_translations" nicename="pll_59203662cb6af"><![CDATA[pll_59203662cb6af]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="ravendb-pt"><![CDATA[ravendb]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6560]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/05/sunset-2247726_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[wptouch_sc_data]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:6:"page-1";O:8:"stdClass":5:{s:21:"has_desktop_shortcode";i:1;s:7:"scripts";a:0:{}s:6:"styles";a:0:{}s:11:"valid_until";i:1496409636;s:17:"shortcode_content";s:19292:"<p>Neste post, vamos escrever um <em>Storage Provider</em> para ASP.NET Core Identity, do zero, utilizando RavenDB como mecanismo de persistência.</p>
<p>O código fonte está disponível no <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">meu Github</a>.</p>
<h2 class="heading-font">O que é ASP.NET Core Identity?</h2>
<p>ASP.NET Core Identity é um sistema de controle de usuários para aplicativos web desenvolvidos com ASP.NET core, incluindo <em>membership</em>, login, e dados de usuário. ASP.NET Core Identity permite que adicionemos funcionalidades de login em nossas aplicações e torna fácil a customização dos dados sobre o usuário logado.</p>
<h2 class="heading-font">O que é um <em>storage provider</em>?</h2>
<p>O Storage Provider é um componente de nível mais baixo na arquitetura do ASP.NET Core Identity que fornece classes que determinam como dados de usuários e <em>roles</em> são armazenados. </p>
<p>Por padrão, ASP.NET Core Identity armaznea informações em um banco de dados SQL Servier usando Entity Framework. Entretanto, talvez queiramos usar uma estratégia de persistência diferente, como usar um banco de dados RavenDB, por exemplo. Neste caso, precisamos usar/escrever um <em>provider</em> personalizado e integrar esse <em>provider</em> em nosssa aplicação.</p>
<p>Um <em>storage provider</em> deve forneceer implementações para duas interfaces: <strong>IUserStore</strong> e <strong>IRoleStore</strong>.</p>
<h2 class="heading-font">Começando o desenvolvimento de <em>Storage Provider</em> para ASP.NET Core Identity</h2>
<p>Eu recomendo fortemente a criação de um projeto .NET standard separado para a implementação. Embora isso não seja mandatório, essa prática facilita a manutenção do código e o reuso.</p>
<p>Para implementar seu <em>storage provider</em>, precisamos instalar o pacote Nuger <a href="https://www.nuget.org/packages/Microsoft.AspNetCore.Identity/">Microsoft.AspNetCore.Identity</a> no projeto. Neste post, estamos usando RavenDB como mecanismo de persistência. Logo, também é necessário instalar o pacote <a href="https://www.nuget.org/packages/RavenDB.Client">RavenDB.Client NuGet package</a>.</p>
<h2 class="heading-font">Implementando a gestão de dados básicos dos usuários</h2>
<p>O elemento mais importante de um <em>storage provider</em> é o <em>User Store</em>. O <em>User Store</em> é uma classe que provê métodos para todas as operações com dados para manter o usuário.</p>
<p>Uma abordagem mínima precisa implementar a interface <a href="https://github.com/aspnet/Identity/blob/rel/1.1.2/src/Microsoft.AspNetCore.Identity/IUserStore.cs">IUserStore </a>.</p>
<pre class="brush: csharp; title: interface IUserStore; notranslate" title="interface IUserStore">using System;
using System.Threading;
using System.Threading.Tasks;

namespace Microsoft.AspNetCore.Identity
{
    public interface IUserStore&lt;TUser&gt; : IDisposable where TUser : class
    {
        Task&lt;string&gt; GetUserIdAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;string&gt; GetUserNameAsync(TUser user, CancellationToken cancellationToken);
        Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken);
        Task&lt;string&gt; GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken);
        Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; CreateAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; UpdateAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;IdentityResult&gt; DeleteAsync(TUser user, CancellationToken cancellationToken);
        Task&lt;TUser&gt; FindByIdAsync(string userId, CancellationToken cancellationToken);
        Task&lt;TUser&gt; FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken);
    }
}
</pre>
<p>Há métodos para criar, atualizar, apagar e recuperar dados de usuários. Há também métodos para obter e setar valores do objeto que mantem os dados do usuário.</p>
<h4 class="heading-font">O objeto <em>User</em></h4>
<p>Não há <em>constraints</em> para definir a interface pública do objeto <em>User</em> e isso é realmente interessante. O desenvolvedor é livre para definir o objeto da forma como desejar. A implementação básica, que vimos acima, requer apenas três propriedades. Então, nesse exemplo, vamos começar simples.</p>
<pre class="brush: csharp; title: Uma classe bem simples para armazenar dados de usuários; notranslate" title="Uma classe bem simples para armazenar dados de usuários">public class RavenDBIdentityUser
{
    public RavenDBIdentityUser(string userName) : this()
    {
        UserName = userName ?? throw new ArgumentNullException(nameof(userName));
    }

    public string Id { get; internal set; }
    public string UserName { get; internal set; }
    public string NormalizedUserName { get; internal set; }
}
</pre>
<h4 class="heading-font">Preparando-se para salvar e recuperar dados</h4>
<p>Agora, é hora de começarmos a implementar nossa <em>UserStore</em></p>
<pre class="brush: csharp; title: Implementação para IUserInterface; notranslate" title="Implementação para IUserInterface">public partial class RavenDBUserStore&lt;TUser, TDocumentStore&gt; :
    IUserStore&lt;TUser&gt;,
    where TUser : RavenDBIdentityUser
    where TDocumentStore: class, IDocumentStore
{
    public IdentityErrorDescriber ErrorDescriber { get; }
    public TDocumentStore Context { get; }

    private readonly Lazy&lt;IAsyncDocumentSession&gt; _session;

    public RavenDBUserStore(
        TDocumentStore context,
        IdentityErrorDescriber errorDescriber = null
    )
    {
        ErrorDescriber = errorDescriber;
        Context = context ?? throw new ArgumentNullException(nameof(context));

        _session = new Lazy&lt;IAsyncDocumentSession&gt;(() =&gt;
        {
            var session = Context.OpenAsyncSession();
            session.Advanced.UseOptimisticConcurrency = true;
            return session;
        }, true);
    }

    public IAsyncDocumentSession Session 
        =&gt; _session.Value;

    public Task SaveChanges(
        CancellationToken cancellationToken = default(CancellationToken)
        ) =&gt; Session.SaveChangesAsync(cancellationToken);

    // ...

    #region IDisposable
    private void ThrowIfDisposed()
    {
        if (_disposed)
        {
            throw new ObjectDisposedException(GetType().Name);
        }
    }

    private bool _disposed;
    public void Dispose()
    {
        Session.Dispose;
        _disposed = true;
    }
    #endregion
}
</pre>
<p>Neste código, iniciamos a implementação da interface <em>IUserStore</em>.</p>
<p>Eu continuo usando um tipo genérico para especificar o tipo que será utilizado para armazenar dados do usuário. A única restrição força que o tipo seja uma especialização da classe RavenDBIdentityUser que definimos antes. Esta decisão de design torna fácil ampliar o modelo para salvar mais dados.</p>
<p>O construtor espera por uma instância de <em>IDocumentStore</em>. Nós vamos usar este objeto para conectar ao banco de dados RavenDB (Se deseja aprender mais sobre RavenDB, considere inscrever-se <a href="https://ravendb.net/learn">RavenDB bootcamp</a> disponível gratuitamente on-line). </p>
<p>Nós vamos utilizar a biblioteca assíncrona do RavenDB que é bem fácil.</p>
<h4 class="heading-font">Criando, carregando, atualizando e excluindo usuários</h4>
<p>Com uma sessão, é bem fácil escrever código para criação, carga e atualização de dados de usuários.</p>
<pre class="brush: csharp; title: Criando, carregando e atualizando usuários; notranslate" title="Criando, carregando e atualizando usuários">public async Task&lt;IdentityResult&gt; CreateAsync(
    TUser user,
    CancellationToken cancellationToken = default(CancellationToken)
    )
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    cancellationToken.ThrowIfCancellationRequested();

    await Session.StoreAsync(user, cancellationToken);
    await SaveChanges(cancellationToken);

    return IdentityResult.Success;
}

public Task&lt;TUser&gt; FindByIdAsync(string userId, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    cancellationToken.ThrowIfCancellationRequested();
    return Session.LoadAsync&lt;TUser&gt;(userId, cancellationToken);
}

public async Task&lt;IdentityResult&gt; UpdateAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    var stored = await Session.LoadAsync&lt;TUser&gt;(user.Id, cancellationToken);
    var etag = Session.Advanced.GetEtagFor(stored);

    await Session.StoreAsync(user, etag, cancellationToken);

    try
    {
        await SaveChanges(cancellationToken);
    }
    catch (ConcurrencyException)
    {
        return IdentityResult.Failed(ErrorDescriber.ConcurrencyFailure());
    }

    return IdentityResult.Success;
}

public async Task&lt;IdentityResult&gt; DeleteAsync(
    TUser user,
    CancellationToken cancellationToken = default(CancellationToken)
    )
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    Session.Delete(user.Id);

    try
    {
        await SaveChanges(cancellationToken);
    }
    catch (ConcurrencyException)
    {
        return IdentityResult.Failed(ErrorDescriber.ConcurrencyFailure());
    }

    return IdentityResult.Success;
}
</pre>
<p>Não precisamos pensar em esquema de tabelas &#8211; RavenDB é um banco de dados <em>schemaless</em>. RavenDB vai salvar o objeto sem reclamações, mesmo que a interface pública da classe mude completamente. Não há necessidade de pensar a respeito de modificações neste código no futuro. Não há <em>migrations</em> ou nada deste tipo.</p>
<h4 class="heading-font">Encontrando usuários pelo nome</h4>
<p>Agora, vamos escrever o método <em>FindByName</em><br />
Now, let&#8217;s write the FindByName method.</p>
<pre class="brush: csharp; title: Consultando com RavenDB; notranslate" title="Consultando com RavenDB">public Task&lt;TUser&gt; FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    return Session.Query&lt;TUser&gt;().FirstOrDefaultAsync(
        u =&gt; u.NormalizedUserName == normalizedUserName, cancellationToken
    );
}
</pre>
<p>Quanto performático é esse código? Usando Raven, é extremamente rápido! RavenDB irá criar um índice automaticamente para executar essa <em>query</em> da forma mais rápida possível.</p>
<h4 class="heading-font">Obtendo e setando propriedades do objeto <em>User</em></h4>
<p>Como você sabe, nós estamos livres para definir a interface pública do objeto <em>User</em>. Logo, a interface <em>IUserStore</em>, define alguns métodos auxiliares onde podemos definir a lógica que deve ser empregada para setar e obter dados.</p>
<pre class="brush: csharp; title: Obtendo e setando valores de propriedades; notranslate" title="Obtendo e setando valores de propriedades">public Task&lt;string&gt; GetUserIdAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();
    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.Id);
}

public Task&lt;string&gt; GetUserNameAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.UserName);
}

public Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    if (userName == null)
    {
        throw new ArgumentNullException(nameof(userName));
    }

    user.UserName = userName;

    return Task.CompletedTask;
}

public Task&lt;string&gt; GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    return Task.FromResult(user.NormalizedUserName);
}

public Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken = default(CancellationToken))
{
    cancellationToken.ThrowIfCancellationRequested();
    ThrowIfDisposed();

    if (user == null)
    {
        throw new ArgumentNullException(nameof(user));
    }

    if (normalizedName == null)
    {
        throw new ArgumentNullException(nameof(normalizedName));
    }

    user.NormalizedUserName = normalizedName;

    return Task.CompletedTask;
}
</pre>
<p>Simples assim. </p>
<h2 class="heading-font">Fazendo gestão avançada dos dados dos usuários</h2>
<p>Como você pode ver, a implementação básica do <em>User Store</em> não suporta alguns conceitos importantes, como senhas, emails, <em>claims</em>, bloqueio de usuários, <em>roles</em>, etc.</p>
<p>Todas essas funcionalidades podem ser adicionadas, conforme for necessário através da implementação de algumas interfaces opcionais. Estas interfaces apenas definem outros métodos auxiliares que recuperam e setam valores no objeto <em>user</em>.</p>
<p>Você encontra uma implementação dessas importantes interfaces opcionais no meu <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.</p>
<h2 class="heading-font">Gestão de <em>Roles</em></h2>
<p>Um bom <em>storage provider</em> deve implementar também um <em>Role Store</em>. Trata-se de uma classe que provê métodos para todas as operações com dados envolvendo <em>Roles</em>.</p>
<pre class="brush: csharp; title: interface IRoleStore; notranslate" title="interface IRoleStore">public interface IRoleStore&lt;TRole&gt; : IDisposable where TRole : class
{
    Task&lt;IdentityResult&gt; CreateAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;IdentityResult&gt; DeleteAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;TRole&gt; FindByIdAsync(string roleId, CancellationToken cancellationToken);
    Task&lt;TRole&gt; FindByNameAsync(string normalizedRoleName, CancellationToken cancellationToken);
    Task&lt;string&gt; GetNormalizedRoleNameAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;string&gt; GetRoleIdAsync(TRole role, CancellationToken cancellationToken);
    Task&lt;string&gt; GetRoleNameAsync(TRole role, CancellationToken cancellationToken);
    Task SetNormalizedRoleNameAsync(TRole role, string normalizedName, CancellationToken cancellationToken);
    Task SetRoleNameAsync(TRole role, string roleName, CancellationToken cancellationToken);
    Task&lt;IdentityResult&gt; UpdateAsync(TRole role, CancellationToken cancellationToken);
}
</pre>
<p>Como pode ver, a ideia aqui é basicamente a mesma adotada no design de <em>IUserStore</em>. Logo, podemos seguir a mesma estratégia de implementação.</p>
<p>Novamente, você encontra um exemplo de implementação da interface IRoleStore no meu <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.</p>
<h2 class="heading-font">Métodos auxiliares para tornar a configuração do <em>IdentityBuilder</em> mais fácil</h2>
<p>Agora que temos nossas implementações para IUserStore e IRoleStore, precisamos escrever um método auxiliar para configurar o IdentityBuilder para usar essas implementações.</p>
<pre class="brush: csharp; title: Métodos auxiliares para configurar ASP.NET Core identity para usar nosso Storage provider; notranslate" title="Métodos auxiliares para configurar ASP.NET Core identity para usar nosso Storage provider">public static class IdentityBuilderExtensions
{
    public static IdentityBuilder UseRavenDBDataStoreAdaptor&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    ) where TDocumentStore : class, IDocumentStore
        =&gt; builder
            .AddRavenDBUserStore&lt;TDocumentStore&gt;()
            .AddRavenDBRoleStore&lt;TDocumentStore&gt;();
        
    private static IdentityBuilder AddRavenDBUserStore&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    )
    {
        var userStoreType = typeof(RavenDBUserStore&lt;,&gt;).MakeGenericType(builder.UserType, typeof(TDocumentStore));

        builder.Services.AddScoped(
            typeof(IUserStore&lt;&gt;).MakeGenericType(builder.UserType),
            userStoreType
        );

        return builder;
    }

    private static IdentityBuilder AddRavenDBRoleStore&lt;TDocumentStore&gt;(
        this IdentityBuilder builder
    )
    {
        var roleStoreType = typeof(RavenDBRoleStore&lt;,&gt;).MakeGenericType(builder.RoleType, typeof(TDocumentStore));

        builder.Services.AddScoped(
            typeof(IRoleStore&lt;&gt;).MakeGenericType(builder.RoleType),
            roleStoreType
        );

        return builder;
    }
}
</pre>
<p>Feito!</p>
<h2 class="heading-font">Usando!</h2>
<p>Estamos prontos para parar de usar Entity Framework e SQL Server (ugh) e começar a usar RavenDB para armazenar usuários e <em>Roles</em> em nossas aplicações com ASP.NET core.</p>
<p>Assumindo que você já esteja utilizando RavenDB, a configuração será algo similar ao que segue:</p>
<pre class="brush: csharp; title: configurando ASP.NET Core services; notranslate" title="configurando ASP.NET Core services">public void ConfigureServices(IServiceCollection services)
{
    // Add framework services.
    //services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;
    //        options.UseSqlServer(Configuration["Data:DefaultConnection:ConnectionString"]));

    services.AddSingleton(DocumentStoreHolder.Store)

    services.AddIdentity&lt;ApplicationUser, RavenDBIdentityRole&gt;()
        .UseRavenDBDataStoreAdaptor&lt;IDocumentStore&gt;()
        .AddDefaultTokenProviders();

    services.AddMvc();

    // Add application services.
    services.AddTransient&lt;IEmailSender, AuthMessageSender&gt;();
    services.AddTransient&lt;ISmsSender, AuthMessageSender&gt;();
}
</pre>
<p>Observe que precismos mudar a classe base adotada de <em>AplicationUser</em> para <em>RavenDBIdentityUser</em>.</p>
<p>Há um demo executável no meu <a href="https://github.com/ElemarJR/AspNetCore.Identity.RavenDB">GitHub</a>.</p>
<p>Era isso.</p>
";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-05-20-criando-um-storage-provider-para-asp-net-core-identity-com-ravendb.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[66bc4e26a29e532395814390fa447f0cf3c86940]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hello OpenCV with C++, using Visual Studio 2017 and VcPkg</title>
		<link>http://localhost:8080/?p=6601&#038;lang=en</link>
		<pubDate>Fri, 26 May 2017 18:23:01 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6601</guid>
		<description></description>
		<content:encoded><![CDATA[In this post, I will show how to do your first steps with OpenCV quickly using Visual Studio 2017 and VcPkg.
<h3>What is OpenCV?</h3>
OpenCV (Open Source Computer Vision) is an open-source and cross-platform library mainly aimed at real-time computer vision. Originally, it was developed by Intel. It is free for use under the BSD license.
<h3>What is VcPkg?</h3>
Acquiring native libraries on Windows is a critical part of the application development process, and it used to be a nightmare.  VcPkg is a VC++ Packaging Tool that helps to get C and C++ libraries on Windows.
<h3>Getting started with VcPkg</h3>
If you want to use VcPkg (I strongly recommend it if you are planning to develop software for Windows using C++), you will need:
<ol>
 	<li>Clone <a href="https://github.com/Microsoft/vcpkg">VcPkg GitHub repository</a>;</li>
 	<li>Run the VcPkg bootstrapping process

<pre><code>.bootstrap-vcpkg.bat</code></pre>

</li>
 	<li>Make all installed packages available to all VS projects.

<pre><code>.vcpkg integrate install</code></pre>

</li>
</ol>
Done! Now you can get OpenCV in a very easy way.

<pre><code>.vcpkg install opencv</code></pre>


<h3>Hello, OpenCV</h3>
We are ready to create our application using OpenCV. There is no need to any configuration - we just need <em>#include</em> it.

<pre><code>#include &lt;opencv2/opencv.hpp&gt;
#include &lt;iostream&gt;

int main()
{
	cv::namedWindow(&quot;raw&quot;, cv::WINDOW_AUTOSIZE);
	cv::namedWindow(&quot;gray&quot;, cv::WINDOW_AUTOSIZE);
	cv::namedWindow(&quot;canny&quot;, cv::WINDOW_AUTOSIZE);

	cv::VideoCapture cap;
	cap.open(0);

	if (!cap.isOpened())
	{
		std::cerr &lt;&lt; &quot;Couldn't open capture.&quot; &lt;&lt; std::endl;
		return -1;
	}
	
	cv::UMat bgr_frame, gray, canny;

	for (;;) 
	{
		cap &gt;&gt; bgr_frame;
		if (bgr_frame.empty()) break;

		cv::imshow(&quot;raw&quot;, bgr_frame);

		cv::cvtColor(bgr_frame, gray, cv::COLOR_BGR2GRAY);
		cv::imshow(&quot;gray&quot;, gray);

		cv::Canny(gray, canny, 10, 100, 3, true);
		cv::imshow(&quot;canny&quot;, canny);

		char c = cv::waitKey(10);
		if (c == 27) break;
	}

	cap.release();
	return 0;
}</code></pre>

This code starts the camera, capturing images, applying filters on it and displaying the results in three different windows.

<img src="http://localhost:8080/wp-content/uploads/2017/05/opencv.png" alt="" width="1920" height="1080" class="alignnone size-full wp-image-6603" />

That's all folks.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6601</wp:post_id>
		<wp:post_date><![CDATA[2017-05-26 15:23:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-26 18:23:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hello-opencv-using-visual-studio-2017-and-vcpkg]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[c++]]></category>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="computer-vision"><![CDATA[computer vision]]></category>
		<category domain="post_tag" nicename="cpp"><![CDATA[cpp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="opencv"><![CDATA[opencv]]></category>
		<category domain="post_translations" nicename="pll_5928757c01bb3"><![CDATA[pll_5928757c01bb3]]></category>
		<category domain="post_tag" nicename="vcpkg"><![CDATA[vcpkg]]></category>
		<category domain="post_tag" nicename="vs2017"><![CDATA[vs2017]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#757575]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6603]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-05-26-hello-opencv-using-visual-studio-2017-and-vcpkg.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[f63056cd7516777ad5e4e9d3510a3218a8cc455d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Primeiros passos com OpenCV em C++, usando Visual Studio 2017 e VcPkg</title>
		<link>http://localhost:8080/?p=6615&#038;lang=pt</link>
		<pubDate>Fri, 26 May 2017 18:37:47 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6615</guid>
		<description></description>
		<content:encoded><![CDATA[Neste post, vou compartilhar como dar os primeiros passos com OpenCV, rapidamente, usando Visual Studio 2017 e VcPkg.

<h3>O que é OpenCV?</h3>
OpenCV (Open Source Computer Vision) é uma biblioteca open-source, <em>cross-platform</em>, destinada a suportar o desenvolvimento de aplicações que usam visão computacional. Originalmente, foi desenvolvida pela Intel e é livre para o uso (licença BSD).

<h3>O que é VcPkg?</h3>
Obter e referenciar bibliotecas nativas em Windows é parte crítica no processo de desenvolvimento de aplicações, e costuma ser um pesadelo. VcPkg é uma ferramenta para gestão de pacotes para VC++ que ajuda a obter e usar bibliotecas C e C++ no Windows.

<h3>Primeiros passos com VcPkg</h3>
Se você deseja usar VcPkg (eu recomendo fortemente, se você quer usar C++ para desenvolver aplicações Windows), você precisará:
<ol>
 	<li>Clonar o <a href="https://github.com/Microsoft/vcpkg">repositório do VcPkg no GitHub</a>;</li>
 	<li>Executar o processo de inicialização do VcPkg.
<pre><code>.bootstrap-vcpkg.bat</code></pre>

</li>
 	<li>Tornar todos os pacotes instalados disponíveis para todos os projetos VS.
<pre><code>.vcpkg integrate install</code></pre>

</li>
</ol>
Feito! Agora você pode obter e usar OpenCV de forma muito fácil.

<pre><code>.vcpkg install opencv</code></pre>


<h3>Olá, OpenCV</h3>
Estamos prontos para criar nossa aplicação usando OpenCV. Não há necessidade de qualquer configuração. Basta um simples <em>#include</em> .

<pre><code>
#include &lt;opencv2/opencv.hpp&gt;
#include &lt;iostream&gt;

int main()
{
	cv::namedWindow(&quot;raw&quot;, cv::WINDOW_AUTOSIZE);
	cv::namedWindow(&quot;gray&quot;, cv::WINDOW_AUTOSIZE);
	cv::namedWindow(&quot;canny&quot;, cv::WINDOW_AUTOSIZE);

	cv::VideoCapture cap;
	cap.open(0);

	if (!cap.isOpened())
	{
		std::cerr &lt;&lt; &quot;Couldn't open capture.&quot; &lt;&lt; std::endl;
		return -1;
	}
	
	cv::UMat bgr_frame, gray, canny;

	for (;;) 
	{
		cap &gt;&gt; bgr_frame;
		if (bgr_frame.empty()) break;

		cv::imshow(&quot;raw&quot;, bgr_frame);

		cv::cvtColor(bgr_frame, gray, cv::COLOR_BGR2GRAY);
		cv::imshow(&quot;gray&quot;, gray);

		cv::Canny(gray, canny, 10, 100, 3, true);
		cv::imshow(&quot;canny&quot;, canny);

		char c = cv::waitKey(10);
		if (c == 27) break;
	}

	cap.release();
	return 0;
}</code></pre>

Este código inicia a câmera, captura imagens, aplica alguns filtros e mostra os resultados em três janelas diferentes.

<img src="http://localhost:8080/wp-content/uploads/2017/05/opencv.png" alt="" width="1920" height="1080" class="alignnone size-full wp-image-6603" />

Isso é tudo.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6615</wp:post_id>
		<wp:post_date><![CDATA[2017-05-26 15:37:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-26 18:37:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[primeiros-passos-com-opencv-usando-visual-studio-2017-e-vcpkg]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[c++]]></category>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="cpp"><![CDATA[cpp]]></category>
		<category domain="post_tag" nicename="opencv"><![CDATA[opencv]]></category>
		<category domain="post_translations" nicename="pll_5928757c01bb3"><![CDATA[pll_5928757c01bb3]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="vcpkg"><![CDATA[vcpkg]]></category>
		<category domain="post_tag" nicename="visao-computacional"><![CDATA[visão computacional]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6603]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg_color]]></wp:meta_key>
			<wp:meta_value><![CDATA[#757575]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[wptouch_sc_data]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:6:"page-1";O:8:"stdClass":5:{s:21:"has_desktop_shortcode";i:1;s:7:"scripts";a:0:{}s:6:"styles";a:0:{}s:11:"valid_until";i:1496408048;s:17:"shortcode_content";s:3547:"<p>Neste post, vou compartilhar como dar os primeiros passos com OpenCV, rapidamente, usando Visual Studio 2017 e VcPkg.</p>
<h3 class="heading-font">O que é OpenCV?</h3>
<p>OpenCV (Open Source Computer Vision) é uma biblioteca open-source, <em>cross-platform</em>, destinada a suportar o desenvolvimento de aplicações que usam visão computacional. Originalmente, foi desenvolvida pela Intel e é livre para o uso (licença BSD).</p>
<h3 class="heading-font">O que é VcPkg?</h3>
<p>Obter e referenciar bibliotecas nativas em Windows é parte crítica no processo de desenvolvimento de aplicações, e costuma ser um pesadelo. VcPkg é uma ferramenta para gestão de pacotes para&nbsp;VC++ que ajuda a obter e usar bibliotecas C e C++ no Windows.</p>
<h3 class="heading-font">Primeiros passos com VcPkg</h3>
<p>Se você deseja usar VcPkg (eu recomendo fortemente, se você quer usar C++ para desenvolver aplicações Windows), você precisará:</p>
<ol>
<li>Clonar o <a href="https://github.com/Microsoft/vcpkg?wptouch_preview_theme=enabled" rel="nofollow">repositório do VcPkg no GitHub</a>;</li>
<li>Executar o processo de inicialização do VcPkg.
<pre class="brush: powershell; title: bootstraping vcpkg; notranslate" title="bootstraping vcpkg">._BACKSLASH_bootstrap-vcpkg.bat</pre>
</li>
<li>Tornar todos os pacotes instalados disponíveis para todos os projetos VS.
<pre class="brush: powershell; title: Habilitando integração com VS (requer admin no primeiro uso); notranslate" title="Habilitando integração com VS (requer admin no primeiro uso)">._BACKSLASH_vcpkg integrate install</pre>
</li>
</ol>
<p>Feito! Agora você pode obter e usar OpenCV de forma muito fácil.</p>
<pre class="brush: powershell; title: getting OpenCV; notranslate" title="getting OpenCV">._BACKSLASH_vcpkg install opencv</pre>
<h3 class="heading-font">Olá, OpenCV</h3>
<p>Estamos prontos para criar nossa aplicação usando OpenCV. Não há necessidade de qualquer configuração. Basta um simples <em>#include</em> .</p>
<pre class="brush: cpp; title: Getting started with OpenCV; notranslate" title="Getting started with OpenCV">#include &lt;opencv2/opencv.hpp&gt;
#include &lt;iostream&gt;

int main()
{
	cv::namedWindow("raw", cv::WINDOW_AUTOSIZE);
	cv::namedWindow("gray", cv::WINDOW_AUTOSIZE);
	cv::namedWindow("canny", cv::WINDOW_AUTOSIZE);

	cv::VideoCapture cap;
	cap.open(0);

	if (!cap.isOpened())
	{
		std::cerr &lt;&lt; "Couldn't open capture." &lt;&lt; std::endl;
		return -1;
	}
	
	cv::UMat bgr_frame, gray, canny;

	for (;;) 
	{
		cap &gt;&gt; bgr_frame;
		if (bgr_frame.empty()) break;

		cv::imshow("raw", bgr_frame);

		cv::cvtColor(bgr_frame, gray, cv::COLOR_BGR2GRAY);
		cv::imshow("gray", gray);

		cv::Canny(gray, canny, 10, 100, 3, true);
		cv::imshow("canny", canny);

		char c = cv::waitKey(10);
		if (c == 27) break;
	}

	cap.release();
	return 0;
}
</pre>
<p>Este código inicia a câmera, captura imagens, aplica alguns filtros e mostra os resultados em três janelas diferentes.</p>
<p><img src="http://www.elemarjr.com/wp-content/uploads/2017/05/opencv.png" alt="" width="1920" height="1080" class="alignnone size-full wp-image-6603 aligncenter" srcset="http://www.elemarjr.com/wp-content/uploads/2017/05/opencv.png 1920w, http://www.elemarjr.com/wp-content/uploads/2017/05/opencv-300x169.png 300w, http://www.elemarjr.com/wp-content/uploads/2017/05/opencv-768x432.png 768w, http://www.elemarjr.com/wp-content/uploads/2017/05/opencv-1024x576.png 1024w" sizes="(max-width: 1920px) 100vw, 1920px"></p>
<p>Isso é tudo.</p>
";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-05-26-primeiros-passos-com-opencv-usando-visual-studio-2017-e-vcpkg.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[22025bffb3b294ed3bfbab6952571c8b2ae986bf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[Tiago Moura Brandão]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tiagomourabrandao@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://tplabs.com.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[186.241.147.255]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-20 12:24:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-20 15:24:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Há alguma forma de usar no VS Code?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1498853545.1043";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497972273.9516";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>C++ going functinonal - std::optional</title>
		<link>http://localhost:8080/?p=6621&#038;lang=en</link>
		<pubDate>Mon, 29 May 2017 21:23:56 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6621</guid>
		<description></description>
		<content:encoded><![CDATA[Sometimes we want to write functions that may not always return a result. In these cases we can use the <em>std::optional</em> container. That's a pretty good alternative to special magic values and exceptions.

<pre><code>#include &lt;optional&gt;
#include &lt;string&gt;
#include &lt;sstream&gt;
#include &lt;iostream&gt;

std::optional&lt;int&gt; TryParseInt(std::string input)
{
	std::stringstream parser(input);
	
	int result;
	parser &gt;&gt; result;
	
	if (parser.fail() || !parser.eof())
		return {};

	return result;
}

int main()
{
	std::cout &lt;&lt; &quot;nEnter a number: &quot; &lt;&lt; std::endl;

	std::string input;
	std::cin &gt;&gt; input;

	auto parseResult = TryParseInt(input);

	if (parseResult.has_value())
	{
		for (auto i = 0; i &lt; parseResult; i ++)
		{
			std::cout &lt;&lt; i &lt;&lt; std::endl;
		}
	}
	else
	{
		std::cout &lt;&lt; &quot;Invalid number!&quot; &lt;&lt; std::endl;
	}
}</code></pre>


This approach make the code more readable, as the intent is expressed explicitly. Dont't you think?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6621</wp:post_id>
		<wp:post_date><![CDATA[2017-05-29 18:23:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-29 21:23:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[c-going-functinonal-stdoptional]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="cpp"><![CDATA[cpp]]></category>
		<category domain="post_tag" nicename="cpp17"><![CDATA[cpp17]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
		<category domain="post_tag" nicename="option"><![CDATA[option]]></category>
		<category domain="post_translations" nicename="pll_592c926040936"><![CDATA[pll_592c926040936]]></category>
		<category domain="post_tag" nicename="std"><![CDATA[std]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/05/options.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6623]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[wptouch_sc_data]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:6:"page-1";O:8:"stdClass":5:{s:21:"has_desktop_shortcode";i:1;s:7:"scripts";a:0:{}s:6:"styles";a:0:{}s:11:"valid_until";i:1496408732;s:17:"shortcode_content";s:1150:"<p>Sometimes we want to write functions that may not always return a result. In these cases we can use the <em>std::optional</em> container. That&#8217;s a pretty good alternative to special magic values and exceptions.</p>
<pre class="brush: cpp; title: TryParseInt can return no results; notranslate" title="TryParseInt can return no results">#include &lt;optional&gt;
#include &lt;string&gt;
#include &lt;sstream&gt;
#include &lt;iostream&gt;

std::optional&lt;int&gt; TryParseInt(std::string input)
{
	std::stringstream parser(input);
	
	int result;
	parser &gt;&gt; result;
	
	if (parser.fail() || !parser.eof())
		return {};

	return result;
}

int main()
{
	std::cout &lt;&lt; "_BACKSLASH_nEnter a number: " &lt;&lt; std::endl;

	std::string input;
	std::cin &gt;&gt; input;

	auto parseResult = TryParseInt(input);

	if (parseResult.has_value())
	{
		for (auto i = 0; i &lt; parseResult; i ++)
		{
			std::cout &lt;&lt; i &lt;&lt; std::endl;
		}
	}
	else
	{
		std::cout &lt;&lt; "Invalid number!" &lt;&lt; std::endl;
	}
}
</pre>
<p>This approach make the code more readable, as the intent is expressed explicitly. Dont&#8217;t you think?</p>
";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-05-29-c-going-functinonal-stdoptional.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[32208d23f72f1d29a714b9e3bf0dce017e9fc383]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>C++ funcional - std::optional</title>
		<link>http://localhost:8080/?p=6625&#038;lang=pt</link>
		<pubDate>Mon, 29 May 2017 21:28:08 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6625</guid>
		<description></description>
		<content:encoded><![CDATA[Algumas vezes, desejamos escrever funções que não retornam, necessariamente, um resultado. Nesses casos, podemos usar o contêiner 
<em>std::optional</em>. Trata-se de uma alternativa boa para valores mágicos e exceções.

<pre><code>#include &lt;optional&gt;
#include &lt;string&gt;
#include &lt;sstream&gt;
#include &lt;iostream&gt;

std::optional&lt;int&gt; TryParseInt(std::string input)
{
	std::stringstream parser(input);
	
	int result;
	parser &gt;&gt; result;
	
	if (parser.fail() || !parser.eof())
		return {};

	return result;
}

int main()
{
	std::cout &lt;&lt; &quot;nEnter a number: &quot; &lt;&lt; std::endl;

	std::string input;
	std::cin &gt;&gt; input;

	auto parseResult = TryParseInt(input);

	if (parseResult.has_value())
	{
		for (auto i = 0; i &lt; parseResult; i ++)
		{
			std::cout &lt;&lt; i &lt;&lt; std::endl;
		}
	}
	else
	{
		std::cout &lt;&lt; &quot;Invalid number!&quot; &lt;&lt; std::endl;
	}
}</code></pre>

Esta abordagem torna o código mais claro, expressando claramente a intenção. Não acha?
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6625</wp:post_id>
		<wp:post_date><![CDATA[2017-05-29 18:28:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-29 21:28:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[c-funcional-stdoptional]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="cpp-pt"><![CDATA[cpp]]></category>
		<category domain="post_tag" nicename="cpp17-pt"><![CDATA[cpp17]]></category>
		<category domain="post_tag" nicename="funcional"><![CDATA[Funcional]]></category>
		<category domain="post_tag" nicename="option-pt"><![CDATA[option]]></category>
		<category domain="post_translations" nicename="pll_592c926040936"><![CDATA[pll_592c926040936]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="std-pt"><![CDATA[std]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6623]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/05/options-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[wptouch_sc_data]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:6:"page-1";O:8:"stdClass":5:{s:21:"has_desktop_shortcode";i:1;s:7:"scripts";a:0:{}s:6:"styles";a:0:{}s:11:"valid_until";i:1496408537;s:17:"shortcode_content";s:1196:"<p>Algumas vezes, desejamos escrever funções que não retornam, necessariamente, um resultado. Nesses casos, podemos usar o contêiner<br />
<em>std::optional</em>. Trata-se de uma alternativa boa para valores mágicos e exceções.</p>
<pre class="brush: cpp; title: TryParseInt pode não ter nenhum resultado para retornar; notranslate" title="TryParseInt pode não ter nenhum resultado para retornar">#include &lt;optional&gt;
#include &lt;string&gt;
#include &lt;sstream&gt;
#include &lt;iostream&gt;

std::optional&lt;int&gt; TryParseInt(std::string input)
{
	std::stringstream parser(input);
	
	int result;
	parser &gt;&gt; result;
	
	if (parser.fail() || !parser.eof())
		return {};

	return result;
}

int main()
{
	std::cout &lt;&lt; "_BACKSLASH_nEnter a number: " &lt;&lt; std::endl;

	std::string input;
	std::cin &gt;&gt; input;

	auto parseResult = TryParseInt(input);

	if (parseResult.has_value())
	{
		for (auto i = 0; i &lt; parseResult; i ++)
		{
			std::cout &lt;&lt; i &lt;&lt; std::endl;
		}
	}
	else
	{
		std::cout &lt;&lt; "Invalid number!" &lt;&lt; std::endl;
	}
}
</pre>
<p>Esta abordagem torna o código mais claro, expressando claramente a intenção. Não acha?</p>
";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-05-29-c-funcional-stdoptional.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[07188668608390bc54ff96b449856af19c29b35e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting started with microservices</title>
		<link>http://localhost:8080/?p=6646&#038;lang=en</link>
		<pubDate>Tue, 06 Jun 2017 01:02:08 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6646</guid>
		<description></description>
		<content:encoded><![CDATA["Microservices" is a trending topic. Big companies are trying to associate their technologies with this concept - but, it is important to know that you don't need to use any particular technology to follow the <em>microservices way</em>.

In this and some future posts, I will share my understanding about Microservices with definitions and a lot of examples.

Let's start with the basics.
<h3>What are Microservices?</h3>
<p style="padding-left: 30px;"><strong>A microservice is a small and autonomous service</strong> with one, and only one, very focused capability that a remote API exposes to the rest of the system. (<em>Sam Newman</em>)</p>
A Microservice could be delivered as an isolated service on a platform as a service (PAAS), or it might be its own operating system process. <strong>You don't need to adopt any particular host technology to work with microservices</strong>.

<strong>A Microservice is individually and quickly deployable</strong>. When you change a microservice, you should be able to deploy only that changed microservice to the production environment without touching any other part of the system.  If you need to restart/deploy other services when you deploy a microservice, you are doing it wrong.

To be autonomous, a Microservice owns its data store.

<strong>A system with Microservices is a distributed system</strong>.
<h3>What is a Microservice Architecture?</h3>
It is a style of engineering highly automated; evolvable software systems made up of microservices. <strong>Microservices architecture is a lightweight form of SOA where each service focuses on doing one thing and doing it well</strong>.
<h3>How should each microservice be architected?</h3>
When creating Microservices, I recommend adopting the <a href="http://www.elemarjr.com/en/2017/04/ensuring-the-quality-of-the-domain-model-through-the-hexagonal-architecture-pattern/">Hexagonal Architecture Pattern</a>.
<h3><img class="aligncenter wp-image-6654" src="http://localhost:8080/wp-content/uploads/2017/06/microservice_arch.png" alt="" width="640" height="395" style="border:1px solid black" /></h3>
In the figure, we have represented two microservices of an e-commerce system: 1) ShoppingCart and 2) ProductCatalog. Each one owns its own database.

ShoppingCart microservice uses an adapter to communicate with ProductCatalog.

ShoppingCart provides HTTP adapters to communicate with consumers - anyway; it is a design choice. It is pretty frequent to adopt other technologies like message queues, for example, for communication.
<h3>How should a system with microservices be architected?</h3>
A system built with microservices starts with an API gateway microservice.  The idea is to hide the microservices complexity of the customer application.

Each microservice is a separate process that uses their adapters to communicate with the other.

<img class="wp-image-6656 aligncenter" src="http://localhost:8080/wp-content/uploads/2017/06/microservices_arch2.png" alt="" width="640" height="256" style="border:1px solid black" />
<div></div>
<h3>Why adopt a microservices architecture style?</h3>
A system built with microservices is robust by design being more malleable, scalable, and resilient.

It is simpler to practice continuous delivering with a microservices architected system.
<h3>Why NOT?</h3>
Microservice systems are distributed systems. They are harder to test than monolithic systems. It is also fair to remember that communication across process boundaries is slower than in-process method calls.

Microservices are developed, deployed and managed independently in production. At some point, a lot of monitoring tools will be necessary.
<h3>Next steps</h3>
Now that we understand the basics of the Microservices architecture style, we are ready to write some code...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6646</wp:post_id>
		<wp:post_date><![CDATA[2017-06-05 22:02:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-06 01:02:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[getting-started-with-microservices]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="adapters"><![CDATA[adapters]]></category>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="microservices"><![CDATA[microservices]]></category>
		<category domain="post_translations" nicename="pll_593603a0c45bc"><![CDATA[pll_593603a0c45bc]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/window-1231894_1280.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6666]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-05-getting-started-with-microservices.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[f7215808507bec5ff869cd84ba152aeb23e926ff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Entendendo &quot;microserviços&quot;</title>
		<link>http://localhost:8080/?p=6667&#038;lang=pt</link>
		<pubDate>Tue, 06 Jun 2017 01:21:53 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6667</guid>
		<description></description>
		<content:encoded><![CDATA["Microserviços" é um trending topic. Grandes empresas estão tentando associar suas tecnologias com este conceito. Entretanto, é importante que se destaque que não é necessário usar nenhuma tecnologia em especial para criar microserviços.

Neste post e nos próximos, vou compartilhar meu entendimento sobre microserviços, com definições e um bocado de exemplos.

Vamos começar com o básico.
<h3>O que são Microserviços?</h3>
<p style="padding-left: 30px;"><strong>Um microserviço é um serviço pequeno e autônomo </strong>com uma, e somente uma, responsabilidade que uma API remota expõe para o resto do sistema. (<em>Sam Newman</em>)</p>
Um microserviço poderia ser distribuído como um serviço isolado na nuvem, ou ainda em um processo dedicado no sistema operacional. <strong>Não precisamos adotar nenhuma tecnologia em especial de hospedagem para trabalhar com microserviços</strong>.

<strong>Microserviços podem ser distribuídos individualmente e de forma rápida</strong>. Quando mudamos um microserviço, devemos poder distribuir apenas ele, sem necessidade de mexer com nenhuma outra parte do sistema. Se você precisa reiniciar/distribuir outros serviços quando distribui um microserviço, então está fazendo algo errado.

Para ser autônomo verdadeiramente, um microserviço deve usar seu próprio mecanismo de armazenamento (banco de dados).

Um sistema com microserviços é um sistema distribuído.
<h3>O que é Arquitetura de Microserviços?</h3>
É um estilo de projetar sistemas altamente automatizado, baseado em microserviços. <strong>É uma forma mais leve de SOA onde cada serviço foca em fazer uma coisa somente e fazer bem-feito.</strong>
<h3>Como cada microserviço deve ser arquitetado?</h3>
Para criar microserviços, recomendo fortemente a adoção do <a href="http://www.elemarjr.com/pt/2017/04/hexagonal-architecture-pattern/">padrão hexagonal</a>.

<img class="aligncenter wp-image-6654" style="border: 1px solid black;" src="http://localhost:8080/wp-content/uploads/2017/06/microservice_arch.png" alt="" width="640" height="395" />

Na figura, temos representado dois microserviços de um sistema de e-commerce: 1) ShoppingCart e 2) ProductCatalog. Cada um possui seu próprio banco de dados.

ShoppingCart usa um adaptador para comunicar com ProductCatalog.

ShoppingCart provê um adaptador HTTP para comunicar com consumidores - de qualquer forma, esta é uma decisão de design. É bastante frequente adotar outras tecnologias, como mensageria por exemplo, para comunicação.
<h3>Como um sistema com microserviços deveria ser arquitetado?</h3>
Um sistema feito com microserviços começa com um API Gateway. Trata-se de um microserviço (por que não?!) que esconde a complexidade dos demais microserviços da aplicação consumidora.

Cada microserviço tem um processo separado e usa seus adaptadores para comunicar com os demais.

<img class="wp-image-6656 aligncenter" style="border: 1px solid black;" src="http://localhost:8080/wp-content/uploads/2017/06/microservices_arch2.png" alt="" width="640" height="256" />
<div></div>
<h3>Por que adotar microserviços?</h3>
Um sistema feito com microserviços é robusto por design, sendo mais maleável, escalável e resiliente.

É mais simples praticar <em>continuous delivering</em> com sistemas baseados em microserviços.
<h3>Por que não?</h3>
Sistemas baseados em microserviços são sistemas distribuídos. Eles são mais difíceis de testar (de forma integrada) do que sistemas monolíticos. É justo considerar também que a comunicação através dos limites de um processo são mais lentas do que aquelas dentro do processo.

Microserviços são desenvolvidos, distribuídos e gerenciados independentemente em produção. Em algum momento, um bocado de ferramentas de monitoramento será necessário.
<h3>Próximos passos</h3>
Agora que entendemos os conceitos fundamentais de arquiteturas baseadas em microserviços, estamos prontos para escrever algum código...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6667</wp:post_id>
		<wp:post_date><![CDATA[2017-06-05 22:21:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-06 01:21:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[entendendo-microservicos]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="arquitetura"><![CDATA[Arquitetura]]></category>
		<category domain="post_tag" nicename="microservico"><![CDATA[microserviço]]></category>
		<category domain="post_translations" nicename="pll_593603a0c45bc"><![CDATA[pll_593603a0c45bc]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6666]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/window-1231894_1280-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-05-entendendo-microservicos.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[c2e79455fe3f3ef04869b69fad0b3293e4eb4976]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Almir Bispo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gibroh_webmaster@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://adltecnologia.blogspot.com.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[200.196.46.199]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-30 15:59:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-30 18:59:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente Explicação sobre o termo \"MicroService\".Realmente este paradigma facilita muito a manutenção de sistemas.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1498849153.1131";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1498853520.5933";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Felipe]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[felipeoriani@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.19.194.10]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-07-18 13:42:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-07-18 16:42:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente post, bem legal a explicação Elemar. Gostaria de tirar uma dúvida, como fica a implementação da comunicação entre os serviços? Você comentou algo relacionado a serviços de mensageria, mas poderia ser feito via chamadas http (rest)? Via rest, seria custoso?

Seria legal uma segunda parte mostrando alguma implementação de exemplos práticos!
Obrigado Elemar.
Abs]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:13:"1500396166.12";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:14:"1500409904.535";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Tuples, Tuples - Returning multiple results from a function (C#)</title>
		<link>http://localhost:8080/?p=6696&#038;lang=en</link>
		<pubDate>Wed, 14 Jun 2017 12:46:28 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6696</guid>
		<description></description>
		<content:encoded><![CDATA[I have no idea of how many times I had to write a function do discover the minimum and the maximum value of a sequence.

I just love the way I can do it now, using C#.

<pre><code>public static class EnumerableExtensions
{
    public static (T min, T max) MinMax&lt;T&gt;(this IEnumerable&lt;T&gt; source)
        where T : IComparable&lt;T&gt;
    {
        using (var iterator = source.GetEnumerator())
        {
            if (!iterator.MoveNext())
            {
                throw new InvalidOperationException(&quot;Cannot find min/max of an empty sequence.&quot;);
            }

            var result = (min: iterator.Current, max: iterator.Current);
            while (iterator.MoveNext())
            {
                if (iterator.Current.CompareTo(result.min) &lt; 0) result.min = iterator.Current;
                if (iterator.Current.CompareTo(result.max) &gt; 0) result.max = iterator.Current;
            }
            return result;
        }
    }
}</code></pre>

Pretty nice, right?!

<pre><code>class Program
{
    static void Main(string[] args)
    {
        var sequence = Enumerable.Range(10, 1000000);
        var minmax = sequence.MinMax();
        Console.WriteLine($&quot;Min: {minmax.min} Max: {minmax.max}&quot;);
    }
}</code></pre>

That's it.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6696</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 09:46:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 12:46:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tuples-tuples-returning-multiple-results-from-a-function]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
		<category domain="post_translations" nicename="pll_5941316b50a8a"><![CDATA[pll_5941316b50a8a]]></category>
		<category domain="post_tag" nicename="tuples"><![CDATA[tuples]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-14-tuples-tuples-returning-multiple-results-from-a-function.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[d4a03e316e9f1856de755ca0903ad1b92b9e6a94]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tuplas, tuplas - Retornando múltiplos resultados de uma função em C#</title>
		<link>http://localhost:8080/?p=6702&#038;lang=pt</link>
		<pubDate>Wed, 14 Jun 2017 12:51:55 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6702</guid>
		<description></description>
		<content:encoded><![CDATA[Não tenho ideia do número de vezes que escrevi uma função para retornar os valores mínimo e máximo de uma sequência.

Eu simplesmente adoro a ideia de como consigo fazer isso agora em C#.

<pre><code>public static class EnumerableExtensions
{
    public static (T min, T max) MinMax&lt;T&gt;(this IEnumerable&lt;T&gt; source)
        where T : IComparable&lt;T&gt;
    {
        using (var iterator = source.GetEnumerator())
        {
            if (!iterator.MoveNext())
            {
                throw new InvalidOperationException(&quot;Cannot find min/max of an empty sequence.&quot;);
            }

            var result = (min: iterator.Current, max: iterator.Current);
            while (iterator.MoveNext())
            {
                if (iterator.Current.CompareTo(result.min) &lt; 0) result.min = iterator.Current;
                if (iterator.Current.CompareTo(result.max) &gt; 0) result.max = iterator.Current;
            }
            return result;
        }
    }
}</code></pre>

Pretty nice, right?!

<pre><code>class Program
{
    static void Main(string[] args)
    {
        var sequence = Enumerable.Range(10, 1000000);
        var minmax = sequence.MinMax();
        Console.WriteLine($&quot;Min: {minmax.min} Max: {minmax.max}&quot;);
    }
}</code></pre>

That's it.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6702</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 09:51:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 12:51:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tuplas-tuplas-retornando-multiplos-resultados-de-uma-funcao-em-c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="funcional"><![CDATA[Funcional]]></category>
		<category domain="post_translations" nicename="pll_5941316b50a8a"><![CDATA[pll_5941316b50a8a]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="tuplas"><![CDATA[tuplas]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-14-tuplas-tuplas-retornando-multiplos-resultados-de-uma-funcao-em-c.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[17a652e48b5eee4fe37b623b9907446dc32a0325]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Carlos]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[carlos.schults@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://carlosschults.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[10.0.2.19]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-14 13:31:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-14 16:31:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Outro uso interessante para tuplas é substituir o parâmetro de saída em métodos do tipo \"TryParse\".]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497457913.2959";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1497459676.7895";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Luan Nunes]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nunes.lfa@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[179.127.255.34]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-16 12:03:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-16 15:03:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Beautiful!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497625386.7699";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CHALLENGE: What does this code do?</title>
		<link>http://localhost:8080/?p=6706&#038;lang=en</link>
		<pubDate>Wed, 14 Jun 2017 13:56:24 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6706</guid>
		<description></description>
		<content:encoded><![CDATA[What should be the execution result of the following code?

<pre><code>using System;
using System.Threading.Tasks;

using static System.Console;
using static System.IO.File;

class Program
{
    static void Main(string[] args)
    {
        Run();
        ReadLine();
    }
    static void Run()
    {
        var task = ComputeFileLengthAsync(null);
        WriteLine(&quot;Computing file length&quot;);
        WriteLine(task.Result);
        WriteLine(&quot;done!&quot;);
    }

    static async Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
    {
        WriteLine(&quot;Before If&quot;);
        if (fileName == null)
        {
            WriteLine(&quot;Inside&quot;);
            throw new ArgumentNullException(nameof(fileName));
        }
        WriteLine(&quot;After&quot;);

        using (var fileStream = OpenText(fileName))
        {
            var content = await fileStream.ReadToEndAsync();
            return content.Length;
        }
    }
}</code></pre>

Hint: it will print <em>"Computing file length"</em> on the output.

<img src="http://localhost:8080/wp-content/uploads/2017/06/result.png" alt="" width="1103" height="639" class="alignnone size-full wp-image-6714" />

Now, can you figure out why? What implementation strategy could I follow to get the exception when calling the function?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6706</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 10:56:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 13:56:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[challenge-what-does-this-code-do-exceptions-on-async-methods]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="async"><![CDATA[async]]></category>
		<category domain="post_tag" nicename="challenge"><![CDATA[challenge]]></category>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_translations" nicename="pll_594141f76ad26"><![CDATA[pll_594141f76ad26]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[Exceptions on async methods]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-14-challenge-what-does-this-code-do-exceptions-on-async-methods.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[cbe8c0c367c6de99367133d8e19da33e1ff20e58]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[SOLUTION: What does this code do (Exceptions on async methods)? &#8211; Elemar JR]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.elemarjr.com/en/2017/06/solution-what-does-this-code-do-exceptions-on-async-methods/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[198.71.238.47]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-15 11:17:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-15 14:17:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Last post, I asked an explanation about the execution result of the following code. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1497536266.6737";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497536238.9916";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>DESAFIO: O que esse código faz?</title>
		<link>http://localhost:8080/?p=6711&#038;lang=pt</link>
		<pubDate>Wed, 14 Jun 2017 14:02:48 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6711</guid>
		<description></description>
		<content:encoded><![CDATA[Qual deveria ser o resultado da execução desse código?

<pre><code>using System;
using System.Threading.Tasks;

using static System.Console;
using static System.IO.File;

class Program
{
    static void Main(string[] args)
    {
        Run();
        ReadLine();
    }
    static void Run()
    {
        var task = ComputeFileLengthAsync(null);
        WriteLine(&quot;Computing file length&quot;);
        WriteLine(task.Result);
        WriteLine(&quot;done!&quot;);
    }

    static async Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
    {
        WriteLine(&quot;Before If&quot;);
        if (fileName == null)
        {
            WriteLine(&quot;Inside&quot;);
            throw new ArgumentNullException(nameof(fileName));
        }
        WriteLine(&quot;After&quot;);

        using (var fileStream = OpenText(fileName))
        {
            var content = await fileStream.ReadToEndAsync();
            return content.Length;
        }
    }
}</code></pre>

Dica: será impresso <em>"Computing file length"</em> no output.

<img src="http://localhost:8080/wp-content/uploads/2017/06/result.png" alt="" width="1103" height="639" class="alignnone size-full wp-image-6714" />

Você sabe explicar o porquê? Que estratégia de implementação eu poderia seguir se eu quiser ter a <em>exception</em> quando chamar a função?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6711</wp:post_id>
		<wp:post_date><![CDATA[2017-06-14 11:02:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-14 14:02:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[desafio-o-que-esse-codigo-faz-exceptions-em-metodos-marcados-com-async]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="async"><![CDATA[async]]></category>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="desafio"><![CDATA[desafio]]></category>
		<category domain="post_translations" nicename="pll_594141f76ad26"><![CDATA[pll_594141f76ad26]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[Exceptions em métodos marcados com async]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-14-desafio-o-que-esse-codigo-faz-exceptions-em-metodos-marcados-com-async.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[6edc5710c83a8a4a57da3dace5f54a58fb64225c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Alberto Monteiro]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[alberto.monteiro@live.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.104.125.42]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-14 11:30:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-14 14:30:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A task retornada pelo método ComputeFileLengthAsync só é iniciada quando você \"awaita\" ela na linha \" WriteLine(await task);\" por isso a exceção só ocorre depois de imprimir \"Computing file length\".

Uma forma de ter a exceção ocorrendo ao chamar o método ComputeFileLengthAsync, é retornar parte da execução envelopada em uma task, sendo assim, a parte inicial seria executada logo de cara, assim lançando a exceção e não seria impresso o \"Computing file length\".

Meu codigo ficou assim:

[csharp]
using System;
using System.Threading.Tasks;
using static System.Console;
using static System.IO.File;

namespace ConsoleApp1
{
    class Program
    {
        private static Task _task;

        static void Main(string[] args)
        {
            Run();
            ReadLine();
        }
        static async void Run()
        {
            _task = ComputeFileLengthAsync(null);
            WriteLine(&quot;Computing file length&quot;);
            _task.Start();
            WriteLine(await _task);
            WriteLine(&quot;done!&quot;);
        }

        static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
        {
            if (fileName == null)
            {
                throw new ArgumentNullException(nameof(fileName));
            }

            return new Task&lt;int&gt;(() =&gt;
            {
                using (var fileStream2 = OpenText(fileName))
                {
                    var content2 = fileStream2.ReadToEndAsync().Result;
                    return content2.Length;
                }
            });
        }
    }
}
[/csharp]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497450656.9785";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Luan Nunes]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nunes.lfa@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[179.127.255.34]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-14 11:50:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-14 14:50:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Concordo com o Alberto.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497451819.7621";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:13:"1497459673.67";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SOLUTION: What does this code do?</title>
		<link>http://localhost:8080/?p=6717&#038;lang=en</link>
		<pubDate>Thu, 15 Jun 2017 14:05:47 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6717</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.elemarjr.com/en/2017/06/challenge-what-does-this-code-do-exceptions-on-async-methods/">Last post</a>, I asked an explanation about the execution result of the following code.

<pre><code>using System;
using System.Threading.Tasks;
 
using static System.Console;
using static System.IO.File;
 
class Program
{
    static void Main(string[] args)
    {
        Run();
        ReadLine();
    }
    static void Run()
    {
        var task = ComputeFileLengthAsync(null);
        WriteLine(&quot;Computing file length&quot;);
        WriteLine(task.Result);
        WriteLine(&quot;done!&quot;);
    }
 
    static async Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
    {
        WriteLine(&quot;Before If&quot;);
        if (fileName == null)
        {
            WriteLine(&quot;Inside&quot;);
            throw new ArgumentNullException(nameof(fileName));
        }
        WriteLine(&quot;After&quot;);
 
        using (var fileStream = OpenText(fileName))
        {
            var content = await fileStream.ReadToEndAsync();
            return content.Length;
        }
    }
}
</code></pre>

Running it, we get this:

<img class="alignnone size-full wp-image-6714" src="http://localhost:8080/wp-content/uploads/2017/06/result.png" alt="" width="1103" height="639" />

The code starts executing when I call the function, but I just get the exception when I ask the task result.
<h3>Explanation</h3>
C# language was designed to provide a good coding experience for programmers who needs to write asynchronous programs. There are no explicit continuations in the code. A great effort was made to make async method looks normal, but there is no free lunch.

Under the hood, the compiler does the best possible to translate async methods in a very efficient manner. The compiler generates the following code (you don't need to know it to write async methods).

<pre><code>static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
{
    var sm = new ComputeFileLengthAsync_StateMachine
    {
        fileName = fileName,
        _builder = AsyncTaskMethodBuilder&lt;int&gt;.Create(),
        _state = -1
    };

    sm._builder.Start(ref sm);
    return sm._builder.Task;
}</code></pre>

As you can see, all the original implementation is gone. What we have is a code that creates an instance of a state machine, starting this state machine in the sequence.

Here is a similar implementation of the state machine that would be generated by the compiler.

<pre><code>[StructLayout(LayoutKind.Auto)]
public struct ComputeFileLengthAsync_StateMachine : IAsyncStateMachine
{
    public int _state;
    public AsyncTaskMethodBuilder&lt;int&gt; _builder;
    public string fileName;
    private StreamReader _fileStream;
    private TaskAwaiter&lt;string&gt; _awaiter;

    public void MoveNext()
    {
        int num = _state;
        int length;
        try
        {
            if (num != 0)
            {
                Console.WriteLine(&quot;Before If&quot;);
                if (fileName == null)
                {
                    Console.WriteLine(&quot;Inside&quot;);
                    throw new ArgumentNullException(&quot;fileName&quot;);
                }
                Console.WriteLine(&quot;After&quot;);
                _fileStream = File.OpenText(fileName);
            }
            try
            {
                TaskAwaiter&lt;string&gt; taskAwaiter;
                if (num != 0)
                {
                    taskAwaiter = _fileStream.ReadToEndAsync().GetAwaiter();
                    if (!taskAwaiter.IsCompleted)
                    {
                        num = (_state = 0);
                        _awaiter = taskAwaiter;
                        _builder.AwaitUnsafeOnCompleted(ref taskAwaiter, ref this);
                        return;
                    }
                }
                else
                {
                    taskAwaiter = _awaiter;
                    _awaiter = default(TaskAwaiter&lt;string&gt;);
                    num = (_state = -1);
                }
                string result = taskAwaiter.GetResult();
                length = result.Length;
            }
            finally
            {
                if (num &gt; 0)
                {
                    _fileStream?.Dispose();
                }
            }
        }
        catch (Exception exception)
        {
            _state = -2;
            _builder.SetException(exception);
            return;
        }
        _state = -2;
        _builder.SetResult(length);
    }

    [DebuggerHidden]
    public void SetStateMachine(IAsyncStateMachine stateMachine)
    {
        _builder.SetStateMachine(stateMachine);
    }
}</code></pre>

<em>AsyncTaskMethodBuilder</em> orchestrates the execution of this state machine. It's pretty nice to see how exceptions are handled, right?!

An essential detail to observe is the execution status verification of the potentially asynchronous code (IsCompleted property) as soon as possible. The strategy adopted here gets the best performance when there is no reason to wait.

Also, a practical lesson to learn here is that Microsoft chooses mutable structs frequently, under the hood, to ensure the best performance (structs are used in the implementation of enumerators too). Structs are cheaper than classes (no heap, no GC).
<h3>How to get the exception sooner</h3>
Exceptions thrown by method arguments validation code should be considered when the method is called. This is not what happens in my original implementation.

The following code was proposed by <a href="https://twitter.com/aibertomonteiro">Alberto Monteiro</a> in the comments of the <a href="http://www.elemarjr.com/pt/2017/06/desafio-o-que-esse-codigo-faz-exceptions-em-metodos-marcados-com-async/">Portuguese version of the post that proposes the challenge</a> and solves the problem.

<pre><code>static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
{
    Console.WriteLine(&quot;Before If&quot;);
    if (fileName == null)
    {
        Console.WriteLine(&quot;Inside&quot;);
        throw new ArgumentNullException(&quot;fileName&quot;);
    }
    Console.WriteLine(&quot;After&quot;);

    return new Task&lt;int&gt;(() =&gt;
    {
        using (var fileStream2 = OpenText(fileName))
        {
            var content2 = fileStream2.ReadToEndAsync().Result;
            return content2.Length;
        }
    });
}</code></pre>

Here, there is no async modifier, so, the compiler will not touch the code.

Another alternative would be to have two methods, one public with verification, another private with the implementation.

<pre><code>public static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
{
    Console.WriteLine(&quot;Before If&quot;);
    if (fileName == null)
    {
        Console.WriteLine(&quot;Inside&quot;);
        throw new ArgumentNullException(&quot;fileName&quot;);
    }
    Console.WriteLine(&quot;After&quot;);

    return ComputeFileLengthAsyncImpl(fileName);
}

private static async Task&lt;int&gt; ComputeFileLengthAsyncImpl(string fileName)
{
    using (var fileStream2 = OpenText(fileName))
    {
        var content2 = await fileStream2.ReadToEndAsync();
        return content2.Length;
    }
}</code></pre>

We could have a local function as well.

<pre><code>public static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
{
    Console.WriteLine(&quot;Before If&quot;);
    if (fileName == null)
    {
        Console.WriteLine(&quot;Inside&quot;);
        throw new ArgumentNullException(&quot;fileName&quot;);
    }
    Console.WriteLine(&quot;After&quot;);

    async Task&lt;int&gt; ComputeFileLengthAsyncImpl()
    {
        using (var fileStream2 = OpenText(fileName))
        {
            var content2 = await fileStream2.ReadToEndAsync();
            return content2.Length;
        }
    }

    return ComputeFileLengthAsyncImpl();
}</code></pre>

<h3>Conclusion</h3>
Microsoft did a great work making asynchronous code easier to write. But, sometimes, we have some undesirable side-effects. It's important to know the basics of how the compiler helps us to avoid surprises.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6717</wp:post_id>
		<wp:post_date><![CDATA[2017-06-15 11:05:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-15 14:05:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[solution-what-does-this-code-do-exceptions-on-async-methods]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="async"><![CDATA[async]]></category>
		<category domain="post_tag" nicename="challenge"><![CDATA[challenge]]></category>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_translations" nicename="pll_594297e3e67f7"><![CDATA[pll_594297e3e67f7]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[Exceptions on async methods]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-15-solution-what-does-this-code-do-exceptions-on-async-methods.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[31fc652156d3904d67d0943daed25ad59f538129]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SOLUÇÃO: O que esse código faz?</title>
		<link>http://localhost:8080/?p=6720&#038;lang=pt</link>
		<pubDate>Thu, 15 Jun 2017 14:21:23 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6720</guid>
		<description></description>
		<content:encoded><![CDATA[No <a href="http://www.elemarjr.com/pt/2017/06/desafio-o-que-esse-codigo-faz-exceptions-em-metodos-marcados-com-async/">último post</a>, solicitei uma explicação para o resultado da execução do código que segue:

<pre><code>using System;
using System.Threading.Tasks;
 
using static System.Console;
using static System.IO.File;
 
class Program
{
    static void Main(string[] args)
    {
        Run();
        ReadLine();
    }
    static void Run()
    {
        var task = ComputeFileLengthAsync(null);
        WriteLine(&quot;Computing file length&quot;);
        WriteLine(task.Result);
        WriteLine(&quot;done!&quot;);
    }
 
    static async Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
    {
        WriteLine(&quot;Before If&quot;);
        if (fileName == null)
        {
            WriteLine(&quot;Inside&quot;);
            throw new ArgumentNullException(nameof(fileName));
        }
        WriteLine(&quot;After&quot;);
 
        using (var fileStream = OpenText(fileName))
        {
            var content = await fileStream.ReadToEndAsync();
            return content.Length;
        }
    }
}
</code></pre>

Eis o resultado da execução:

<img class="alignnone size-full wp-image-6714" src="http://localhost:8080/wp-content/uploads/2017/06/result.png" alt="" width="1103" height="639" />

Tenho execução normal, mas somente recebo a exceção quando solicito o resultado da task.

<h3>Explicação</h3>
C# foi projetada para proporcionar uma boa experiência de codificação para aqueles que precisam escrever código assíncrono. Não há <em>continuations</em> explícitas no código. Um grande esforço foi feito para fazer com que métodos marcados com <em>async</em> parecessem normais, mas nada é de graça.

Por baixo do capô, o compilador faz o melhor possível para traduzir métodos marcados com async de forma eficiente. O código que segue seria gerado pelo compilador.

<pre><code>static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
{
    var sm = new ComputeFileLengthAsync_StateMachine
    {
        fileName = fileName,
        _builder = AsyncTaskMethodBuilder&lt;int&gt;.Create(),
        _state = -1
    };

    sm._builder.Start(ref sm);
    return sm._builder.Task;
}</code></pre>

Como você pode ver, o código original não está aqui. O que temos é um código que cria uma instância de uma máquina de estados e inicia sua execução.

Aqui, uma implementação similar a gerada pelo compilador para a máquina de estados.

<pre><code>[StructLayout(LayoutKind.Auto)]
public struct ComputeFileLengthAsync_StateMachine : IAsyncStateMachine
{
    public int _state;
    public AsyncTaskMethodBuilder&lt;int&gt; _builder;
    public string fileName;
    private StreamReader _fileStream;
    private TaskAwaiter&lt;string&gt; _awaiter;

    public void MoveNext()
    {
        int num = _state;
        int length;
        try
        {
            if (num != 0)
            {
                Console.WriteLine(&quot;Before If&quot;);
                if (fileName == null)
                {
                    Console.WriteLine(&quot;Inside&quot;);
                    throw new ArgumentNullException(&quot;fileName&quot;);
                }
                Console.WriteLine(&quot;After&quot;);
                _fileStream = File.OpenText(fileName);
            }
            try
            {
                TaskAwaiter&lt;string&gt; taskAwaiter;
                if (num != 0)
                {
                    taskAwaiter = _fileStream.ReadToEndAsync().GetAwaiter();
                    if (!taskAwaiter.IsCompleted)
                    {
                        num = (_state = 0);
                        _awaiter = taskAwaiter;
                        _builder.AwaitUnsafeOnCompleted(ref taskAwaiter, ref this);
                        return;
                    }
                }
                else
                {
                    taskAwaiter = _awaiter;
                    _awaiter = default(TaskAwaiter&lt;string&gt;);
                    num = (_state = -1);
                }
                string result = taskAwaiter.GetResult();
                length = result.Length;
            }
            finally
            {
                if (num &gt; 0)
                {
                    _fileStream?.Dispose();
                }
            }
        }
        catch (Exception exception)
        {
            _state = -2;
            _builder.SetException(exception);
            return;
        }
        _state = -2;
        _builder.SetResult(length);
    }

    [DebuggerHidden]
    public void SetStateMachine(IAsyncStateMachine stateMachine)
    {
        _builder.SetStateMachine(stateMachine);
    }
}</code></pre>

<em>AsyncTaskMethodBuilder</em> coordena a execução da máquina de estados. É interessante observar como exceções são tratadas.

Um detalhe essencial por observar é q verificação do status de execução do código potencialmente assíncrono (através da propriedade IsCompleted), o mais cedo possível. Esta estratégia garante a melhor performance quando não há o que esperar.

Também é interessante aprender o uso que a Microsoft faz de <em>structs</em> mutáveis para garantir a melhor performance (structs mutáveis também são usadas na implementação de enumerators). Structs são mais baratas computacionalmente que classes (não há uso do Heap e não há impacto para o GC).

<h3>Como receber a exceção mais cedo</h3>
Exceptions disparadas na verificação de argumentos deveriam ser tratadas quando o método é chamado. Isso não é o que ocorre na minha implementação original.

O código que segue foi proposto pelo <a href="https://twitter.com/aibertomonteiro">Alberto Monteiro</a> nos comentários do <a href="http://www.elemarjr.com/pt/2017/06/desafio-o-que-esse-codigo-faz-exceptions-em-metodos-marcados-com-async/">post anterior</a> e resolve o problema.
<pre><code>static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
{
    Console.WriteLine(&quot;Before If&quot;);
    if (fileName == null)
    {
        Console.WriteLine(&quot;Inside&quot;);
        throw new ArgumentNullException(&quot;fileName&quot;);
    }
    Console.WriteLine(&quot;After&quot;);

    return new Task&lt;int&gt;(() =&gt;
    {
        using (var fileStream2 = OpenText(fileName))
        {
            var content2 = fileStream2.ReadToEndAsync().Result;
            return content2.Length;
        }
    });
}</code></pre>

Aqui, não há uso do moficador async, então o compilador não irá mexer nesse código.

Outra alternativa é ter dois métodos. Um público que faz a verificação e outro privado apenas com a implementação.

<pre><code>public static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
{
    Console.WriteLine(&quot;Before If&quot;);
    if (fileName == null)
    {
        Console.WriteLine(&quot;Inside&quot;);
        throw new ArgumentNullException(&quot;fileName&quot;);
    }
    Console.WriteLine(&quot;After&quot;);

    return ComputeFileLengthAsyncImpl(fileName);
}

private static async Task&lt;int&gt; ComputeFileLengthAsyncImpl(string fileName)
{
    using (var fileStream2 = OpenText(fileName))
    {
        var content2 = await fileStream2.ReadToEndAsync();
        return content2.Length;
    }
}</code></pre>

Poderíamos ter uma função localtambém..

<pre><code>public static Task&lt;int&gt; ComputeFileLengthAsync(string fileName)
{
    Console.WriteLine(&quot;Before If&quot;);
    if (fileName == null)
    {
        Console.WriteLine(&quot;Inside&quot;);
        throw new ArgumentNullException(&quot;fileName&quot;);
    }
    Console.WriteLine(&quot;After&quot;);

    async Task&lt;int&gt; ComputeFileLengthAsyncImpl()
    {
        using (var fileStream2 = OpenText(fileName))
        {
            var content2 = await fileStream2.ReadToEndAsync();
            return content2.Length;
        }
    }

    return ComputeFileLengthAsyncImpl();
}</code></pre>

<h3>Conclusão</h3>
Microsoft fez um grande trabalho tornando código assíncrono mais fácil de escrever. Entretanto, algumas vezes, temos alguns efeitos colaterais indesejados. É importante entender o básico de como o compilador nos ajuda para evitar surpresas.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6720</wp:post_id>
		<wp:post_date><![CDATA[2017-06-15 11:21:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-15 14:21:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[solucao-o-que-esse-codigo-faz-exceptions-em-metodos-marcados-com-async]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="async"><![CDATA[async]]></category>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="desafio"><![CDATA[desafio]]></category>
		<category domain="post_translations" nicename="pll_594297e3e67f7"><![CDATA[pll_594297e3e67f7]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[Exceptions em métodos marcados com async]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-15-solucao-o-que-esse-codigo-faz-exceptions-em-metodos-marcados-com-async.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[cef19d4a9a924c86eff983686325038c2972f411]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[Jr. Pacheco]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[boloboca@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[187.113.56.195]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-15 11:58:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-15 14:58:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muito bacana essa analise.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497538715.9806";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1497562845.4243";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Cleber Castilho]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cleber.sbc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[189.20.205.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-20 11:58:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-20 14:58:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Elemar, uma outra possível solução não seria apenas tornar o método Run() também assincrono e \"awaitar\" nele o método ComputeFileLengthAsync() ?
Dessa forma a execução aguardaria o resultado e a exception seria exibida antes do \"Computing file length\".

[csharp]
static async void Run()
{
    var result = await ComputeFileLengthAsync(null);
    WriteLine(&quot;Computing file length&quot;);
    WriteLine(result);
    WriteLine(&quot;done!&quot;);
}
[/csharp]
Valeu!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1498853547.7334";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497970726.4248";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Am I crazy? R looks like Javascript?</title>
		<link>http://localhost:8080/?p=6723&#038;lang=en</link>
		<pubDate>Thu, 15 Jun 2017 21:51:54 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6723</guid>
		<description></description>
		<content:encoded><![CDATA[So, I decided to learn how to code using R. That's something I wrote:

<pre><code class="language-r">## defining a function
makeCacheMatrix &lt;- function(x = matrix()) {
  ## internal state
  inv &lt;- NULL

  ## defining some closures
  set &lt;- function(y) {
    x &lt;&lt;- y
    inv &lt;&lt;- NULL
  }
  get &lt;- function() x
  setinverse &lt;- function(inverse = matrix()) inv &lt;&lt;- inverse
  getinverse &lt;- function() inv
  
  ## returning functions as an object 
  list(
     set = set, 
     get = get, 
     setinverse = setinverse, 
     getinverse = getinverse
  )
}</code></pre>

Am I crazy? This code remembers me of JavaScript. Do you agree with that?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6723</wp:post_id>
		<wp:post_date><![CDATA[2017-06-15 18:51:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-15 21:51:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[am-i-crazy-r-looks-like-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="data-science-en"><![CDATA[data science]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="javascript-en"><![CDATA[Javascript]]></category>
		<category domain="post_translations" nicename="pll_594302c71ae85"><![CDATA[pll_594302c71ae85]]></category>
		<category domain="post_tag" nicename="r-en"><![CDATA[R]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/internet-1895376_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6725]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-15-am-i-crazy-r-looks-like-javascript.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[b5c05bf19dba1082d64f36ef315e997a293c5922]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[Judah Gabriel Himango]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[judahgabriel@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://debuggerdotbreak.judahgabriel.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[70.97.238.234]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-19 23:49:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-20 02:49:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool! I write a lot of JS in my day job; R bears a resemblance.

p.s. I\'m enjoying your flurry of English blog posts.

p.p.s. English tip: That last sentence sounds a little broken. Might be better phrased: \"This code reminds me of JavaScript.\"

Hope to see you again, my friend. Peace]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:14:"1497954923.935";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1497926972.5628";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[elemarjr]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[elemarjr@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.79.0.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-20 07:45:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-20 10:45:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello friend,

I decided to blog in English to improve my English skills. Besides of that, I really enjoy the idea of sharing my thoughts with friends like you.

Thanks. I just changed the post.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>45</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1497955525.5339";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Estou louco? Código R realmente parece Javascript?</title>
		<link>http://localhost:8080/?p=6731&#038;lang=pt</link>
		<pubDate>Thu, 15 Jun 2017 21:57:26 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6731</guid>
		<description></description>
		<content:encoded><![CDATA[Decidi aprender a programar com R. Aqui está algo que escrevi.
<pre><code class="language-r">## defining a function
makeCacheMatrix &lt;- function(x = matrix()) {
  ## internal state
  inv &lt;- NULL

  ## defining some closures
  set &lt;- function(y) {
    x &lt;&lt;- y
    inv &lt;&lt;- NULL
  }
  get &lt;- function() x
  setinverse &lt;- function(inverse = matrix()) inv &lt;&lt;- inverse
  getinverse &lt;- function() inv
  
  ## returning functions as an object 
  list(
     set = set, 
     get = get, 
     setinverse = setinverse, 
     getinverse = getinverse
  )
}</code></pre>
Estou mesmo louco? Isso realmente lembra Javascript! Você concorda?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6731</wp:post_id>
		<wp:post_date><![CDATA[2017-06-15 18:57:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-15 21:57:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[estou-louco-codigo-r-realmente-parece-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="data-science"><![CDATA[data science]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_translations" nicename="pll_594302c71ae85"><![CDATA[pll_594302c71ae85]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[R]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6725]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/internet-1895376_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-15-estou-louco-codigo-r-realmente-parece-javascript.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[1b9e508752e236ad98743f96dabf63a47550011d]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[Bruno Bernardes da Costa]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[b.b.da.costa@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[191.34.36.127]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-09-21 13:29:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-09-21 16:29:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Parece uma mistura de todas as notações do Javascript, como se eu usasse metade de arrow functions e metade da sintaxe padrão.

Demorei para entender aquela função inline do get]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1506303948.4728";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1506011392.2249";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Querying multiple fields easily using RavenDB</title>
		<link>http://localhost:8080/?p=6734&#038;lang=en</link>
		<pubDate>Mon, 19 Jun 2017 15:08:39 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6734</guid>
		<description></description>
		<content:encoded><![CDATA[This one comes from <a href="https://github.com/ravendb/book/releases">Ayende's book</a> about RavenDB.

If you want to learn RavenDB basics, I would recommend you to subscribe <a href="https://ravendb.net/learn">RavenDB bootcamp</a> (it's free). But, if you want a deep dive, Ayende's book is an excellent resource.

Consider this document:

<pre><code>{
    &quot;Company&quot;: &quot;companies/62&quot;,
    &quot;Employee&quot;: &quot;employees/7&quot;,
    &quot;OrderedAt&quot;: &quot;1997-01-07T00:00:00.0000000&quot;,
    &quot;RequireAt&quot;: &quot;1997-02-18T00:00:00.0000000&quot;,
    &quot;ShippedAt&quot;: &quot;1997-01-13T00:00:00.0000000&quot;,
    &quot;ShipTo&quot;: {
        &quot;Line1&quot;: &quot;Alameda dos Can&agrave;rios, 891&quot;,
        &quot;Line2&quot;: null,
        &quot;City&quot;: &quot;Sao Paulo&quot;,
        &quot;Region&quot;: &quot;SP&quot;,
        &quot;PostalCode&quot;: &quot;05487-020&quot;,
        &quot;Country&quot;: &quot;Brazil&quot;
    },
    &quot;ShipVia&quot;: &quot;shippers/1&quot;,
    &quot;Freight&quot;: 108.04,
    &quot;Lines&quot;: [
        {
            &quot;Product&quot;: &quot;products/1&quot;,
            &quot;ProductName&quot;: &quot;Chai&quot;,
            &quot;PricePerUnit&quot;: 14.4,
            &quot;Quantity&quot;: 10,
            &quot;Discount&quot;: 0
        },
        {
            &quot;Product&quot;: &quot;products/21&quot;,
            &quot;ProductName&quot;: &quot;Sir Rodney's Scones&quot;,
            &quot;PricePerUnit&quot;: 8,
            &quot;Quantity&quot;: 30,
            &quot;Discount&quot;: 0.1
        },
        {
            &quot;Product&quot;: &quot;products/28&quot;,
            &quot;ProductName&quot;: &quot;R&ouml;ssle Sauerkraut&quot;,
            &quot;PricePerUnit&quot;: 36.4,
            &quot;Quantity&quot;: 42,
            &quot;Discount&quot;: 0.1
        },
        {
            &quot;Product&quot;: &quot;products/36&quot;,
            &quot;ProductName&quot;: &quot;Inlagd Sill&quot;,
            &quot;PricePerUnit&quot;: 15.2,
            &quot;Quantity&quot;: 5,
            &quot;Discount&quot;: 0.1
        },
        {
            &quot;Product&quot;: &quot;products/40&quot;,
            &quot;ProductName&quot;: &quot;Boston Crab Meat&quot;,
            &quot;PricePerUnit&quot;: 14.7,
            &quot;Quantity&quot;: 2,
            &quot;Discount&quot;: 0.1
        }
    ]
}</code></pre>

What if we want to get all orders that have a particular product? How would be the query?

<pre><code>var q =
    from order in session.Query&lt;Order&gt;()
    where order.Lines.Any(x =&gt; x.Product == &quot;products/1&quot;)
    select order;</code></pre>


Pretty simple, huh?! But, as you know, all RavenDB queries will use an index. If there is no index to support a query, RavenDB will generate one automatically for you.

Here is the map of the index created by RavenDB to support this query.

<pre><code>from doc in docs.Orders
select new {
	Lines_Product = (
		from docLinesItem in ((IEnumerable&lt;dynamic&gt;)doc.Lines).DefaultIfEmpty()
		select docLinesItem.Product).ToArray()
}</code></pre>

The interesting thing here is the use of an array of strings. When RavenDB encounters a collection in the index entry fields, it is actually indexing that field multiple times. Another important idea is that RavenDB will flatten out collections.

So, let's define an index ourselves. 

<pre><code>public class Orders_SearchByProduct :
    AbstractIndexCreationTask&lt;Order, Orders_SearchByProduct.QueryModel&gt;
{
    public class QueryModel
    {
        public string Query;
    }

    public Orders_SearchByProduct()
    {
        Map = orders =&gt;
            from order in orders
            select new
            {
                Query = new object[]
                {
                    order.Lines.Select(p =&gt; p.Product).ToArray(),
                    order.Lines.Select(p =&gt; p.ProductName).ToArray()
                }
            };
    }
}</code></pre> 
Now we can search orders that have a specific product considering his Id or name.

This is how we do the query.

<pre><code>using (var session = DocumentStoreHolder.Store.OpenSession())
{
    var q =
        session.Query&lt;Orders_SearchByProduct.QueryModel,Orders_SearchByProduct&gt;()
            .Where(o =&gt; o.Query == &quot;Manjimup Dried Apples&quot;)
            .OfType&lt;Order&gt;();
                    
    foreach (var order in q.ToList())
    {
        Console.WriteLine(order.Id);
    }
}</code></pre>

Here we are using the <em>OfType</em> operator to change the result to the appopriate returned type.

That's all.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6734</wp:post_id>
		<wp:post_date><![CDATA[2017-06-19 12:08:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-19 15:08:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[querying-multiple-fields-easily-using-ravendb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="indexes"><![CDATA[indexes]]></category>
		<category domain="post_tag" nicename="queries"><![CDATA[queries]]></category>
		<category domain="post_tag" nicename="ravendb"><![CDATA[ravendb]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6560]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/05/sunset-2247726_1920.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-19-querying-multiple-fields-easily-using-ravendb.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[74a756c565bfbb2b945165fe4dea95f1549f6a1e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Realizando consultas com múltiplos campos facilmente usando RavenDB</title>
		<link>http://localhost:8080/?p=6740&#038;lang=pt</link>
		<pubDate>Mon, 19 Jun 2017 15:23:13 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6740</guid>
		<description></description>
		<content:encoded><![CDATA[Este exemplo é inspirado no <a href="https://github.com/ravendb/book/releases">livro do Ayende</a>

Se você deseja aprender RavenDB, recomendo que se inscreva no <a href="https://ravendb.net/learn">RavenDB bootcamp</a> (é grátis). Se já conhece RavenDB, então o livro do Ayende é um excelente recurso.

Considere este documento:

<pre><code>{
    &quot;Company&quot;: &quot;companies/62&quot;,
    &quot;Employee&quot;: &quot;employees/7&quot;,
    &quot;OrderedAt&quot;: &quot;1997-01-07T00:00:00.0000000&quot;,
    &quot;RequireAt&quot;: &quot;1997-02-18T00:00:00.0000000&quot;,
    &quot;ShippedAt&quot;: &quot;1997-01-13T00:00:00.0000000&quot;,
    &quot;ShipTo&quot;: {
        &quot;Line1&quot;: &quot;Alameda dos Can&agrave;rios, 891&quot;,
        &quot;Line2&quot;: null,
        &quot;City&quot;: &quot;Sao Paulo&quot;,
        &quot;Region&quot;: &quot;SP&quot;,
        &quot;PostalCode&quot;: &quot;05487-020&quot;,
        &quot;Country&quot;: &quot;Brazil&quot;
    },
    &quot;ShipVia&quot;: &quot;shippers/1&quot;,
    &quot;Freight&quot;: 108.04,
    &quot;Lines&quot;: [
        {
            &quot;Product&quot;: &quot;products/1&quot;,
            &quot;ProductName&quot;: &quot;Chai&quot;,
            &quot;PricePerUnit&quot;: 14.4,
            &quot;Quantity&quot;: 10,
            &quot;Discount&quot;: 0
        },
        {
            &quot;Product&quot;: &quot;products/21&quot;,
            &quot;ProductName&quot;: &quot;Sir Rodney's Scones&quot;,
            &quot;PricePerUnit&quot;: 8,
            &quot;Quantity&quot;: 30,
            &quot;Discount&quot;: 0.1
        },
        {
            &quot;Product&quot;: &quot;products/28&quot;,
            &quot;ProductName&quot;: &quot;R&ouml;ssle Sauerkraut&quot;,
            &quot;PricePerUnit&quot;: 36.4,
            &quot;Quantity&quot;: 42,
            &quot;Discount&quot;: 0.1
        },
        {
            &quot;Product&quot;: &quot;products/36&quot;,
            &quot;ProductName&quot;: &quot;Inlagd Sill&quot;,
            &quot;PricePerUnit&quot;: 15.2,
            &quot;Quantity&quot;: 5,
            &quot;Discount&quot;: 0.1
        },
        {
            &quot;Product&quot;: &quot;products/40&quot;,
            &quot;ProductName&quot;: &quot;Boston Crab Meat&quot;,
            &quot;PricePerUnit&quot;: 14.7,
            &quot;Quantity&quot;: 2,
            &quot;Discount&quot;: 0.1
        }
    ]
}</code></pre>

O que fazer se desejarmos obter todos os pedidos contendo um produto em particular? Como seria a consulta?

<pre><code>var q =
    from order in session.Query&lt;Order&gt;()
    where order.Lines.Any(x =&gt; x.Product == &quot;products/1&quot;)
    select order;</code></pre>

Simples, não é?! Mas, como você save, todos as consultas ao RavenDB usam um índice. Se não há um índice para a consulta, RavenDB cria um automaticamente.

Aqui está o mapeamento do índice criado pelo RavenDB para essa consulta.

<pre><code>from doc in docs.Orders
select new {
	Lines_Product = (
		from docLinesItem in ((IEnumerable&lt;dynamic&gt;)doc.Lines).DefaultIfEmpty()
		select docLinesItem.Product).ToArray()
}</code></pre>

A coisa interessante aqui é o uso de um array de strings. Quando RavenDB encontra uma coleção em um campo de índice, a indexação ocorre múltiplas vezes. Outro conceito importante é que o RavenDB irá "achatar" todas as coleções.

Então, vamos definir um índice nós mesmos. 
<pre><code>public class Orders_SearchByProduct :
    AbstractIndexCreationTask&lt;Order, Orders_SearchByProduct.QueryModel&gt;
{
    public class QueryModel
    {
        public string Query;
    }

    public Orders_SearchByProduct()
    {
        Map = orders =&gt;
            from order in orders
            select new
            {
                Query = new object[]
                {
                    order.Lines.Select(p =&gt; p.Product).ToArray(),
                    order.Lines.Select(p =&gt; p.ProductName).ToArray()
                }
            };
    }
}</code></pre> 

Agora, podemos procurar pedidos que contenham um produto em específico considerando tanto o Id quanto o nome. Eis um exemplo:

<pre><code>using (var session = DocumentStoreHolder.Store.OpenSession())
{
    var q =
        session.Query&lt;Orders_SearchByProduct.QueryModel,Orders_SearchByProduct&gt;()
            .Where(o =&gt; o.Query == &quot;Manjimup Dried Apples&quot;)
            .OfType&lt;Order&gt;();
                    
    foreach (var order in q.ToList())
    {
        Console.WriteLine(order.Id);
    }
}</code></pre>

O operador <em>OfType</em> é usado para mudar o tipo do resultado.

Era isso.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6740</wp:post_id>
		<wp:post_date><![CDATA[2017-06-19 12:23:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-19 15:23:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[realizando-consultas-com-multiplos-campos-facilmente-usando-ravendb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="index"><![CDATA[index]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="queries-pt"><![CDATA[queries]]></category>
		<category domain="post_tag" nicename="ravendb-pt"><![CDATA[ravendb]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6560]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/05/sunset-2247726_1920-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-19-realizando-consultas-com-multiplos-campos-facilmente-usando-ravendb.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[b36e6c3b5163f3564ce8582276cc82e0e8453ee3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Almir Bispo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gibroh_webmaster@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://adltecnologia.blogspot.com.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[200.196.46.199]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-30 15:35:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-30 18:35:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Olá Magnífico.Observando no google por banco de dados ,achei este seu artigo.Muito bem !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1498853583.3542";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1498847732.6446";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Roslyn performance lessons</title>
		<link>http://localhost:8080/?p=6742&#038;lang=en</link>
		<pubDate>Mon, 19 Jun 2017 21:01:41 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6742</guid>
		<description></description>
		<content:encoded><![CDATA[When you think about Roslyn source code, you should think about performance-oriented design. I would like to share some performance techniques and coding practices I have been learning from Roslyn source code, so I decided to blog about it.

Let's start with *amazing* <a href="https://github.com/dotnet/roslyn/blob/614299ff83da9959fa07131c6d0ffbc58873b6ae/src/Dependencies/PooledObjects/ObjectPool%601.cs">ObjectPool</a>. The ObjectPool is a type used in the Roslyn C# compiler to reuse frequently used objects which would normally get instantiated up and garbage collected very often. This reduces the amount and size of garbage collection operations which have to happen.

<pre><code>
/// &lt;summary&gt;
/// Generic implementation of object pooling pattern with predefined pool size limit. The main
/// purpose is that limited number of frequently used objects can be kept in the pool for
/// further recycling.
/// 
/// Notes: 
/// 1) it is not the goal to keep all returned objects. Pool is not meant for storage. If there
///    is no space in the pool, extra returned objects will be dropped.
/// 
/// 2) it is implied that if object was obtained from a pool, the caller will return it back in
///    a relatively short time. Keeping checked out objects for long durations is ok, but 
///    reduces usefulness of pooling. Just new up your own.
/// 
/// Not returning objects to the pool in not detrimental to the pool's work, but is a bad practice. 
/// Rationale: 
///    If there is no intent for reusing the object, do not use pool - just use &quot;new&quot;. 
/// &lt;/summary&gt;
</code></pre>

Nice code comments, right?  I just love this "not so formal" commenting style that provides useful information about what's going on.

<pre><code>
internal class ObjectPool&lt;T&gt; where T : class
{
    [DebuggerDisplay(&quot;{Value,nq}&quot;)]
    private struct Element
    {
        internal T Value;
    }

    /// &lt;remarks&gt;
    /// Not using System.Func{T} because this file is linked into the (debugger) Formatter,
    /// which does not have that type (since it compiles against .NET 2.0).
    /// &lt;/remarks&gt;
    internal delegate T Factory();

    // Storage for the pool objects. The first item is stored in a dedicated field because we
    // expect to be able to satisfy most requests from it.
    private T _firstItem;
    private readonly Element[] _items;
</code></pre>

Roslyn wraps T inside a struct! The idea here is to avoid performance problems when setting array items that are reference types. There is no need to check at runtime if the type of the object is compatible with the type of the array (Please note that arrays are variant on the CLR).

<pre><code>
internal ObjectPool(Factory factory)
    : this(factory, Environment.ProcessorCount * 2)
{ }

internal ObjectPool(Factory factory, int size)
{
    Debug.Assert(size &gt;= 1);
    _factory = factory;
    _items = new Element[size - 1];
}

private T CreateInstance()
{
    var inst = _factory();
    return inst;
}
</code></pre>

ObjectPool is an internal type. So, it is natural to have "lightweight validations." By default, the <em>Debug.Assert</em> method works only in debug builds. We will have no validations in release builds!

<pre><code>/// &lt;summary&gt;
/// Produces an instance.
/// &lt;/summary&gt;
/// &lt;remarks&gt;
/// Search strategy is a simple linear probing which is chosen for it cache-friendliness.
/// Note that Free will try to store recycled objects close to the start thus statistically 
/// reducing how far we will typically search.
/// &lt;/remarks&gt;
internal T Allocate()
{
    // PERF: Examine the first element. If that fails, AllocateSlow will look at the remaining elements.
    // Note that the initial read is optimistically not synchronized. That is intentional. 
    // We will interlock only when we have a candidate. in a worst case we may miss some
    // recently returned objects. Not a big deal.
    T inst = _firstItem;
    if (inst == null || inst != Interlocked.CompareExchange(ref _firstItem, null, inst))
    {
        inst = AllocateSlow();
    }

    return inst;
}

private T AllocateSlow()
{
    var items = _items;

    for (int i = 0; i &lt; items.Length; i++)
    {
        // Note that the initial read is optimistically not synchronized. That is intentional. 
        // We will interlock only when we have a candidate. in a worst case we may miss some
        // recently returned objects. Not a big deal.
        T inst = items[i].Value;
        if (inst != null)
        {
            if (inst == Interlocked.CompareExchange(ref items[i].Value, null, inst))
            {
                return inst;
            }
        }
    }

    return CreateInstance();
}
</code></pre>

Working with values stored directly in fields is faster than with arrays. Because of that, we have a dedicated field here which should be enough most of the time.

Interlocked is used only at the last responsible moment.


<pre><code>/// &lt;summary&gt;
/// Returns objects to the pool.
/// &lt;/summary&gt;

/// &lt;remarks&gt;
/// Search strategy is a simple linear probing which is chosen for it cache-friendliness.
/// Note that Free will try to store recycled objects close to the start thus statistically 
/// reducing how far we will typically search in Allocate.
/// &lt;/remarks&gt;
internal void Free(T obj)
{
    Validate(obj);
    ForgetTrackedObject(obj);

    if (_firstItem == null)
    {
        // Intentionally not using interlocked here. 
        // In a worst case scenario two objects may be stored into same slot.
        // It is very unlikely to happen and will only mean that one of the objects will get collected.
        _firstItem = obj;
    }
    else
    {
        FreeSlow(obj);
    }
}

private void FreeSlow(T obj)
{
    var items = _items;
    for (int i = 0; i &lt; items.Length; i++)
    {
        if (items[i].Value == null)
        {
            // Intentionally not using interlocked here. 
            // In a worst case scenario two objects may be stored into same slot.
            // It is very unlikely to happen and will only mean that one of the objects will get collected.
            items[i].Value = obj;
            break;
        }
    }
}</code></pre>

No concurrency checks! If something gets lost, that is ok! Like the comments are saying, it is improbable to happen. So, it is cheaper to create a new instance if needed than trying to avoid concurrent access.

Note that Free will try to store recycled objects close to the start of the array - this makes the allocating process even faster.

<h3>Using it!</h3>

ObjectPool is a low-level concept implementation. Here is a very interesting use case.

<pre><code>
/// &lt;summary&gt;
/// The usage is:
///        var inst = PooledStringBuilder.GetInstance();
///        var sb = inst.builder;
///        ... Do Stuff...
///        ... sb.ToString() ...
///        inst.Free();
/// &lt;/summary&gt;
internal class PooledStringBuilder
{
    public readonly StringBuilder Builder = new StringBuilder();
    private readonly ObjectPool&lt;PooledStringBuilder&gt; _pool;

    private PooledStringBuilder(ObjectPool&lt;PooledStringBuilder&gt; pool)
    {
        Debug.Assert(pool != null);
        _pool = pool;
    }

    public int Length
    {
        get { return this.Builder.Length; }
    }

    public void Free()
    {
        var builder = this.Builder;

        // do not store builders that are too large.
        if (builder.Capacity &lt;= 1024)
        {
            builder.Clear();
            _pool.Free(this);
        }
        else
        {
            _pool.ForgetTrackedObject(this);
        }
    }

    [System.Obsolete(&quot;Consider calling ToStringAndFree instead.&quot;)]
    public new string ToString()
    {
        return this.Builder.ToString();
    }

    public string ToStringAndFree()
    {
        string result = this.Builder.ToString();
        this.Free();

        return result;
    }

    public string ToStringAndFree(int startIndex, int length)
    {
        string result = this.Builder.ToString(startIndex, length);
        this.Free();

        return result;
    }

    // global pool
    private static readonly ObjectPool&lt;PooledStringBuilder&gt; s_poolInstance = CreatePool();

    // if someone needs to create a private pool;
    /// &lt;summary&gt;
    /// If someone need to create a private pool
    /// &lt;/summary&gt;
    /// &lt;param name=&quot;size&quot;&gt;The size of the pool.&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public static ObjectPool&lt;PooledStringBuilder&gt; CreatePool(int size = 32)
    {
        ObjectPool&lt;PooledStringBuilder&gt; pool = null;
        pool = new ObjectPool&lt;PooledStringBuilder&gt;(() =&gt; new PooledStringBuilder(pool), size);
        return pool;
    }

    public static PooledStringBuilder GetInstance()
    {
        var builder = s_poolInstance.Allocate();
        Debug.Assert(builder.Builder.Length == 0);
        return builder;
    }

    public static implicit operator StringBuilder(PooledStringBuilder obj)
    {
        return obj.Builder;
    }
}</code></pre>

Roslyn uses StringBuilder intensively. ObjectPool saves a lot of work creating new instances and collecting garbage.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6742</wp:post_id>
		<wp:post_date><![CDATA[2017-06-19 18:01:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-19 21:01:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[roslyn-performance-lessons-1-the-objectpool-and-the-pooledstringbuilder]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_tag" nicename="lessons-learned"><![CDATA[lessons learned]]></category>
		<category domain="post_translations" nicename="pll_59483d2622a6b"><![CDATA[pll_59483d2622a6b]]></category>
		<category domain="post_tag" nicename="roslyn"><![CDATA[roslyn]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[#1 - The ObjectPool (and the PooledStringBuilder)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_series_part]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-19-roslyn-performance-lessons-1-the-objectpool-and-the-pooledstringbuilder.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[8450f732bc1c119516b8fd79a515967212c44c24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lições de performances aprendidas com Roslyn</title>
		<link>http://localhost:8080/?p=6755&#038;lang=pt</link>
		<pubDate>Mon, 19 Jun 2017 21:20:10 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6755</guid>
		<description></description>
		<content:encoded><![CDATA[Quando pensamos sobre o código-fonte do Roslyn, deveríamos pensar em performance! Eu gostaria de compartilhar algumas técnicas de performance e práticas de codificação que tenho aprendido estudando Roslyn. Por isso resolvi blogar sobre o tema.

Vamos começar com o incrível <a href="https://github.com/dotnet/roslyn/blob/614299ff83da9959fa07131c6d0ffbc58873b6ae/src/Dependencies/PooledObjects/ObjectPool%601.cs">ObjectPool</a>. Trata-se do tipo que é usado pelo compilador para tratar de objetos reusados frequentemente que normalmente seriam instanciados e descartados rapidamente. Ele reduz a quantidade e o peso das coletas de lixo que vão ocorrer em <em>runtime</em>.

<pre><code>
/// &lt;summary&gt;
/// Generic implementation of object pooling pattern with predefined pool size limit. The main
/// purpose is that limited number of frequently used objects can be kept in the pool for
/// further recycling.
/// 
/// Notes: 
/// 1) it is not the goal to keep all returned objects. Pool is not meant for storage. If there
///    is no space in the pool, extra returned objects will be dropped.
/// 
/// 2) it is implied that if object was obtained from a pool, the caller will return it back in
///    a relatively short time. Keeping checked out objects for long durations is ok, but 
///    reduces usefulness of pooling. Just new up your own.
/// 
/// Not returning objects to the pool in not detrimental to the pool's work, but is a bad practice. 
/// Rationale: 
///    If there is no intent for reusing the object, do not use pool - just use &quot;new&quot;. 
/// &lt;/summary&gt;
</code></pre>

Bacana os comentários. Não é memso? Eu simplesmente adoro essa abordagem informal de comentar que realmente provê informação relevante sobre o que está ocorrendo.

<pre><code>
internal class ObjectPool&lt;T&gt; where T : class
{
    [DebuggerDisplay(&quot;{Value,nq}&quot;)]
    private struct Element
    {
        internal T Value;
    }

    /// &lt;remarks&gt;
    /// Not using System.Func{T} because this file is linked into the (debugger) Formatter,
    /// which does not have that type (since it compiles against .NET 2.0).
    /// &lt;/remarks&gt;
    internal delegate T Factory();

    // Storage for the pool objects. The first item is stored in a dedicated field because we
    // expect to be able to satisfy most requests from it.
    private T _firstItem;
    private readonly Element[] _items;
</code></pre>

Sim! Roslyn envolve valores em uma struct para armazenar. A ideia aqui é evitar problema de performance quando estiverem sendo atribuídos valores para uma posição de um array. Não haverá necessidade de verificar em tempo de execução se o tipo do objeto é compatível (Lembrando que arrays são <em>variant </em>na CLR).

<pre><code>
internal ObjectPool(Factory factory)
    : this(factory, Environment.ProcessorCount * 2)
{ }

internal ObjectPool(Factory factory, int size)
{
    Debug.Assert(size &gt;= 1);
    _factory = factory;
    _items = new Element[size - 1];
}

private T CreateInstance()
{
    var inst = _factory();
    return inst;
}
</code></pre>

ObjectPool é um tipo interno. Logo, é natural que realize validações leves. Por padrão, the <em>Debug.Assert</em> funciona apenas em debug. Não há impacto de validações em release.

<pre><code>/// &lt;summary&gt;
/// Produces an instance.
/// &lt;/summary&gt;
/// &lt;remarks&gt;
/// Search strategy is a simple linear probing which is chosen for it cache-friendliness.
/// Note that Free will try to store recycled objects close to the start thus statistically 
/// reducing how far we will typically search.
/// &lt;/remarks&gt;
internal T Allocate()
{
    // PERF: Examine the first element. If that fails, AllocateSlow will look at the remaining elements.
    // Note that the initial read is optimistically not synchronized. That is intentional. 
    // We will interlock only when we have a candidate. in a worst case we may miss some
    // recently returned objects. Not a big deal.
    T inst = _firstItem;
    if (inst == null || inst != Interlocked.CompareExchange(ref _firstItem, null, inst))
    {
        inst = AllocateSlow();
    }

    return inst;
}

private T AllocateSlow()
{
    var items = _items;

    for (int i = 0; i &lt; items.Length; i++)
    {
        // Note that the initial read is optimistically not synchronized. That is intentional. 
        // We will interlock only when we have a candidate. in a worst case we may miss some
        // recently returned objects. Not a big deal.
        T inst = items[i].Value;
        if (inst != null)
        {
            if (inst == Interlocked.CompareExchange(ref items[i].Value, null, inst))
            {
                return inst;
            }
        }
    }

    return CreateInstance();
}
</code></pre>

Trabalhar com valores armazenados diretamente em campos é mais rápido do que com arrays (não são necessárias variáveis de índice, por exemplo). Por causa disso, há um campo dedicado que deverá ser suficiente na maior parte do tempo.

Interlocked é postergado até o último momento responsável (quase o primeiro irresponsável).

<pre><code>/// &lt;summary&gt;
/// Returns objects to the pool.
/// &lt;/summary&gt;

/// &lt;remarks&gt;
/// Search strategy is a simple linear probing which is chosen for it cache-friendliness.
/// Note that Free will try to store recycled objects close to the start thus statistically 
/// reducing how far we will typically search in Allocate.
/// &lt;/remarks&gt;
internal void Free(T obj)
{
    Validate(obj);
    ForgetTrackedObject(obj);

    if (_firstItem == null)
    {
        // Intentionally not using interlocked here. 
        // In a worst case scenario two objects may be stored into same slot.
        // It is very unlikely to happen and will only mean that one of the objects will get collected.
        _firstItem = obj;
    }
    else
    {
        FreeSlow(obj);
    }
}

private void FreeSlow(T obj)
{
    var items = _items;
    for (int i = 0; i &lt; items.Length; i++)
    {
        if (items[i].Value == null)
        {
            // Intentionally not using interlocked here. 
            // In a worst case scenario two objects may be stored into same slot.
            // It is very unlikely to happen and will only mean that one of the objects will get collected.
            items[i].Value = obj;
            break;
        }
    }
}</code></pre>

No retorno, não há verificações de concorrência. Se algum valor se perder, tudo bem! Como os comentários deixam claro, a perda de objetos é rara. Então, é mais barato criar novas instâncias se necessário do que tentar evitar acesso concorrente.

Perceba que o método Free vai armazenar todos os objetos reciclados logo no início do array - o que torna a alocação ainda mais rápida.

<h3>Usando!</h3>

ObjectPool é um conceito de baixo nível. Segue um caso de uso bastante interessante.

<pre><code>
/// &lt;summary&gt;
/// The usage is:
///        var inst = PooledStringBuilder.GetInstance();
///        var sb = inst.builder;
///        ... Do Stuff...
///        ... sb.ToString() ...
///        inst.Free();
/// &lt;/summary&gt;
internal class PooledStringBuilder
{
    public readonly StringBuilder Builder = new StringBuilder();
    private readonly ObjectPool&lt;PooledStringBuilder&gt; _pool;

    private PooledStringBuilder(ObjectPool&lt;PooledStringBuilder&gt; pool)
    {
        Debug.Assert(pool != null);
        _pool = pool;
    }

    public int Length
    {
        get { return this.Builder.Length; }
    }

    public void Free()
    {
        var builder = this.Builder;

        // do not store builders that are too large.
        if (builder.Capacity &lt;= 1024)
        {
            builder.Clear();
            _pool.Free(this);
        }
        else
        {
            _pool.ForgetTrackedObject(this);
        }
    }

    [System.Obsolete(&quot;Consider calling ToStringAndFree instead.&quot;)]
    public new string ToString()
    {
        return this.Builder.ToString();
    }

    public string ToStringAndFree()
    {
        string result = this.Builder.ToString();
        this.Free();

        return result;
    }

    public string ToStringAndFree(int startIndex, int length)
    {
        string result = this.Builder.ToString(startIndex, length);
        this.Free();

        return result;
    }

    // global pool
    private static readonly ObjectPool&lt;PooledStringBuilder&gt; s_poolInstance = CreatePool();

    // if someone needs to create a private pool;
    /// &lt;summary&gt;
    /// If someone need to create a private pool
    /// &lt;/summary&gt;
    /// &lt;param name=&quot;size&quot;&gt;The size of the pool.&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public static ObjectPool&lt;PooledStringBuilder&gt; CreatePool(int size = 32)
    {
        ObjectPool&lt;PooledStringBuilder&gt; pool = null;
        pool = new ObjectPool&lt;PooledStringBuilder&gt;(() =&gt; new PooledStringBuilder(pool), size);
        return pool;
    }

    public static PooledStringBuilder GetInstance()
    {
        var builder = s_poolInstance.Allocate();
        Debug.Assert(builder.Builder.Length == 0);
        return builder;
    }

    public static implicit operator StringBuilder(PooledStringBuilder obj)
    {
        return obj.Builder;
    }
}</code></pre>

Roslyn usa StringBuilder intensamente. Aqui, ObjectPool salva um bocado de trabalho criando novas instâncias e com o GC.

Era isso.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6755</wp:post_id>
		<wp:post_date><![CDATA[2017-06-19 18:20:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-06-19 21:20:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[licoes-de-performances-aprendidas-com-roslyn-1-objectpool-e-pooledstringbuilder]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[performance]]></category>
		<category domain="post_translations" nicename="pll_59483d2622a6b"><![CDATA[pll_59483d2622a6b]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="roslyn-pt"><![CDATA[roslyn]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_gallery_slider]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_vc_post_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:10:"vc_grid_id";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_item_masonry_sizing]]></wp:meta_key>
			<wp:meta_value><![CDATA[regular]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_bg]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.elemarjr.com/wp-content/uploads/2017/06/csharp_nolight-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_header_parallax]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_disable_transparent_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpb_vc_js_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_nectar_love]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[#1 - ObjectPool (... e PooledStringBuilder)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-06-19-licoes-de-performances-aprendidas-com-roslyn-1-objectpool-e-pooledstringbuilder.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[df6fa5c10f1b79b721acf70ba3714e09034819f1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[Alberto Monteiro]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[alberto.monteiro@live.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.200.94.33]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-19 19:37:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-19 22:37:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Elemar, quando você fala isso: \"Trabalhar com valores armazenados diretamente em campos é mais rápido do que com arrays. Por causa disso, há um campo dedicado que deverá ser suficiente na maior parte do tempo.\"

Que dizer que ele ao invés de usar o field _items da classe, cria uma variável items e usa ela, e nesse caso o código executa mais rápido?

O mesmo se repete com o \"T inst = items[i].Value\" ao invés de acessar sempre \"items[i].Value\" usar a variável fica mais rápido?

Muito show o artigo, no aguardo dos próximos!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:14:"1497911839.983";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Conversando sobre &quot;Inovação Empreendedora&quot;</title>
		<link>http://localhost:8080/?p=6885&#038;lang=pt</link>
		<pubDate>Tue, 18 Jul 2017 01:35:54 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6885</guid>
		<description></description>
		<content:encoded><![CDATA[Há alguns dias tive a oportunidade de falar sobre Inovação e Empreendedorismo com empresários da serra gaúcha. Nessa conversa, disponível abaixo, revisito alguns conceitos importantes e indico alguns bons livros sobre o tema.

Começamos com algumas provocações, avançamos para algumas definições (com Schumpeter e Drucker) e, finalmente, discutimos algumas oportunidades disfarçadas de amaças (com Christensen)

<p style="text-align: center;">[embedyt] https://www.youtube.com/watch?v=b0uP3qv3N9w[/embedyt]</p>

O que acha?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6885</wp:post_id>
		<wp:post_date><![CDATA[2017-07-17 22:35:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-18 01:35:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[conversando-sobre-inovacao-empreendedora]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="empreendedorismo"><![CDATA[empreendedorismo]]></category>
		<category domain="category" nicename="estrategia"><![CDATA[Estratégia]]></category>
		<category domain="post_tag" nicename="estrategia"><![CDATA[estratégia]]></category>
		<category domain="post_tag" nicename="inovacao"><![CDATA[inovação]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6892]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-07-17-conversando-sobre-inovacao-empreendedora.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[8e703ade062244a9cc20e8245e14b1526acc2bd2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>RavenDB consegue falar português</title>
		<link>http://localhost:8080/?p=6914&#038;lang=pt</link>
		<pubDate>Wed, 26 Jul 2017 17:32:57 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6914</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://ravendb.net/">RavenDB</a> utiliza <a href="https://lucenenet.apache.org/">Lucene</a> como motor de indexação. Isso significa suporte natural a <a href="https://en.wikipedia.org/wiki/Full-text_search">full-text search</a> que pode ser facilmente habilitado a partir da definição de um índice como o que segue.

<pre><code>
public class Products_SearchByName : AbstractIndexCreationTask&lt;Product&gt;
{
    public Products_SearchByName()
    {
        Map = products =&gt;
            from p in products
            select new
            {
                p.Name
            };

        Index(entry =&gt; entry.Name, FieldIndexing.Analyzed);
    }
}
</code></pre>

Como inidicado no código, o campo <em>Name</em> está marcado como <em>Analyzed</em>. 

<h3>Analyzed?</h3>
Quando um campo é marcado como <em>analyzed</em>, isso indica que seu conteúdo será quebrado em termos. São esses termos que serão considerados no momento de uma busca.

<center>
<img src="http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_17_12-Terms-_-Raven.Studio.png" alt="" width="650"  class="alignnone size-full wp-image-6927" /></center>

No banco de dados de exemplo Northwind, há um produto cadastrado chamado "Guaraná Fantásica" (um claro representante brasileiro). Por default, RavenDB irá gerar dois termos para essa string: 1) "guaraná" e 2) "fantástica". Ou seja, cada palavra da string, convertida para minúsculo é considerada como um termo de busca.

<h3>Compatibilidade nativa com o inglês</h3>

O processo de análise padrão do RavenDB otimiza o processo de geração de termos para atender as regras da língua inglêsa. <a href="https://en.wikipedia.org/wiki/Stop_words">Palavras vazias (stop words)</a> são ignoradas automaticamente. Além disso, "Mario's" gera "Mario", a abreviação "F.Y.I." gera "FYI".

No momento em que ocorre uma busca, a string buscada também passa por essa análise. O resultado é que as chances de encontrar o que está sendo buscado cresce (mesmo que o que esteja salvo no banco esteja escrito de forma diferente daquela que está sendo usada no momento da consulta).

<h3>Tropicalizando o RavenDB</h3>

O processo de geração de termos pode ser muito mais interessante para nós, aqui do Brasil, se este considerar particularidades do nosso idioma. Por exemplo, a geração de termos poderia remover acentos das palavras (para que o usuário possa procurar tanto "guaraná" quanto "guarana"). Além disso, deveria considerar o conjunto de palavras vazias da língua portuguesa (de, da, o, a, ...).

A customização do processo de análise do RavenDB ocorre pela escrita de um analisador customizado. Há uma <a href="https://github.com/ElemarJR/RavenDB.Indexing.BrazilianAnalyzer">implementação completa no meu Github</a>.

<center><a href="https://github.com/ElemarJR/RavenDB.Indexing.BrazilianAnalyzer"><img src="http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_08_11-ElemarJR_RavenDB.Indexing.BrazilianAnalyzer_-RavenDB-index-analyzer-that-removes.png" alt="" width="650" class="alignnone size-full wp-image-6926" /></a></center>

Para escrever esse analisador, parti do código do próprio RavenDB aplicando modificações onde eram convenientes.

<center><a href="https://github.com/ravendb/ravendb/tree/v3.5/Raven.Database/Indexing/Analyzers"><img src="http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_21_41-ravendb_Raven.Database_Indexing_Analyzers-at-v3.5-·-ravendb_ravendb.png" alt="" width="650" class="aligncenter size-full wp-image-6928" /></a></center>

<h3>Show me the code!</h3>
Embora exista um bocado de "Lucene" no código que segue, acho que ele é claro o suficiente para indicar o que estou fazendo.

<pre><code>
using System;
using System.IO;
using Lucene.Net.Analysis;
using Lucene.Net.Analysis.Standard;
using Lucene.Net.Analysis.Tokenattributes;

namespace RavenDB.Indexing.BrazilianAnalyzer
{
    public sealed class RavenBrazilianFilter : TokenFilter
    {
        public static string[] BRAZILIAN_STOP_WORDS = {
            &quot;a&quot;,&quot;ainda&quot;,&quot;alem&quot;,&quot;ambas&quot;,&quot;ambos&quot;,&quot;antes&quot;,
            &quot;ao&quot;,&quot;aonde&quot;,&quot;aos&quot;,&quot;apos&quot;,&quot;aquele&quot;,&quot;aqueles&quot;,
            &quot;as&quot;,&quot;assim&quot;,&quot;com&quot;,&quot;como&quot;,&quot;contra&quot;,&quot;contudo&quot;,
            &quot;cuja&quot;,&quot;cujas&quot;,&quot;cujo&quot;,&quot;cujos&quot;,&quot;da&quot;,&quot;das&quot;,&quot;de&quot;,
            &quot;dela&quot;,&quot;dele&quot;,&quot;deles&quot;,&quot;demais&quot;,&quot;depois&quot;,&quot;desde&quot;,
            &quot;desta&quot;,&quot;deste&quot;,&quot;dispoe&quot;,&quot;dispoem&quot;,&quot;diversa&quot;,
            &quot;diversas&quot;,&quot;diversos&quot;,&quot;do&quot;,&quot;dos&quot;,&quot;durante&quot;,&quot;e&quot;,
            &quot;ela&quot;,&quot;elas&quot;,&quot;ele&quot;,&quot;eles&quot;,&quot;em&quot;,&quot;entao&quot;,&quot;entre&quot;,
            &quot;essa&quot;,&quot;essas&quot;,&quot;esse&quot;,&quot;esses&quot;,&quot;esta&quot;,&quot;estas&quot;,
            &quot;este&quot;,&quot;estes&quot;,&quot;ha&quot;,&quot;isso&quot;,&quot;isto&quot;,&quot;logo&quot;,&quot;mais&quot;,
            &quot;mas&quot;,&quot;mediante&quot;,&quot;menos&quot;,&quot;mesma&quot;,&quot;mesmas&quot;,&quot;mesmo&quot;,
            &quot;mesmos&quot;,&quot;na&quot;,&quot;nas&quot;,&quot;nao&quot;,&quot;nas&quot;,&quot;nem&quot;,&quot;nesse&quot;,&quot;neste&quot;,
            &quot;nos&quot;,&quot;o&quot;,&quot;os&quot;,&quot;ou&quot;,&quot;outra&quot;,&quot;outras&quot;,&quot;outro&quot;,&quot;outros&quot;,
            &quot;pelas&quot;,&quot;pelas&quot;,&quot;pelo&quot;,&quot;pelos&quot;,&quot;perante&quot;,&quot;pois&quot;,&quot;por&quot;,
            &quot;porque&quot;,&quot;portanto&quot;,&quot;proprio&quot;,&quot;proprios&quot;,&quot;quais&quot;,&quot;qual&quot;,
            &quot;qualquer&quot;,&quot;quando&quot;,&quot;quanto&quot;,&quot;que&quot;,&quot;quem&quot;,&quot;quer&quot;,&quot;se&quot;,
            &quot;seja&quot;,&quot;sem&quot;,&quot;sendo&quot;,&quot;seu&quot;,&quot;seus&quot;,&quot;sob&quot;,&quot;sobre&quot;,&quot;sua&quot;,
            &quot;suas&quot;,&quot;tal&quot;,&quot;tambem&quot;,&quot;teu&quot;,&quot;teus&quot;,&quot;toda&quot;,&quot;todas&quot;,&quot;todo&quot;,
            &quot;todos&quot;,&quot;tua&quot;,&quot;tuas&quot;,&quot;tudo&quot;,&quot;um&quot;,&quot;uma&quot;,&quot;umas&quot;,&quot;uns&quot;
        };

        private readonly TokenStream _innerInputStream;
        private readonly ITermAttribute _termAtt;
        private readonly ITypeAttribute _typeAtt;
        
        private const string AcronymType = &quot;&lt;ACRONYM&gt;&quot;;
        private readonly CharArraySet _stopWords = new CharArraySet(BRAZILIAN_STOP_WORDS, false);

        public RavenBrazilianFilter(TokenStream input) : base(input)
        {
            _innerInputStream = input;
            _termAtt = AddAttribute&lt;ITermAttribute&gt;();
            _typeAtt = AddAttribute&lt;ITypeAttribute&gt;();
        }

        public override bool IncrementToken()
        {
            if (!input.IncrementToken())
            {
                return false;
            }

            var buffer = _termAtt.TermBuffer();
            var bufferLength = _termAtt.TermLength();
            var type = _typeAtt.Type;

            var bufferUpdated = true;

            if (type == AcronymType)
            {
                // remove dots
                var upto = 0;
                for (int i = 0; i &lt; bufferLength; i++)
                {
                    var c = buffer[i];
                    if (c != '.')
                        buffer[upto++] = CharUtils.ToLower(c);
                }
                _termAtt.SetTermLength(upto);
            }
            else
            {
                do
                {
                    //If we consumed a stop word we need to update the buffer and its length.
                    if (!bufferUpdated)
                    {
                        bufferLength = _termAtt.TermLength();
                        buffer = _termAtt.TermBuffer();
                    }

                    for (var i = 0; i &lt; bufferLength; i++)
                    {
                        buffer[i] = CharUtils.RemoveAccentMark(CharUtils.ToLower(buffer[i]));
                    }

                    if (!_stopWords.Contains(buffer, 0, bufferLength))
                    {
                        return true;
                    }

                    bufferUpdated = false;
                } while (input.IncrementToken());

                return false;
            }
            return true;
        }

        internal bool Reset(TextReader reader)
        {
            var input = _innerInputStream as StandardTokenizer;

            if (input == null) return false;

            input.Reset(reader);
            return true;
        }
    }
}
</code></pre>

Adeus acentos!

<h3>Como usar o analisador customizado</h3>
É importante ter o analisador em uma DLL que possa ser adicionada ao servidor do RavenDB (conforme <a href="https://ravendb.net/docs/article-page/3.5/all/indexes/using-analyzers">indicado na documentação</a>). Se você optar por utilizar o analisar que escrevi, basta compilar o projeto para obter um assembly pronto.

Para usar um analisador customizado, basta adicionar a DLL com o analisador em uma pasta chamada "Analyzers" no diretório onde está o servidor do RavenDB e modificar o índice indicando que analisador deverá ser utilizado.

<pre><code>
public class Products_SearchByName : AbstractIndexCreationTask&lt;Product&gt;
{
    public Products_SearchByName()
    {
        Map = products =&gt;
            from p in products
            select new
            {
                p.Name
            };

        Index(entry =&gt; entry.Name, FieldIndexing.Analyzed);
        Analyze(entry =&gt; entry.Name, typeof(RavenBrazilianAnalyzer).AssemblyQualifiedName);
    }
}
</code></pre>

Esse novo índice removerá acentos nos termos gerados.

<center><img src="http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_29_26-Terms-_-Raven.Studio.png" alt="" width="640" class="aligncenter size-full wp-image-6929" /></center>

Dessa forma, a seguinte busca retornará o produto sem problemas.

<pre><code>
class Program
{
    static void Main(string[] args)
    {
        using (var session = DocumentStoreHolder.Store.OpenSession())
        {
            var results = session
                .Query&lt;Product, Products_SearchByName&gt;()
                .Search(r =&gt; r.Name, &quot;guarana&quot;)
                .ToList();

            foreach (var result in results)
            {
                Console.WriteLine(result.Name);
            }
        }
    }
}
</code></pre>

Afinal a palavra informada está na lista de termos.

<center><img src="http://localhost:8080/wp-content/uploads/2017/07/2017-07-26-15_35_31-C__Windows_system32_cmd.exe_.png" alt="" width="780" height="305" class="aligncenter size-full wp-image-6930" /></center>



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6914</wp:post_id>
		<wp:post_date><![CDATA[2017-07-26 14:32:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-26 17:32:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ravendb-consegue-falar-portugues]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="index"><![CDATA[index]]></category>
		<category domain="post_tag" nicename="lucene"><![CDATA[lucene]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="ravendb"><![CDATA[ravendb]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6915]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[Um analyzer customizado para particularidades do pt-BR]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-07-26-ravendb-consegue-falar-portugues.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[3e82ee55cb46be59ddf73f86e70ee6167b90679a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[Eduardo Spaki]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[spoky.br@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://spaki.io</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[89.115.249.50]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-08-04 08:28:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-08-04 11:28:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[curiosamente fiz algo parecido com o mongodb... não sabia que era um approach comum. tinha medo de estar fazendo algo estranho, mas resolvia meu problema :D]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:14:"1501846134.611";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Slides da palestra sobre C# no Devxperience</title>
		<link>http://localhost:8080/?p=6971&#038;lang=pt</link>
		<pubDate>Wed, 13 Sep 2017 18:39:16 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6971</guid>
		<description></description>
		<content:encoded><![CDATA[Recebi um bocado de feedback positivo para minhas palestras no Devxperience deste ano.

Muita gente mandou e-mails solicitando, principalmente, os slides para a palestra sobre C#. Para quem desejar, a <a href="http://www.elemarjr.com/wp-content/uploads/2017/09/Amazing_CSharp_v2animations_splited.pdf">apresentação completa está disponível aqui</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6971</wp:post_id>
		<wp:post_date><![CDATA[2017-09-13 15:39:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-09-13 18:39:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[slides-da-palestra-sobre-c-no-devxperience]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="comunicado"><![CDATA[Comunicado]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="dotnet-pt"><![CDATA[dotnet]]></category>
		<category domain="post_tag" nicename="palestras"><![CDATA[palestras]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="slides"><![CDATA[slides]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:15:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:32:"aioseop_opengraph_settings_image";s:111:"http://www.elemarjr.com/wp-content/uploads/2017/09/21458153_1956307134647686_2636095235272504746_o-1024x683.jpg";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6972]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-09-13-slides-da-palestra-sobre-c-no-devxperience.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[acffa68aaa6da77cf4b7932b80f3618d7b26fc41]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Announcing CRM Journey with RavenDB</title>
		<link>http://localhost:8080/?p=6982&#038;lang=en</link>
		<pubDate>Mon, 02 Oct 2017 18:17:11 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6982</guid>
		<description></description>
		<content:encoded><![CDATA[This is the first of a series of blog posts sharing some knowledge about how to develop a real-world software using RavenDB. The goal is to show the benefits of adopting RavenDB as the database and some lovely techonologies for a complex domain.

<h3>Why a CRM?</h3>
Quoting <a href="https://en.wikipedia.org/wiki/Customer_relationship_management">Wikipedia</a>:
<blockquote>Customer relationship management (CRM) is an approach to managing a company's interaction with current and potential customers. It uses data analysis about customers' history with a company and to improve business relationships with customers, specifically focusing on customer retention and ultimately driving sales growth.

One important aspect of the CRM approach is the systems of CRM that compile data from a range of different communication channels, including a company's website, telephone, email, live chat, marketing materials, and more recently, social media. Through the CRM approach and the systems used to facilitate it, businesses learn more about their target audiences and how to best cater to their needs.
</blockquote>

CRM is a very complex domain, and I am sure that we could learn a lot working with it.

In this series, we will cover a lot of interesting topics such as microservices, CQRS, SPA and, of course, RavenDB.

<h3>Why RavenDB?</h3>
If you know nothing about NoSQL, it is time to solve it. Nothing better to start than learning a powerful and easy-to-use database such as RavenDB. 

RavenDB is a NoSQL document database, safe by default and optimized to efficiency. In this series, we will use <a href="https://ravendb.net/downloads#server/dev">RavenDB 4.0 RC</a> which is fast and multi-platform.

As professional developers, we need to break out the relational-only mindset and move on. RavenDB allows us to store arrays and complex objects in single documents (instead of multiple records into multiple tables), to use human-friendly ids instead of meaningless integers, and to query data in a very efficient way.

Using RavenDB, we minimize the need for a clear separation between the domain and the persistence model.

If you are coming from the "relational world," RavenDB makes your life easier supporting ACID transactions and providing a familiar programming model. 

RavenDB schema-free collections fit perfectly with CRM. 

<h3>What to expect?</h3>
A lot of fun and code, for sure. No more "hello world" examples. 

Before starting, I strongly recommend you learn the basics about RavenDB <a href="https://ravendb.net/learn">subscribing the Bootcamp</a> (It's really easy to follow).

The real world demands real code. Welcome to CRM Journey with RavenDB.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6982</wp:post_id>
		<wp:post_date><![CDATA[2017-10-02 15:17:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-02 18:17:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[crmjourney_enus_1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[Code]]></category>
		<category domain="post_tag" nicename="crm-journey"><![CDATA[crm journey]]></category>
		<category domain="language" nicename="en"><![CDATA[English]]></category>
		<category domain="post_translations" nicename="pll_59d285973ea8b"><![CDATA[pll_59d285973ea8b]]></category>
		<category domain="post_tag" nicename="ravendb"><![CDATA[ravendb]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6989]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-10-02-crmjourney_enus_1.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[fbac9ec118c5417c7086736a60fa44b4141870a1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Anunciando Jornada CRM com RavenDB</title>
		<link>http://localhost:8080/?p=6993&#038;lang=pt</link>
		<pubDate>Mon, 02 Oct 2017 18:30:59 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6993</guid>
		<description></description>
		<content:encoded><![CDATA[Este é o primeiro post da série em que vou compartilhar algum conhecimento sobre como desenvolver uma aplicação de verdade usando RavenDB. O objetivo é mostrar os benefícios de adotar RavenDB como banco de dados e outras tecnologias em um domínio complexo.

<h3>Por que CRM?</h3>
Citando a <a href="https://en.wikipedia.org/wiki/Customer_relationship_management">Wikipedia</a> (traduzido):
<blockquote>Gestão de relcionamento com cliente (CRM) é uma abordagem para gerenciar a interação de uma companhia com seus atuais e potenciais clientes. Ela usa análise de dados sobre a história do cliente com a companhia  para melhorar as relações de negócios, focando na retenção de clientes e consequentemente no crescimento das vendas.

Um aspecto importante da abordagem CRM é que sistemas que a suportam compiam dados de um conjunto diversificado de canais de comunicação, incluindo o website da companhia, telefone, email, chat, material de marketing, e, mais recentemente, mídia social. Através da abordagem CRM e dos sistemas que a facilitam, negócios aprender mais sobre seus públicos alvo e como atender melhor suas necessidades.
</blockquote>

CRM é um domínimo muito complexo. Tenho certeza que a gente pode aprender um bocado com ele.

Nessa série, vamos tratar de um bocado de topicos interessantes, tais como microsserviços, CQRS, SPA e, claro, RavenDB.

<h3>Por que RavenDB?</h3>
Se você não sabe nada sobre NoSQL, é hora de aprender. Nada melhor do que começar aprendendo uma ferramenta poderosa e fácil de usar como RavenDB.

RavenDB é um banco de dados NoSQL de documentos, seguro por padrão e otimizado para eficiência. Nesta série, usaremos <a href="https://ravendb.net/downloads#server/dev">RavenDB 4.0 RC</a> que é rápido e multiplataforma.

Como desenvolvedores profissionais, precisamos nos libertar do mindset puramente relcional. RavenDB nos permite armazenar arrays e objetos complexos em documentos únicos (no lugar de múltiplos registros em múltiplas tabelas), a usar ids amigáveis no lugar de inteiros sem sentido, e pesquisar dados de forma muito eficiente.

Usando RavenDB, nós minimizamos a necessidade de uma separação clara entre o domínio e o modelo de persistência.

Se você está vindo do "mundo relacional", RavenDB torna sua vida mais fácil suportando transações ACID e provendo um modelo de programação familiar.

RavenDB,  por ter esquema livre, é perfeito para aplicações CRM

<h3>O que esperar?</h3>
Um bocado de diversão e de código, com certeza. Nada de exemplos "Hello World".

Antes de começar, eu recomendo fortemente que você aprenda o básico sobre RavenDB <a href="https://ravendb.net/learn">assinando o Bootcamp</a> 

O mundo real demanda código ral. Bem vindo a esta jornada rumo a um CRM usando RavenDB.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6993</wp:post_id>
		<wp:post_date><![CDATA[2017-10-02 15:30:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-02 18:30:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[anunciando-jornada-crm-com-ravendb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="crm-jorney"><![CDATA[crm jorney]]></category>
		<category domain="post_translations" nicename="pll_59d285973ea8b"><![CDATA[pll_59d285973ea8b]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="ravendb-pt"><![CDATA[ravendb]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6989]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-10-02-anunciando-jornada-crm-com-ravendb.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[622b21980ade6952afbdfbac5710c9f85edee0e8]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[Vinicius Perroni]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[viniciusnp3@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[187.44.83.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-11-01 09:52:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-11-01 12:52:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Boa iniciativa Elemar, irei acompanhar !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1510951020.6815";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:14:"1509540764.863";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Hello world!</title>
		<link>http://localhost:8080/?p=1</link>
		<pubDate>Mon, 04 Dec 2017 23:38:18 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://localhost:8080/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[Welcome to WordPress. This is your first post. Edit or delete it, then start writing!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date><![CDATA[2017-12-04 23:38:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-12-04 23:38:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hello-world]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>1</wp:comment_id>
			<wp:comment_author><![CDATA[A WordPress Commenter]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wapuu@wordpress.example]]></wp:comment_author_email>
			<wp:comment_author_url>https://wordpress.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-12-04 23:38:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-12-04 23:38:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, this is a comment.
To get started with moderating, editing, and deleting comments, please visit the Comments screen in the dashboard.
Commenter avatars come from <a href="https://gravatar.com">Gravatar</a>.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Reflexões sobre composição inspiradas no ggplot2</title>
		<link>http://localhost:8080/?p=6995&#038;lang=pt</link>
		<pubDate>Mon, 02 Oct 2017 21:36:17 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=6995</guid>
		<description></description>
		<content:encoded><![CDATA[Uma das vantagens de estudar diversas linguagens, frameworks, técnicas e prática é encontrar inspiração inusitada para nosso código. Nesse post compartilho uma das minhas inspirações.

<h3>Inspiração: ggplot2</h2>

Pegando emprestada uma <a href="http://www.statmethods.net/advgraphs/ggplot2.html">definição famosa</a>:

<blockquote><strong>The ggplot2 package, created by Hadley Wickham, offers a powerful graphics language for creating elegant and complex plots</strong>. Its popularity in the R community has exploded in recent years. Origianlly <strong>based on Leland Wilkinson's The Grammar of Graphics</strong>, ggplot2 allows you to create graphs that represent both univariate and multivariate numerical and categorical data in a straightforward manner.</blockquote>

Dê uma olhada no bloco de código (em "R") que segue (extraído <a href="http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html">daqui</a>):

<pre>
# install.packages("ggplot2")
# load package and data

options(scipen=999)  # turn-off scientific notation like 1e+48
library(ggplot2)

theme_set(theme_bw())  # pre-set the bw theme.
data("midwest", package = "ggplot2")
# midwest <- read.csv("http://goo.gl/G1K41K")  # bkup data source

# Scatterplot
gg <- ggplot(midwest, aes(x=area, y=poptotal)) + 
  geom_point(aes(col=state, size=popdensity)) + 
  geom_smooth(method="loess", se=F) + 
  xlim(c(0, 0.1)) + 
  ylim(c(0, 500000)) + 
  labs(subtitle="Area Vs Population", 
       y="Population", 
       x="Area", 
       title="Scatterplot", 
       caption = "Source: midwest")

plot(gg)
</pre>

Esse código gera o seguinte gráfico:

<img src="http://localhost:8080/wp-content/uploads/2017/10/Rplot.png" alt="" width="712" height="547" class="aligncenter size-full wp-image-6999" />

O que chama atenção aqui é a construção do gráfico, em várias etapas, através da combinação da resultante de diversas funções através de uma sintaxe elegante envolvendo soma. Lindo, não acha?

<h3>O produto</h3>
Podemos implementar essa ideia elegante facilmente em C#. Vejamos:
<pre>
public class Plot
{
    // ..
    public static Plot operator +(Plot plot, Transform t) =>
        t.ApplyOn(plot);
}

public abstract class Transform
{
    public abstract Plot ApplyOn(Plot input);
        
    public static Transform operator +(Transform left, Transform right)
        => new MultiTransform(left, right);
}

public class MultiTransform : Transform
{
    private readonly Transform _left;
    private readonly Transform _right;

    public MultiTransform(Transform left, Transform right)
    {
        _left = left;
        _right = right;
    }
    public override Plot ApplyOn(Plot input) => 
        _right.ApplyOn(_left.ApplyOn(input));
}
</pre>

O que temos aqui é simplesmente uma representação dos dois tipos de elementos que estamos combinando: 1) plotagem e 2) transformação.

Vamos avançar definindo uma transformação nula.

<pre>
public class NullTransform : Transform
{
    public override Plot ApplyOn(Plot input) =>
        input;
}
</pre>

Pronto! Estamos prontos para começar a definir nossa pequena biblioteca:

<pre>
public static class MyGgPlot2
{
    public static Plot ggplot(object data) =>
        new Plot();

    public static Transform geom_point()
        => new NullTransform();

    public static Transform geom_smooth() 
        => new NullTransform();
}
[/csharp]

Com o tipo certo de recurso sintático nos autoriza a algo bem bacana.

[csharp][/csharp]
using static MyGgPlot2;
public class Program
{
    public static void Main()
    {
        var gg = ggplot(null)
                    + geom_point()
                    + geom_smooth();
    }
}
</pre>

E por aí vai ...

O que acha?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6995</wp:post_id>
		<wp:post_date><![CDATA[2017-10-02 18:36:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-02 21:36:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reflexoes-sobre-composicao-inspiradas-no-ggplot2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="composition"><![CDATA[composition]]></category>
		<category domain="post_tag" nicename="csharp"><![CDATA[csharp]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[R]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[7011]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-10-02-reflexoes-sobre-composicao-inspiradas-no-ggplot2.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[78dde93b2ad1e760f626ce5686dd62c00f33c719]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lançando Exception quando Dispose não é chamado</title>
		<link>http://localhost:8080/?p=7014&#038;lang=pt</link>
		<pubDate>Sat, 07 Oct 2017 12:40:43 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=7014</guid>
		<description></description>
		<content:encoded><![CDATA[Ao utilizar recursos não gerenciados, em .NET, precisamos garantir que estes sejam devidamente liberados.  Para isso, quando criamos classes que alocam tais recursos, implementamos a interface <a href="https://msdn.microsoft.com/pt-br/library/system.idisposable(v=vs.110).aspx">IDisposable</a>. Caberá ao programador que consome essa classe chamar o método <a href="https://msdn.microsoft.com/pt-br/library/system.idisposable.dispose(v=vs.110).aspx">Dispose</a> que irá liberar tais recursos.

Infelizmente, muitas vezes, os programadores que consomem classes que alocam recursos não gerenciados esquecem de chamar o método Dispose. Assim, alguns recursos não gerenciados acabam pendurados por nossa aplicação gerando erros difíceis de identificar e corrigir. Uma abordagem interessante para minimizar esse risco é implementada a seguir:

<pre>
using System;
using static System.Console;
class Program
{
    static void Main(string[] args)
    {
        var n = new DisposableObject();
        n.SayHello();
        //n.Dispose();
        WriteLine("Done!");
    }
}

class DisposableObject : IDisposable
{
    public void SayHello() => WriteLine("Hello!");

    ~DisposableObject() =>
        throw new InvalidOperationException($"{nameof(DisposableObject)}.{nameof(Dispose)}() not called.");
    
    public void Dispose()
    {
        GC.SuppressFinalize(this);
        WriteLine("Dispose was called.");
    }
}
</pre>

Aqui, o destrutor irá lançar uma exception sempre que evocado.  O destrutor, por padrão, é chamado pelo Garbage Collector no momento que o objeto está sendo retirado da memória.  O que fizemos é desativar essa chamada quando o método Dispose é acionado. Dessa forma, a exceção será lançada apenas se o método Dispose não for chamado. 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7014</wp:post_id>
		<wp:post_date><![CDATA[2017-10-07 09:40:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-07 12:40:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[lancando-exception-quando-dispose-nao-e-chamado]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="post_tag" nicename="csharp-pt"><![CDATA[csharp]]></category>
		<category domain="post_tag" nicename="dispose"><![CDATA[dispose]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[7017]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-10-07-lancando-exception-quando-dispose-nao-e-chamado.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[1c77d444a871f931be05b388961663e05cd1b3ab]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Vinicius]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vinicius.melquiades@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[191.178.208.134]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-10-07 13:01:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-10-07 16:01:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Por que fazer isso quando podemos chamar o Dispose do destructor?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1507392111.1793";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1507465645.7473";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Gildeoni Santos]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gildeoni.santos@owldocs.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.owldocs.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.138.57.85]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-10-07 19:58:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-10-07 22:58:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Finalizers
Throwing an exception from a finalizer causes the CLR to fail fast, which tears down the process. Therefore, throwing exceptions in a finalizer should always be avoided.

https://msdn.microsoft.com/en-us/library/bb386039.aspx]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1507417110.9715";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1507465642.6284";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[elemarjr]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[elemarjr@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.44.209.252]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-10-08 09:28:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-10-08 12:28:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O processo de liberação de recursos pode ser oneroso e, durante a coleta, vai prejudicar a performance geral da aplicação.

O melhor é optar sempre por liberação explícita.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1507465732.6081";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[elemarjr]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[elemarjr@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.44.209.252]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-10-08 09:29:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-10-08 12:29:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[O objetivo é que a aplicação caia mesmo. :) Prefiro erros evidentes do que ocultos.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1507465771.7321";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[Gullen]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gull1981@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.188.240.151]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-10-11 10:06:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-10-11 13:06:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[É só usar o Code Cracker e seguir as recomendações! =)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";s:15:"1507727172.0106";s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";s:15:"1507738725.4288";s:5:"event";s:15:"status-approved";s:4:"user";s:8:"elemarjr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Estrutura e Build para projetos .NET Core com Cake+xUnit</title>
		<link>http://localhost:8080/?p=7020&#038;lang=pt</link>
		<pubDate>Tue, 24 Oct 2017 22:44:36 +0000</pubDate>
		<dc:creator><![CDATA[elemarjr]]></dc:creator>
		<guid isPermaLink="false">http://www.elemarjr.com/?p=7020</guid>
		<description></description>
		<content:encoded><![CDATA[Nossos códigos precisam ser fáceis de compilar e testar. Para isso, nada melhor do que começarmos da forma certa, com uma boa estrutura de pastas e com um bom script de build compatível com diversas plataformas. Certo?

No <a href="https://github.com/ElemarJR/CakeBootstrap">meu github</a>, compartilho uma estrutura que considero próxima do ideal.

<a href="https://github.com/ElemarJR/CakeBootstrap"><img src="http://localhost:8080/wp-content/uploads/2017/10/git_elemar.png" alt="" width="640" class="aligncenter size-medium wp-image-7023" /></a>

O que você encontra ali é uma estrutura de pastas adequada (separando fontes e testes), alguns arquivos de configuração (<em>props</em>) que direcionam o resultado do build de cada projeto para uma <strong>pasta <em>bin</em> na raiz da solução</strong> e um script em <a href="https://cakebuild.net/">CAKE</a>. Também estão disponíveis acionadores para o build tanto para Windows como para MacOS/Linux.

Bom proveito.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7020</wp:post_id>
		<wp:post_date><![CDATA[2017-10-24 19:44:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-10-24 22:44:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[estrutura-e-build-para-projetos-net-core-com-cakexunit]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="build"><![CDATA[build]]></category>
		<category domain="post_tag" nicename="cake"><![CDATA[cake]]></category>
		<category domain="category" nicename="codigo"><![CDATA[Código]]></category>
		<category domain="language" nicename="pt"><![CDATA[Português]]></category>
		<category domain="post_tag" nicename="xunit"><![CDATA[xunit]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[7021]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_opengraph_settings]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:14:{s:32:"aioseop_opengraph_settings_title";s:0:"";s:31:"aioseop_opengraph_settings_desc";s:0:"";s:36:"aioseop_opengraph_settings_customimg";s:0:"";s:37:"aioseop_opengraph_settings_imagewidth";s:0:"";s:38:"aioseop_opengraph_settings_imageheight";s:0:"";s:32:"aioseop_opengraph_settings_video";s:0:"";s:37:"aioseop_opengraph_settings_videowidth";s:0:"";s:38:"aioseop_opengraph_settings_videoheight";s:0:"";s:35:"aioseop_opengraph_settings_category";s:8:"activity";s:34:"aioseop_opengraph_settings_section";s:0:"";s:30:"aioseop_opengraph_settings_tag";s:0:"";s:34:"aioseop_opengraph_settings_setcard";s:7:"summary";s:44:"aioseop_opengraph_settings_customimg_twitter";s:0:"";s:44:"aioseop_opengraph_settings_customimg_checker";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_subtitulo_panda]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595d62df5d062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_dark_menu]]></wp:meta_key>
			<wp:meta_value><![CDATA[field_595feac0430fa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpghs_github_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[_posts/2017-10-24-estrutura-e-build-para-projetos-net-core-com-cakexunit.md]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sha]]></wp:meta_key>
			<wp:meta_value><![CDATA[ac5efb29e31ec253cfa0a6f1aa6c5daa7d80578d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_encloseme]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
