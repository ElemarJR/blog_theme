#!/bin/bash
#
# Install and configure the website in the public directory
set -ex

# Read and import dotenv variables to script
dotenv () {
  DOTENV_SHELL_LOADER_SAVED_OPTS=$(set +o)
  set -o allexport
  [ -f .env ] && source .env
  set +o allexport
  eval "$DOTENV_SHELL_LOADER_SAVED_OPTS"
  unset DOTENV_SHELL_LOADER_SAVED_OPTS
}


# Parse arguments
# Adapted from Argbash (https://argbash.io/generate) generator
die()
{
    local _ret=$2
    test -n "$_ret" || _ret=1
    test "$_PRINT_HELP" = yes && print_help >&2
    echo "$1" >&2
    exit ${_ret}
}

begins_with_short_option()
{
    local first_option all_short_options
    all_short_options='d'
    first_option="${1:0:1}"
    test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

print_help ()
{
    printf 'Usage: %s [-d|--with-data]\n' "$0"
    printf "\t%s\n" "-d,--with-data: Install adding project data"
}

parse_commandline ()
{
    while test $# -gt 0
    do
        _key="$1"
        case "$_key" in
            -d|--with-data)
                _arg_with_data=TRUE
                shift
                ;;
            -h|--help)
                print_help
                exit 0
                ;;
            -h*)
                print_help
                exit 0
        esac
        shift
    done
}

parse_commandline "$@"

# Go to project root
cd $(dirname "$0")/..

wp='vendor/bin/wp --allow-root'

if [ ! -f .env ]; then
    echo 'Dotenv file not found'
    exit 1
fi

# Load project environment variables
dotenv

# Remove default WordPress packages 
rm -rf web/wp-content/themes/twenty*
rm -rf web/wp-content/plugins/hello.php
rm -rf web/wp-content/languages/plugins
rm -rf web/wp-content/languages/themes

# Generate env salts file
if [ ! -f .salts ]; then
    touch .salts
    $wp dotenv salts generate --file='.salts'
fi

# Install the WordPress if it isn't
if ! $wp core is-installed 2> /dev/null; then
    $wp db reset --yes 2> /dev/null || $wp db create
    $wp core install --title="${WP_TITLE}" --admin_user=${WP_USER} --admin_password=${WP_PASSWORD} --admin_email=${WP_EMAIL} --skip-email
fi

# Install extra plugins
plugins=app/plugins/*.zip
if [ $(ls -la ${plugins} 2> /dev/null | wc -l) -gt 0 ]; then # verify if has packages inner the directory
    for plugin in $plugins
    do
        if ! $wp plugin is-installed $(basename $plugin .zip); then
            $wp plugin install $plugin
        fi
    done
fi

# Install extra themes
themes=app/themes/*.zip
if [ $(ls -la ${themes} 2> /dev/null | wc -l) -gt 0 ]; then # verify if has packages inner the directory
    for theme in $themes
    do
        if ! $wp theme is-installed $(basename $theme .zip); then
            $wp theme install $theme
        fi
    done
fi

# Activate all plugins
$wp plugin activate --all

# Import data if the command has flag 'with-data'
if [ ! -z "${_arg_with_data+x}" ]; then
    datafiles=app/data/*.xml
    if [ $(ls -la ${datafiles} 2> /dev/null | wc -l) -gt 0 ]; then # verify if has files inner the directory
        for data in $datafiles
        do
            $wp wxr-importer import ${data}
        done
    fi
fi

# Install portuguese language
$wp language core install pt_BR --activate

# Update language of core, theme and plugins
$wp language core update

# Activate theme
$wp theme activate ${THEME}
